ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "lcd_stm32f4.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** // TODO: Add values for below variables
  37:Core/Src/main.c **** #define NS 128        // Number of samples in LUT
  38:Core/Src/main.c **** #define TIM2CLK 16000000  // STM Clock frequency: Hint You might want to check the ioc file
  39:Core/Src/main.c **** #define F_SIGNAL 5000	// Frequency of output analog signal
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** // TODO: Add code for global variables, including LUTs
  56:Core/Src/main.c **** uint32_t Sin_LUT[NS] = {2047, 2147, 2248, 2347, 2446, 2545, 2641, 2737, 2831, 2922, 3012, 3100, 318
  57:Core/Src/main.c **** uint32_t Saw_LUT[NS] = {0, 31, 63, 95, 127, 159, 191, 223, 255, 287, 319, 351, 383, 415, 447, 479, 
  58:Core/Src/main.c **** uint32_t Triangle_LUT[NS] = {0, 63, 127, 191, 255, 319, 383, 447, 511, 575, 639, 703, 767, 831, 895
  59:Core/Src/main.c **** uint32_t Piano_LUT[] = { 1901, 2046, 1834, 1955, 1916, 1944, 1890, 2020, 1954, 2015, 1940, 1908, 18
  60:Core/Src/main.c **** uint32_t Guitar_LUT[]= { 1970, 2297, 2295, 2048, 2021, 1777, 1748, 1936, 1437, 2016, 2004, 1975, 20
  61:Core/Src/main.c **** uint32_t Drum_LUT[] =  {2047, 793, 3449, 2356, 1864, 1729, 2188, 2008, 2048, 4095, 3263, 2800, 1888
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** ///hhj
  65:Core/Src/main.c **** // TODO: Equation to calculate TIM2_Ticks
  66:Core/Src/main.c **** uint32_t TIM2_Ticks = (TIM2CLK / (NS * F_SIGNAL))  ; // How often to write new LUT value
  67:Core/Src/main.c **** uint32_t DestAddress = (uint32_t) &(TIM3->CCR3); // Write LUT TO TIM3->CCR3 to modify PWM duty cycl
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/main.c **** void SystemClock_Config(void);
  74:Core/Src/main.c **** static void MX_GPIO_Init(void);
  75:Core/Src/main.c **** static void MX_DMA_Init(void);
  76:Core/Src/main.c **** static void MX_TIM2_Init(void);
  77:Core/Src/main.c **** static void MX_TIM3_Init(void);
  78:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  79:Core/Src/main.c **** void EXTI0_IRQHandler(void);
  80:Core/Src/main.c **** /* USER CODE END PFP */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 3


  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.c ****   HAL_Init();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Configure the system clock */
 108:Core/Src/main.c ****   SystemClock_Config();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Initialize all configured peripherals */
 115:Core/Src/main.c ****   MX_GPIO_Init();
 116:Core/Src/main.c ****   MX_DMA_Init();
 117:Core/Src/main.c ****   MX_TIM2_Init();
 118:Core/Src/main.c ****   MX_TIM3_Init();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c ****  
 122:Core/Src/main.c ****   // TODO: Start TIM3 in PWM mode on channel 3
 123:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 124:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 125:Core/Src/main.c ****   HAL_TIM_OC_Start(&htim2,TIM_CHANNEL_1);
 126:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 127:Core/Src/main.c ****  HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Sin_LUT, DestAddress , NS);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 130:Core/Src/main.c ****  init_LCD();
 131:Core/Src/main.c ****   lcd_command(CLEAR);
 132:Core/Src/main.c ****   lcd_command(CURSOR_HOME);
 133:Core/Src/main.c ****   lcd_putstring("Waveform: ");
 134:Core/Src/main.c ****   lcd_command(LINE_TWO);
 135:Core/Src/main.c ****   lcd_putstring("Sine");
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END 2 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Infinite loop */
 144:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 145:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 4


 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     /* USER CODE END WHILE */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   /* USER CODE END 3 */
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief System Clock Configuration
 156:Core/Src/main.c ****   * @retval None
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** void SystemClock_Config(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 166:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 169:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 175:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     Error_Handler();
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 197:Core/Src/main.c ****   * @param None
 198:Core/Src/main.c ****   * @retval None
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c **** static void MX_TIM2_Init(void)
 201:Core/Src/main.c **** {
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 208:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 209:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 214:Core/Src/main.c ****   htim2.Instance = TIM2;
 215:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 216:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 217:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks;
 218:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 219:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 220:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 225:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 234:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 235:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   sConfigOC.Pulse = TIM2_Ticks - 1;
 242:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 243:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 244:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 249:Core/Src/main.c ****   /* TIM2_CH1 DMA Init */
 250:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   hdma_tim2_ch1.Instance = DMA1_Stream5;
 253:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 254:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 255:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 256:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 257:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 258:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 259:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 6


 260:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 261:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****       Error_Handler();
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* Link DMA handle to TIM2 handle */
 269:Core/Src/main.c ****   __HAL_LINKDMA(&htim2, hdma[TIM_DMA_ID_CC1], hdma_tim2_ch1);
 270:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /**
 275:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 276:Core/Src/main.c ****   * @param None
 277:Core/Src/main.c ****   * @retval None
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c **** static void MX_TIM3_Init(void)
 280:Core/Src/main.c **** {
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 287:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 288:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 293:Core/Src/main.c ****   htim3.Instance = TIM3;
 294:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 295:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 296:Core/Src/main.c ****   htim3.Init.Period = 4095;
 297:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 298:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 299:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****     Error_Handler();
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 304:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 305:Core/Src/main.c ****   {
 306:Core/Src/main.c ****     Error_Handler();
 307:Core/Src/main.c ****   }
 308:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 313:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 314:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 7


 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 319:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 320:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 321:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 322:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 329:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** }
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****   * Enable DMA controller clock
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c **** static void MX_DMA_Init(void)
 337:Core/Src/main.c **** {
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* DMA controller clock enable */
 340:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* DMA interrupt init */
 343:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 344:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 345:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** }
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** /**
 350:Core/Src/main.c ****   * @brief GPIO Initialization Function
 351:Core/Src/main.c ****   * @param None
 352:Core/Src/main.c ****   * @retval None
 353:Core/Src/main.c ****   */
 354:Core/Src/main.c **** static void MX_GPIO_Init(void)
 355:Core/Src/main.c **** {
  28              		.loc 1 355 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 89B0     		sub	sp, sp, #36
  44              		.cfi_def_cfa_offset 72
 356:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 8


  45              		.loc 1 356 3 view .LVU1
  46              		.loc 1 356 20 is_stmt 0 view .LVU2
  47 0006 03AD     		add	r5, sp, #12
  48 0008 0024     		movs	r4, #0
  49 000a 0394     		str	r4, [sp, #12]
  50 000c 0494     		str	r4, [sp, #16]
  51 000e 0594     		str	r4, [sp, #20]
  52 0010 0694     		str	r4, [sp, #24]
  53 0012 0794     		str	r4, [sp, #28]
 357:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 362:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  54              		.loc 1 362 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 362 3 view .LVU4
  57 0014 0094     		str	r4, [sp]
  58              		.loc 1 362 3 view .LVU5
  59 0016 2F4B     		ldr	r3, .L3
  60 0018 1A6B     		ldr	r2, [r3, #48]
  61 001a 42F08002 		orr	r2, r2, #128
  62 001e 1A63     		str	r2, [r3, #48]
  63              		.loc 1 362 3 view .LVU6
  64 0020 1A6B     		ldr	r2, [r3, #48]
  65 0022 02F08002 		and	r2, r2, #128
  66 0026 0092     		str	r2, [sp]
  67              		.loc 1 362 3 view .LVU7
  68 0028 009A     		ldr	r2, [sp]
  69              	.LBE4:
  70              		.loc 1 362 3 view .LVU8
 363:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  71              		.loc 1 363 3 view .LVU9
  72              	.LBB5:
  73              		.loc 1 363 3 view .LVU10
  74 002a 0194     		str	r4, [sp, #4]
  75              		.loc 1 363 3 view .LVU11
  76 002c 1A6B     		ldr	r2, [r3, #48]
  77 002e 42F00102 		orr	r2, r2, #1
  78 0032 1A63     		str	r2, [r3, #48]
  79              		.loc 1 363 3 view .LVU12
  80 0034 1A6B     		ldr	r2, [r3, #48]
  81 0036 02F00102 		and	r2, r2, #1
  82 003a 0192     		str	r2, [sp, #4]
  83              		.loc 1 363 3 view .LVU13
  84 003c 019A     		ldr	r2, [sp, #4]
  85              	.LBE5:
  86              		.loc 1 363 3 view .LVU14
 364:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  87              		.loc 1 364 3 view .LVU15
  88              	.LBB6:
  89              		.loc 1 364 3 view .LVU16
  90 003e 0294     		str	r4, [sp, #8]
  91              		.loc 1 364 3 view .LVU17
  92 0040 1A6B     		ldr	r2, [r3, #48]
  93 0042 42F00202 		orr	r2, r2, #2
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 9


  94 0046 1A63     		str	r2, [r3, #48]
  95              		.loc 1 364 3 view .LVU18
  96 0048 1B6B     		ldr	r3, [r3, #48]
  97 004a 03F00203 		and	r3, r3, #2
  98 004e 0293     		str	r3, [sp, #8]
  99              		.loc 1 364 3 view .LVU19
 100 0050 029B     		ldr	r3, [sp, #8]
 101              	.LBE6:
 102              		.loc 1 364 3 view .LVU20
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   // -------------------------------
 367:Core/Src/main.c ****   // LCD pins configuration
 368:Core/Src/main.c ****   // -------------------------------
 369:Core/Src/main.c ****   // Configure PC14 (RS) and PC15 (E) as output push-pull
 370:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14 | GPIO_PIN_15;
 103              		.loc 1 370 3 view .LVU21
 104              		.loc 1 370 23 is_stmt 0 view .LVU22
 105 0052 4FF4404B 		mov	fp, #49152
 106 0056 CDF80CB0 		str	fp, [sp, #12]
 371:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107              		.loc 1 371 3 is_stmt 1 view .LVU23
 108              		.loc 1 371 24 is_stmt 0 view .LVU24
 109 005a 0127     		movs	r7, #1
 110 005c 0497     		str	r7, [sp, #16]
 372:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 372 3 is_stmt 1 view .LVU25
 373:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 112              		.loc 1 373 3 view .LVU26
 374:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 113              		.loc 1 374 3 view .LVU27
 114 005e DFF880A0 		ldr	r10, .L3+12
 115 0062 2946     		mov	r1, r5
 116 0064 5046     		mov	r0, r10
 117 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL0:
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   // Configure PB8 (D4) and PB9 (D5) as output push-pull
 377:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 119              		.loc 1 377 3 view .LVU28
 120              		.loc 1 377 23 is_stmt 0 view .LVU29
 121 006a 4FF44079 		mov	r9, #768
 122 006e CDF80C90 		str	r9, [sp, #12]
 378:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 123              		.loc 1 378 3 is_stmt 1 view .LVU30
 124 0072 2946     		mov	r1, r5
 125 0074 1848     		ldr	r0, .L3+4
 126 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL1:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   // Configure PA12 (D6) and PA15 (D7) as output push-pull
 381:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_15;
 128              		.loc 1 381 3 view .LVU31
 129              		.loc 1 381 23 is_stmt 0 view .LVU32
 130 007a 4FF41048 		mov	r8, #36864
 131 007e CDF80C80 		str	r8, [sp, #12]
 382:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 132              		.loc 1 382 3 is_stmt 1 view .LVU33
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 10


 133 0082 164E     		ldr	r6, .L3+8
 134 0084 2946     		mov	r1, r5
 135 0086 3046     		mov	r0, r6
 136 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL2:
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   // Set all LCD pins LOW initially
 385:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14 | GPIO_PIN_15, GPIO_PIN_RESET);
 138              		.loc 1 385 3 view .LVU34
 139 008c 2246     		mov	r2, r4
 140 008e 5946     		mov	r1, fp
 141 0090 5046     		mov	r0, r10
 142 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL3:
 386:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 144              		.loc 1 386 3 view .LVU35
 145 0096 2246     		mov	r2, r4
 146 0098 4946     		mov	r1, r9
 147 009a 0F48     		ldr	r0, .L3+4
 148 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 149              	.LVL4:
 387:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12 | GPIO_PIN_15, GPIO_PIN_RESET);
 150              		.loc 1 387 3 view .LVU36
 151 00a0 2246     		mov	r2, r4
 152 00a2 4146     		mov	r1, r8
 153 00a4 3046     		mov	r0, r6
 154 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 155              	.LVL5:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   // -------------------------------
 391:Core/Src/main.c ****   // Button0 configuration (PA0)
 392:Core/Src/main.c ****   // -------------------------------
 393:Core/Src/main.c ****   GPIO_InitStruct.Pin = Button0_Pin;
 156              		.loc 1 393 3 view .LVU37
 157              		.loc 1 393 23 is_stmt 0 view .LVU38
 158 00aa 0397     		str	r7, [sp, #12]
 394:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING; // Interrupt on rising edge
 159              		.loc 1 394 3 is_stmt 1 view .LVU39
 160              		.loc 1 394 24 is_stmt 0 view .LVU40
 161 00ac 4FF48813 		mov	r3, #1114112
 162 00b0 0493     		str	r3, [sp, #16]
 395:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;         // Use pull-up resistor
 163              		.loc 1 395 3 is_stmt 1 view .LVU41
 164              		.loc 1 395 24 is_stmt 0 view .LVU42
 165 00b2 0597     		str	r7, [sp, #20]
 396:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 396 3 is_stmt 1 view .LVU43
 167 00b4 2946     		mov	r1, r5
 168 00b6 3046     		mov	r0, r6
 169 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL6:
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   // Enable and set EXTI line 0 interrupt priority
 399:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 171              		.loc 1 399 3 view .LVU44
 172 00bc 2246     		mov	r2, r4
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 11


 173 00be 0221     		movs	r1, #2
 174 00c0 0620     		movs	r0, #6
 175 00c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 176              	.LVL7:
 400:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 177              		.loc 1 400 3 view .LVU45
 178 00c6 0620     		movs	r0, #6
 179 00c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 180              	.LVL8:
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 403:Core/Src/main.c **** }
 181              		.loc 1 403 1 is_stmt 0 view .LVU46
 182 00cc 09B0     		add	sp, sp, #36
 183              		.cfi_def_cfa_offset 36
 184              		@ sp needed
 185 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 186              	.L4:
 187 00d2 00BF     		.align	2
 188              	.L3:
 189 00d4 00380240 		.word	1073887232
 190 00d8 00040240 		.word	1073873920
 191 00dc 00000240 		.word	1073872896
 192 00e0 00080240 		.word	1073874944
 193              		.cfi_endproc
 194              	.LFE142:
 196              		.section	.text.MX_DMA_Init,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	MX_DMA_Init:
 203              	.LFB141:
 337:Core/Src/main.c **** 
 204              		.loc 1 337 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 00B5     		push	{lr}
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 14, -4
 211 0002 83B0     		sub	sp, sp, #12
 212              		.cfi_def_cfa_offset 16
 340:Core/Src/main.c **** 
 213              		.loc 1 340 3 view .LVU48
 214              	.LBB7:
 340:Core/Src/main.c **** 
 215              		.loc 1 340 3 view .LVU49
 216 0004 0021     		movs	r1, #0
 217 0006 0191     		str	r1, [sp, #4]
 340:Core/Src/main.c **** 
 218              		.loc 1 340 3 view .LVU50
 219 0008 094B     		ldr	r3, .L7
 220 000a 1A6B     		ldr	r2, [r3, #48]
 221 000c 42F40012 		orr	r2, r2, #2097152
 222 0010 1A63     		str	r2, [r3, #48]
 340:Core/Src/main.c **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 12


 223              		.loc 1 340 3 view .LVU51
 224 0012 1B6B     		ldr	r3, [r3, #48]
 225 0014 03F40013 		and	r3, r3, #2097152
 226 0018 0193     		str	r3, [sp, #4]
 340:Core/Src/main.c **** 
 227              		.loc 1 340 3 view .LVU52
 228 001a 019B     		ldr	r3, [sp, #4]
 229              	.LBE7:
 340:Core/Src/main.c **** 
 230              		.loc 1 340 3 view .LVU53
 344:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 231              		.loc 1 344 3 view .LVU54
 232 001c 0A46     		mov	r2, r1
 233 001e 1020     		movs	r0, #16
 234 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 235              	.LVL9:
 345:Core/Src/main.c **** 
 236              		.loc 1 345 3 view .LVU55
 237 0024 1020     		movs	r0, #16
 238 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 239              	.LVL10:
 347:Core/Src/main.c **** 
 240              		.loc 1 347 1 is_stmt 0 view .LVU56
 241 002a 03B0     		add	sp, sp, #12
 242              		.cfi_def_cfa_offset 4
 243              		@ sp needed
 244 002c 5DF804FB 		ldr	pc, [sp], #4
 245              	.L8:
 246              		.align	2
 247              	.L7:
 248 0030 00380240 		.word	1073887232
 249              		.cfi_endproc
 250              	.LFE141:
 252              		.section	.rodata.EXTI0_IRQHandler.str1.4,"aMS",%progbits,1
 253              		.align	2
 254              	.LC0:
 255 0000 57617665 		.ascii	"Waveform:\000"
 255      666F726D 
 255      3A00
 256              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 257              		.align	1
 258              		.global	EXTI0_IRQHandler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	EXTI0_IRQHandler:
 264              	.LFB143:
 404:Core/Src/main.c **** volatile uint32_t lastDebounceTick = 0;
 405:Core/Src/main.c **** #define DEBOUNCE_DELAY 200  // ms
 406:Core/Src/main.c **** extern uint32_t Sin_LUT[NS];
 407:Core/Src/main.c **** extern uint32_t Drum_LUT[256];
 408:Core/Src/main.c **** // Add other LUTs here
 409:Core/Src/main.c **** typedef enum {
 410:Core/Src/main.c ****     WAVE_SINE = 0,
 411:Core/Src/main.c ****     WAVE_SAW,
 412:Core/Src/main.c ****     WAVE_TRIANGLE,
 413:Core/Src/main.c ****     WAVE_PIANO,
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 13


 414:Core/Src/main.c ****     WAVE_GUITAR,
 415:Core/Src/main.c ****     WAVE_DRUM,
 416:Core/Src/main.c ****     WAVE_COUNT
 417:Core/Src/main.c **** } WaveformType;
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** volatile WaveformType currentWave = WAVE_SINE;
 420:Core/Src/main.c **** // enum to track which waveform is active
 421:Core/Src/main.c **** uint32_t* waveforms[WAVE_COUNT] = {
 422:Core/Src/main.c ****     Sin_LUT,     // WAVE_SINE
 423:Core/Src/main.c ****     Saw_LUT,     // WAVE_SAW
 424:Core/Src/main.c ****     Triangle_LUT,     // WAVE_TRIANGLE
 425:Core/Src/main.c ****     Piano_LUT,   // WAVE_PIANO
 426:Core/Src/main.c ****     Guitar_LUT,  // WAVE_GUITAR
 427:Core/Src/main.c ****     Drum_LUT     // WAVE_DRUM
 428:Core/Src/main.c **** };
 429:Core/Src/main.c **** //A table of pointers for the wave forms
 430:Core/Src/main.c **** const char* waveNames[WAVE_COUNT] = {
 431:Core/Src/main.c ****     "Sine", "Sawtooth", "Triangle", "Piano", "Guitar", "Drum"
 432:Core/Src/main.c **** };
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 436:Core/Src/main.c **** void EXTI0_IRQHandler(void){
 265              		.loc 1 436 28 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 70B5     		push	{r4, r5, r6, lr}
 270              		.cfi_def_cfa_offset 16
 271              		.cfi_offset 4, -16
 272              		.cfi_offset 5, -12
 273              		.cfi_offset 6, -8
 274              		.cfi_offset 14, -4
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** 	// TODO: Debounce using HAL_GetTick()
 439:Core/Src/main.c **** 	// TODO: Disable DMA transfer and abort IT, then start DMA in IT mode with new LUT and re-enable t
 440:Core/Src/main.c **** 	// HINT: Consider using C's "switch" function to handle LUT changes
 441:Core/Src/main.c **** HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0); // Clear interrupt
 275              		.loc 1 441 1 view .LVU58
 276 0002 0120     		movs	r0, #1
 277 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 278              	.LVL11:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****     uint32_t tick = HAL_GetTick();
 279              		.loc 1 443 5 view .LVU59
 280              		.loc 1 443 21 is_stmt 0 view .LVU60
 281 0008 FFF7FEFF 		bl	HAL_GetTick
 282              	.LVL12:
 444:Core/Src/main.c ****     if ((tick - lastDebounceTick) > DEBOUNCE_DELAY)
 283              		.loc 1 444 5 is_stmt 1 view .LVU61
 284              		.loc 1 444 15 is_stmt 0 view .LVU62
 285 000c 224B     		ldr	r3, .L13
 286 000e 1B68     		ldr	r3, [r3]
 287 0010 C31A     		subs	r3, r0, r3
 288              		.loc 1 444 8 view .LVU63
 289 0012 C82B     		cmp	r3, #200
 290 0014 00D8     		bhi	.L12
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 14


 291              	.LVL13:
 292              	.L9:
 445:Core/Src/main.c ****     {
 446:Core/Src/main.c ****         lastDebounceTick = tick;
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****         // Stop current DMA
 449:Core/Src/main.c ****         __HAL_TIM_DISABLE_DMA(&htim2, TIM_DMA_CC1);
 450:Core/Src/main.c ****         HAL_DMA_Abort_IT(&hdma_tim2_ch1);
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****         // Move to next waveform
 453:Core/Src/main.c ****         currentWave = (currentWave + 1) % WAVE_COUNT;
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****       HAL_DMA_Start_IT(&hdma_tim2_ch1,(uint32_t)waveforms[currentWave],DestAddress, NS);
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****         __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 458:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 459:Core/Src/main.c ****         // Update LCD
 460:Core/Src/main.c ****         lcd_command(CLEAR);
 461:Core/Src/main.c ****         lcd_command(CURSOR_HOME);
 462:Core/Src/main.c ****         lcd_putstring("Waveform:");
 463:Core/Src/main.c ****         lcd_command(LINE_TWO);
 464:Core/Src/main.c ****         lcd_putstring((char*)waveNames[currentWave]);
 465:Core/Src/main.c ****     }
 466:Core/Src/main.c **** }
 293              		.loc 1 466 1 view .LVU64
 294 0016 70BD     		pop	{r4, r5, r6, pc}
 295              	.LVL14:
 296              	.L12:
 446:Core/Src/main.c **** 
 297              		.loc 1 446 9 is_stmt 1 view .LVU65
 446:Core/Src/main.c **** 
 298              		.loc 1 446 26 is_stmt 0 view .LVU66
 299 0018 1F4B     		ldr	r3, .L13
 300 001a 1860     		str	r0, [r3]
 449:Core/Src/main.c ****         HAL_DMA_Abort_IT(&hdma_tim2_ch1);
 301              		.loc 1 449 9 is_stmt 1 view .LVU67
 302 001c 1F4D     		ldr	r5, .L13+4
 303 001e 2A68     		ldr	r2, [r5]
 304 0020 D368     		ldr	r3, [r2, #12]
 305 0022 23F40073 		bic	r3, r3, #512
 306 0026 D360     		str	r3, [r2, #12]
 450:Core/Src/main.c **** 
 307              		.loc 1 450 9 view .LVU68
 308 0028 1D4E     		ldr	r6, .L13+8
 309 002a 3046     		mov	r0, r6
 310              	.LVL15:
 450:Core/Src/main.c **** 
 311              		.loc 1 450 9 is_stmt 0 view .LVU69
 312 002c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 313              	.LVL16:
 453:Core/Src/main.c **** 
 314              		.loc 1 453 9 is_stmt 1 view .LVU70
 453:Core/Src/main.c **** 
 315              		.loc 1 453 36 is_stmt 0 view .LVU71
 316 0030 1C4C     		ldr	r4, .L13+12
 317 0032 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 318 0034 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 15


 453:Core/Src/main.c **** 
 319              		.loc 1 453 41 view .LVU72
 320 0036 1C4A     		ldr	r2, .L13+16
 321 0038 82FB0312 		smull	r1, r2, r2, r3
 322 003c 02EB4202 		add	r2, r2, r2, lsl #1
 323 0040 A3EB4203 		sub	r3, r3, r2, lsl #1
 324 0044 DBB2     		uxtb	r3, r3
 453:Core/Src/main.c **** 
 325              		.loc 1 453 21 view .LVU73
 326 0046 2370     		strb	r3, [r4]
 455:Core/Src/main.c **** 
 327              		.loc 1 455 7 is_stmt 1 view .LVU74
 455:Core/Src/main.c **** 
 328              		.loc 1 455 58 is_stmt 0 view .LVU75
 329 0048 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 455:Core/Src/main.c **** 
 330              		.loc 1 455 7 view .LVU76
 331 004a 8023     		movs	r3, #128
 332 004c 174A     		ldr	r2, .L13+20
 333 004e 1268     		ldr	r2, [r2]
 334 0050 1749     		ldr	r1, .L13+24
 335 0052 51F82010 		ldr	r1, [r1, r0, lsl #2]
 336 0056 3046     		mov	r0, r6
 337 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 338              	.LVL17:
 457:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 339              		.loc 1 457 9 is_stmt 1 view .LVU77
 340 005c 2A68     		ldr	r2, [r5]
 341 005e D368     		ldr	r3, [r2, #12]
 342 0060 43F40073 		orr	r3, r3, #512
 343 0064 D360     		str	r3, [r2, #12]
 458:Core/Src/main.c ****         // Update LCD
 344              		.loc 1 458 9 view .LVU78
 345 0066 0122     		movs	r2, #1
 346 0068 2021     		movs	r1, #32
 347 006a 1248     		ldr	r0, .L13+28
 348 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 349              	.LVL18:
 460:Core/Src/main.c ****         lcd_command(CURSOR_HOME);
 350              		.loc 1 460 9 view .LVU79
 351 0070 0120     		movs	r0, #1
 352 0072 FFF7FEFF 		bl	lcd_command
 353              	.LVL19:
 461:Core/Src/main.c ****         lcd_putstring("Waveform:");
 354              		.loc 1 461 9 view .LVU80
 355 0076 0220     		movs	r0, #2
 356 0078 FFF7FEFF 		bl	lcd_command
 357              	.LVL20:
 462:Core/Src/main.c ****         lcd_command(LINE_TWO);
 358              		.loc 1 462 9 view .LVU81
 359 007c 0E48     		ldr	r0, .L13+32
 360 007e FFF7FEFF 		bl	lcd_putstring
 361              	.LVL21:
 463:Core/Src/main.c ****         lcd_putstring((char*)waveNames[currentWave]);
 362              		.loc 1 463 9 view .LVU82
 363 0082 C020     		movs	r0, #192
 364 0084 FFF7FEFF 		bl	lcd_command
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 16


 365              	.LVL22:
 464:Core/Src/main.c ****     }
 366              		.loc 1 464 9 view .LVU83
 367 0088 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 368 008a 0C4B     		ldr	r3, .L13+36
 369 008c 53F82200 		ldr	r0, [r3, r2, lsl #2]
 370 0090 FFF7FEFF 		bl	lcd_putstring
 371              	.LVL23:
 372              		.loc 1 466 1 is_stmt 0 view .LVU84
 373 0094 BFE7     		b	.L9
 374              	.L14:
 375 0096 00BF     		.align	2
 376              	.L13:
 377 0098 00000000 		.word	lastDebounceTick
 378 009c 00000000 		.word	htim2
 379 00a0 00000000 		.word	hdma_tim2_ch1
 380 00a4 00000000 		.word	currentWave
 381 00a8 ABAAAA2A 		.word	715827883
 382 00ac 00000000 		.word	DestAddress
 383 00b0 00000000 		.word	waveforms
 384 00b4 00000240 		.word	1073872896
 385 00b8 00000000 		.word	.LC0
 386 00bc 00000000 		.word	waveNames
 387              		.cfi_endproc
 388              	.LFE143:
 390              		.section	.text.Error_Handler,"ax",%progbits
 391              		.align	1
 392              		.global	Error_Handler
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	Error_Handler:
 398              	.LFB144:
 467:Core/Src/main.c **** /* USER CODE END 4 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** /**
 470:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 471:Core/Src/main.c ****   * @retval None
 472:Core/Src/main.c ****   */
 473:Core/Src/main.c **** void Error_Handler(void)
 474:Core/Src/main.c **** {
 399              		.loc 1 474 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ Volatile: function does not return.
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 475:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 476:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 477:Core/Src/main.c ****   __disable_irq();
 405              		.loc 1 477 3 view .LVU86
 406              	.LBB8:
 407              	.LBI8:
 408              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 17


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 18


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 19


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 20


 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 21


 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 22


 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 23


 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 24


 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 25


 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 26


 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 27


 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 28


 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 29


 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 30


 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 31


 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 32


 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 33


 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 409              		.loc 2 960 27 view .LVU87
 410              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 411              		.loc 2 962 3 view .LVU88
 412              		.syntax unified
 413              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 414 0000 72B6     		cpsid i
 415              	@ 0 "" 2
 416              		.thumb
 417              		.syntax unified
 418              	.L16:
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 34


 419              	.LBE9:
 420              	.LBE8:
 478:Core/Src/main.c ****   while (1)
 421              		.loc 1 478 3 view .LVU89
 479:Core/Src/main.c ****   {
 480:Core/Src/main.c ****   }
 422              		.loc 1 480 3 view .LVU90
 478:Core/Src/main.c ****   while (1)
 423              		.loc 1 478 9 view .LVU91
 424 0002 FEE7     		b	.L16
 425              		.cfi_endproc
 426              	.LFE144:
 428              		.section	.text.MX_TIM2_Init,"ax",%progbits
 429              		.align	1
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	MX_TIM2_Init:
 435              	.LFB139:
 201:Core/Src/main.c **** 
 436              		.loc 1 201 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 56
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440 0000 00B5     		push	{lr}
 441              		.cfi_def_cfa_offset 4
 442              		.cfi_offset 14, -4
 443 0002 8FB0     		sub	sp, sp, #60
 444              		.cfi_def_cfa_offset 64
 207:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 445              		.loc 1 207 3 view .LVU93
 207:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 446              		.loc 1 207 26 is_stmt 0 view .LVU94
 447 0004 0023     		movs	r3, #0
 448 0006 0A93     		str	r3, [sp, #40]
 449 0008 0B93     		str	r3, [sp, #44]
 450 000a 0C93     		str	r3, [sp, #48]
 451 000c 0D93     		str	r3, [sp, #52]
 208:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 452              		.loc 1 208 3 is_stmt 1 view .LVU95
 208:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 453              		.loc 1 208 27 is_stmt 0 view .LVU96
 454 000e 0893     		str	r3, [sp, #32]
 455 0010 0993     		str	r3, [sp, #36]
 209:Core/Src/main.c **** 
 456              		.loc 1 209 3 is_stmt 1 view .LVU97
 209:Core/Src/main.c **** 
 457              		.loc 1 209 22 is_stmt 0 view .LVU98
 458 0012 0193     		str	r3, [sp, #4]
 459 0014 0293     		str	r3, [sp, #8]
 460 0016 0393     		str	r3, [sp, #12]
 461 0018 0493     		str	r3, [sp, #16]
 462 001a 0593     		str	r3, [sp, #20]
 463 001c 0693     		str	r3, [sp, #24]
 464 001e 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 465              		.loc 1 214 3 is_stmt 1 view .LVU99
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 35


 214:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 466              		.loc 1 214 18 is_stmt 0 view .LVU100
 467 0020 3748     		ldr	r0, .L31
 468 0022 4FF08042 		mov	r2, #1073741824
 469 0026 0260     		str	r2, [r0]
 215:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 470              		.loc 1 215 3 is_stmt 1 view .LVU101
 215:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 471              		.loc 1 215 24 is_stmt 0 view .LVU102
 472 0028 4360     		str	r3, [r0, #4]
 216:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks;
 473              		.loc 1 216 3 is_stmt 1 view .LVU103
 216:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks;
 474              		.loc 1 216 26 is_stmt 0 view .LVU104
 475 002a 8360     		str	r3, [r0, #8]
 217:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 476              		.loc 1 217 3 is_stmt 1 view .LVU105
 217:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 477              		.loc 1 217 21 is_stmt 0 view .LVU106
 478 002c 354A     		ldr	r2, .L31+4
 479 002e 1268     		ldr	r2, [r2]
 480 0030 C260     		str	r2, [r0, #12]
 218:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 481              		.loc 1 218 3 is_stmt 1 view .LVU107
 218:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 482              		.loc 1 218 28 is_stmt 0 view .LVU108
 483 0032 0361     		str	r3, [r0, #16]
 219:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 484              		.loc 1 219 3 is_stmt 1 view .LVU109
 219:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 485              		.loc 1 219 32 is_stmt 0 view .LVU110
 486 0034 8361     		str	r3, [r0, #24]
 220:Core/Src/main.c ****   {
 487              		.loc 1 220 3 is_stmt 1 view .LVU111
 220:Core/Src/main.c ****   {
 488              		.loc 1 220 7 is_stmt 0 view .LVU112
 489 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 490              	.LVL24:
 220:Core/Src/main.c ****   {
 491              		.loc 1 220 6 discriminator 1 view .LVU113
 492 003a 0028     		cmp	r0, #0
 493 003c 53D1     		bne	.L25
 224:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 494              		.loc 1 224 3 is_stmt 1 view .LVU114
 224:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 495              		.loc 1 224 34 is_stmt 0 view .LVU115
 496 003e 4FF48053 		mov	r3, #4096
 497 0042 0A93     		str	r3, [sp, #40]
 225:Core/Src/main.c ****   {
 498              		.loc 1 225 3 is_stmt 1 view .LVU116
 225:Core/Src/main.c ****   {
 499              		.loc 1 225 7 is_stmt 0 view .LVU117
 500 0044 0AA9     		add	r1, sp, #40
 501 0046 2E48     		ldr	r0, .L31
 502 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 503              	.LVL25:
 225:Core/Src/main.c ****   {
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 36


 504              		.loc 1 225 6 discriminator 1 view .LVU118
 505 004c 0028     		cmp	r0, #0
 506 004e 4CD1     		bne	.L26
 229:Core/Src/main.c ****   {
 507              		.loc 1 229 3 is_stmt 1 view .LVU119
 229:Core/Src/main.c ****   {
 508              		.loc 1 229 7 is_stmt 0 view .LVU120
 509 0050 2B48     		ldr	r0, .L31
 510 0052 FFF7FEFF 		bl	HAL_TIM_OC_Init
 511              	.LVL26:
 229:Core/Src/main.c ****   {
 512              		.loc 1 229 6 discriminator 1 view .LVU121
 513 0056 0028     		cmp	r0, #0
 514 0058 49D1     		bne	.L27
 233:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 515              		.loc 1 233 3 is_stmt 1 view .LVU122
 233:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 516              		.loc 1 233 37 is_stmt 0 view .LVU123
 517 005a 0023     		movs	r3, #0
 518 005c 0893     		str	r3, [sp, #32]
 234:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 519              		.loc 1 234 3 is_stmt 1 view .LVU124
 234:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 520              		.loc 1 234 33 is_stmt 0 view .LVU125
 521 005e 0993     		str	r3, [sp, #36]
 235:Core/Src/main.c ****   {
 522              		.loc 1 235 3 is_stmt 1 view .LVU126
 235:Core/Src/main.c ****   {
 523              		.loc 1 235 7 is_stmt 0 view .LVU127
 524 0060 08A9     		add	r1, sp, #32
 525 0062 2748     		ldr	r0, .L31
 526 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 527              	.LVL27:
 235:Core/Src/main.c ****   {
 528              		.loc 1 235 6 discriminator 1 view .LVU128
 529 0068 0028     		cmp	r0, #0
 530 006a 42D1     		bne	.L28
 239:Core/Src/main.c **** 
 531              		.loc 1 239 3 is_stmt 1 view .LVU129
 239:Core/Src/main.c **** 
 532              		.loc 1 239 20 is_stmt 0 view .LVU130
 533 006c 0022     		movs	r2, #0
 534 006e 0192     		str	r2, [sp, #4]
 241:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 535              		.loc 1 241 3 is_stmt 1 view .LVU131
 241:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 536              		.loc 1 241 32 is_stmt 0 view .LVU132
 537 0070 244B     		ldr	r3, .L31+4
 538 0072 1B68     		ldr	r3, [r3]
 539 0074 013B     		subs	r3, r3, #1
 241:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 540              		.loc 1 241 19 view .LVU133
 541 0076 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 542              		.loc 1 242 3 is_stmt 1 view .LVU134
 242:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 543              		.loc 1 242 24 is_stmt 0 view .LVU135
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 37


 544 0078 0392     		str	r2, [sp, #12]
 243:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 545              		.loc 1 243 3 is_stmt 1 view .LVU136
 243:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 546              		.loc 1 243 24 is_stmt 0 view .LVU137
 547 007a 0592     		str	r2, [sp, #20]
 244:Core/Src/main.c ****   {
 548              		.loc 1 244 3 is_stmt 1 view .LVU138
 244:Core/Src/main.c ****   {
 549              		.loc 1 244 7 is_stmt 0 view .LVU139
 550 007c 01A9     		add	r1, sp, #4
 551 007e 2048     		ldr	r0, .L31
 552 0080 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 553              	.LVL28:
 244:Core/Src/main.c ****   {
 554              		.loc 1 244 6 discriminator 1 view .LVU140
 555 0084 0028     		cmp	r0, #0
 556 0086 36D1     		bne	.L29
 250:Core/Src/main.c **** 
 557              		.loc 1 250 3 is_stmt 1 view .LVU141
 558              	.LBB10:
 250:Core/Src/main.c **** 
 559              		.loc 1 250 3 view .LVU142
 560 0088 0023     		movs	r3, #0
 561 008a 0093     		str	r3, [sp]
 250:Core/Src/main.c **** 
 562              		.loc 1 250 3 view .LVU143
 563 008c 1E4A     		ldr	r2, .L31+8
 564 008e 116B     		ldr	r1, [r2, #48]
 565 0090 41F40011 		orr	r1, r1, #2097152
 566 0094 1163     		str	r1, [r2, #48]
 250:Core/Src/main.c **** 
 567              		.loc 1 250 3 view .LVU144
 568 0096 126B     		ldr	r2, [r2, #48]
 569 0098 02F40012 		and	r2, r2, #2097152
 570 009c 0092     		str	r2, [sp]
 250:Core/Src/main.c **** 
 571              		.loc 1 250 3 view .LVU145
 572 009e 009A     		ldr	r2, [sp]
 573              	.LBE10:
 250:Core/Src/main.c **** 
 574              		.loc 1 250 3 view .LVU146
 252:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 575              		.loc 1 252 3 view .LVU147
 252:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 576              		.loc 1 252 26 is_stmt 0 view .LVU148
 577 00a0 1A48     		ldr	r0, .L31+12
 578 00a2 1B4A     		ldr	r2, .L31+16
 579 00a4 0260     		str	r2, [r0]
 253:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 580              		.loc 1 253 3 is_stmt 1 view .LVU149
 253:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 581              		.loc 1 253 30 is_stmt 0 view .LVU150
 582 00a6 4FF0C062 		mov	r2, #100663296
 583 00aa 4260     		str	r2, [r0, #4]
 254:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 584              		.loc 1 254 3 is_stmt 1 view .LVU151
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 38


 254:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 585              		.loc 1 254 32 is_stmt 0 view .LVU152
 586 00ac 4022     		movs	r2, #64
 587 00ae 8260     		str	r2, [r0, #8]
 255:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 588              		.loc 1 255 3 is_stmt 1 view .LVU153
 255:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 589              		.loc 1 255 32 is_stmt 0 view .LVU154
 590 00b0 C360     		str	r3, [r0, #12]
 256:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 591              		.loc 1 256 3 is_stmt 1 view .LVU155
 256:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 592              		.loc 1 256 29 is_stmt 0 view .LVU156
 593 00b2 4FF48062 		mov	r2, #1024
 594 00b6 0261     		str	r2, [r0, #16]
 257:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 595              		.loc 1 257 3 is_stmt 1 view .LVU157
 257:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 596              		.loc 1 257 42 is_stmt 0 view .LVU158
 597 00b8 4FF48052 		mov	r2, #4096
 598 00bc 4261     		str	r2, [r0, #20]
 258:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 599              		.loc 1 258 3 is_stmt 1 view .LVU159
 258:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 600              		.loc 1 258 39 is_stmt 0 view .LVU160
 601 00be 4FF48042 		mov	r2, #16384
 602 00c2 8261     		str	r2, [r0, #24]
 259:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 603              		.loc 1 259 3 is_stmt 1 view .LVU161
 259:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 604              		.loc 1 259 27 is_stmt 0 view .LVU162
 605 00c4 4FF48072 		mov	r2, #256
 606 00c8 C261     		str	r2, [r0, #28]
 260:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 607              		.loc 1 260 3 is_stmt 1 view .LVU163
 260:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 608              		.loc 1 260 31 is_stmt 0 view .LVU164
 609 00ca 4FF40032 		mov	r2, #131072
 610 00ce 0262     		str	r2, [r0, #32]
 261:Core/Src/main.c **** 
 611              		.loc 1 261 3 is_stmt 1 view .LVU165
 261:Core/Src/main.c **** 
 612              		.loc 1 261 31 is_stmt 0 view .LVU166
 613 00d0 4362     		str	r3, [r0, #36]
 263:Core/Src/main.c ****   {
 614              		.loc 1 263 3 is_stmt 1 view .LVU167
 263:Core/Src/main.c ****   {
 615              		.loc 1 263 7 is_stmt 0 view .LVU168
 616 00d2 FFF7FEFF 		bl	HAL_DMA_Init
 617              	.LVL29:
 263:Core/Src/main.c ****   {
 618              		.loc 1 263 6 discriminator 1 view .LVU169
 619 00d6 80B9     		cbnz	r0, .L30
 269:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 620              		.loc 1 269 3 is_stmt 1 view .LVU170
 269:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 621              		.loc 1 269 3 view .LVU171
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 39


 622 00d8 094A     		ldr	r2, .L31
 623 00da 0C4B     		ldr	r3, .L31+12
 624 00dc 5362     		str	r3, [r2, #36]
 269:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 625              		.loc 1 269 3 view .LVU172
 626 00de 9A63     		str	r2, [r3, #56]
 269:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 627              		.loc 1 269 3 view .LVU173
 272:Core/Src/main.c **** 
 628              		.loc 1 272 1 is_stmt 0 view .LVU174
 629 00e0 0FB0     		add	sp, sp, #60
 630              		.cfi_remember_state
 631              		.cfi_def_cfa_offset 4
 632              		@ sp needed
 633 00e2 5DF804FB 		ldr	pc, [sp], #4
 634              	.L25:
 635              		.cfi_restore_state
 222:Core/Src/main.c ****   }
 636              		.loc 1 222 5 is_stmt 1 view .LVU175
 637 00e6 FFF7FEFF 		bl	Error_Handler
 638              	.LVL30:
 639              	.L26:
 227:Core/Src/main.c ****   }
 640              		.loc 1 227 5 view .LVU176
 641 00ea FFF7FEFF 		bl	Error_Handler
 642              	.LVL31:
 643              	.L27:
 231:Core/Src/main.c ****   }
 644              		.loc 1 231 5 view .LVU177
 645 00ee FFF7FEFF 		bl	Error_Handler
 646              	.LVL32:
 647              	.L28:
 237:Core/Src/main.c ****   }
 648              		.loc 1 237 5 view .LVU178
 649 00f2 FFF7FEFF 		bl	Error_Handler
 650              	.LVL33:
 651              	.L29:
 246:Core/Src/main.c ****   }
 652              		.loc 1 246 5 view .LVU179
 653 00f6 FFF7FEFF 		bl	Error_Handler
 654              	.LVL34:
 655              	.L30:
 265:Core/Src/main.c ****   }
 656              		.loc 1 265 7 view .LVU180
 657 00fa FFF7FEFF 		bl	Error_Handler
 658              	.LVL35:
 659              	.L32:
 660 00fe 00BF     		.align	2
 661              	.L31:
 662 0100 00000000 		.word	htim2
 663 0104 00000000 		.word	TIM2_Ticks
 664 0108 00380240 		.word	1073887232
 665 010c 00000000 		.word	hdma_tim2_ch1
 666 0110 88600240 		.word	1073897608
 667              		.cfi_endproc
 668              	.LFE139:
 670              		.section	.text.MX_TIM3_Init,"ax",%progbits
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 40


 671              		.align	1
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 676              	MX_TIM3_Init:
 677              	.LFB140:
 280:Core/Src/main.c **** 
 678              		.loc 1 280 1 view -0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 56
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682 0000 00B5     		push	{lr}
 683              		.cfi_def_cfa_offset 4
 684              		.cfi_offset 14, -4
 685 0002 8FB0     		sub	sp, sp, #60
 686              		.cfi_def_cfa_offset 64
 286:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 687              		.loc 1 286 3 view .LVU182
 286:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 688              		.loc 1 286 26 is_stmt 0 view .LVU183
 689 0004 0023     		movs	r3, #0
 690 0006 0A93     		str	r3, [sp, #40]
 691 0008 0B93     		str	r3, [sp, #44]
 692 000a 0C93     		str	r3, [sp, #48]
 693 000c 0D93     		str	r3, [sp, #52]
 287:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 694              		.loc 1 287 3 is_stmt 1 view .LVU184
 287:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 695              		.loc 1 287 27 is_stmt 0 view .LVU185
 696 000e 0893     		str	r3, [sp, #32]
 697 0010 0993     		str	r3, [sp, #36]
 288:Core/Src/main.c **** 
 698              		.loc 1 288 3 is_stmt 1 view .LVU186
 288:Core/Src/main.c **** 
 699              		.loc 1 288 22 is_stmt 0 view .LVU187
 700 0012 0193     		str	r3, [sp, #4]
 701 0014 0293     		str	r3, [sp, #8]
 702 0016 0393     		str	r3, [sp, #12]
 703 0018 0493     		str	r3, [sp, #16]
 704 001a 0593     		str	r3, [sp, #20]
 705 001c 0693     		str	r3, [sp, #24]
 706 001e 0793     		str	r3, [sp, #28]
 293:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 707              		.loc 1 293 3 is_stmt 1 view .LVU188
 293:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 708              		.loc 1 293 18 is_stmt 0 view .LVU189
 709 0020 1E48     		ldr	r0, .L45
 710 0022 1F4A     		ldr	r2, .L45+4
 711 0024 0260     		str	r2, [r0]
 294:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 712              		.loc 1 294 3 is_stmt 1 view .LVU190
 294:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 713              		.loc 1 294 24 is_stmt 0 view .LVU191
 714 0026 4360     		str	r3, [r0, #4]
 295:Core/Src/main.c ****   htim3.Init.Period = 4095;
 715              		.loc 1 295 3 is_stmt 1 view .LVU192
 295:Core/Src/main.c ****   htim3.Init.Period = 4095;
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 41


 716              		.loc 1 295 26 is_stmt 0 view .LVU193
 717 0028 8360     		str	r3, [r0, #8]
 296:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 718              		.loc 1 296 3 is_stmt 1 view .LVU194
 296:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 719              		.loc 1 296 21 is_stmt 0 view .LVU195
 720 002a 40F6FF72 		movw	r2, #4095
 721 002e C260     		str	r2, [r0, #12]
 297:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 722              		.loc 1 297 3 is_stmt 1 view .LVU196
 297:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 723              		.loc 1 297 28 is_stmt 0 view .LVU197
 724 0030 0361     		str	r3, [r0, #16]
 298:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 725              		.loc 1 298 3 is_stmt 1 view .LVU198
 298:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 726              		.loc 1 298 32 is_stmt 0 view .LVU199
 727 0032 8361     		str	r3, [r0, #24]
 299:Core/Src/main.c ****   {
 728              		.loc 1 299 3 is_stmt 1 view .LVU200
 299:Core/Src/main.c ****   {
 729              		.loc 1 299 7 is_stmt 0 view .LVU201
 730 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 731              	.LVL36:
 299:Core/Src/main.c ****   {
 732              		.loc 1 299 6 discriminator 1 view .LVU202
 733 0038 28BB     		cbnz	r0, .L40
 303:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 734              		.loc 1 303 3 is_stmt 1 view .LVU203
 303:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 735              		.loc 1 303 34 is_stmt 0 view .LVU204
 736 003a 4FF48053 		mov	r3, #4096
 737 003e 0A93     		str	r3, [sp, #40]
 304:Core/Src/main.c ****   {
 738              		.loc 1 304 3 is_stmt 1 view .LVU205
 304:Core/Src/main.c ****   {
 739              		.loc 1 304 7 is_stmt 0 view .LVU206
 740 0040 0AA9     		add	r1, sp, #40
 741 0042 1648     		ldr	r0, .L45
 742 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 743              	.LVL37:
 304:Core/Src/main.c ****   {
 744              		.loc 1 304 6 discriminator 1 view .LVU207
 745 0048 F8B9     		cbnz	r0, .L41
 308:Core/Src/main.c ****   {
 746              		.loc 1 308 3 is_stmt 1 view .LVU208
 308:Core/Src/main.c ****   {
 747              		.loc 1 308 7 is_stmt 0 view .LVU209
 748 004a 1448     		ldr	r0, .L45
 749 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 750              	.LVL38:
 308:Core/Src/main.c ****   {
 751              		.loc 1 308 6 discriminator 1 view .LVU210
 752 0050 E8B9     		cbnz	r0, .L42
 312:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 753              		.loc 1 312 3 is_stmt 1 view .LVU211
 312:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 42


 754              		.loc 1 312 37 is_stmt 0 view .LVU212
 755 0052 0023     		movs	r3, #0
 756 0054 0893     		str	r3, [sp, #32]
 313:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 757              		.loc 1 313 3 is_stmt 1 view .LVU213
 313:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 758              		.loc 1 313 33 is_stmt 0 view .LVU214
 759 0056 0993     		str	r3, [sp, #36]
 314:Core/Src/main.c ****   {
 760              		.loc 1 314 3 is_stmt 1 view .LVU215
 314:Core/Src/main.c ****   {
 761              		.loc 1 314 7 is_stmt 0 view .LVU216
 762 0058 08A9     		add	r1, sp, #32
 763 005a 1048     		ldr	r0, .L45
 764 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 765              	.LVL39:
 314:Core/Src/main.c ****   {
 766              		.loc 1 314 6 discriminator 1 view .LVU217
 767 0060 B8B9     		cbnz	r0, .L43
 318:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 768              		.loc 1 318 3 is_stmt 1 view .LVU218
 318:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 769              		.loc 1 318 20 is_stmt 0 view .LVU219
 770 0062 6023     		movs	r3, #96
 771 0064 0193     		str	r3, [sp, #4]
 319:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 772              		.loc 1 319 3 is_stmt 1 view .LVU220
 319:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 773              		.loc 1 319 19 is_stmt 0 view .LVU221
 774 0066 0023     		movs	r3, #0
 775 0068 0293     		str	r3, [sp, #8]
 320:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 776              		.loc 1 320 3 is_stmt 1 view .LVU222
 320:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 777              		.loc 1 320 24 is_stmt 0 view .LVU223
 778 006a 0393     		str	r3, [sp, #12]
 321:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 779              		.loc 1 321 3 is_stmt 1 view .LVU224
 321:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 780              		.loc 1 321 24 is_stmt 0 view .LVU225
 781 006c 0593     		str	r3, [sp, #20]
 322:Core/Src/main.c ****   {
 782              		.loc 1 322 3 is_stmt 1 view .LVU226
 322:Core/Src/main.c ****   {
 783              		.loc 1 322 7 is_stmt 0 view .LVU227
 784 006e 0822     		movs	r2, #8
 785 0070 01A9     		add	r1, sp, #4
 786 0072 0A48     		ldr	r0, .L45
 787 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 788              	.LVL40:
 322:Core/Src/main.c ****   {
 789              		.loc 1 322 6 discriminator 1 view .LVU228
 790 0078 68B9     		cbnz	r0, .L44
 329:Core/Src/main.c **** 
 791              		.loc 1 329 3 is_stmt 1 view .LVU229
 792 007a 0848     		ldr	r0, .L45
 793 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 43


 794              	.LVL41:
 331:Core/Src/main.c **** 
 795              		.loc 1 331 1 is_stmt 0 view .LVU230
 796 0080 0FB0     		add	sp, sp, #60
 797              		.cfi_remember_state
 798              		.cfi_def_cfa_offset 4
 799              		@ sp needed
 800 0082 5DF804FB 		ldr	pc, [sp], #4
 801              	.L40:
 802              		.cfi_restore_state
 301:Core/Src/main.c ****   }
 803              		.loc 1 301 5 is_stmt 1 view .LVU231
 804 0086 FFF7FEFF 		bl	Error_Handler
 805              	.LVL42:
 806              	.L41:
 306:Core/Src/main.c ****   }
 807              		.loc 1 306 5 view .LVU232
 808 008a FFF7FEFF 		bl	Error_Handler
 809              	.LVL43:
 810              	.L42:
 310:Core/Src/main.c ****   }
 811              		.loc 1 310 5 view .LVU233
 812 008e FFF7FEFF 		bl	Error_Handler
 813              	.LVL44:
 814              	.L43:
 316:Core/Src/main.c ****   }
 815              		.loc 1 316 5 view .LVU234
 816 0092 FFF7FEFF 		bl	Error_Handler
 817              	.LVL45:
 818              	.L44:
 324:Core/Src/main.c ****   }
 819              		.loc 1 324 5 view .LVU235
 820 0096 FFF7FEFF 		bl	Error_Handler
 821              	.LVL46:
 822              	.L46:
 823 009a 00BF     		.align	2
 824              	.L45:
 825 009c 00000000 		.word	htim3
 826 00a0 00040040 		.word	1073742848
 827              		.cfi_endproc
 828              	.LFE140:
 830              		.section	.text.SystemClock_Config,"ax",%progbits
 831              		.align	1
 832              		.global	SystemClock_Config
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 837              	SystemClock_Config:
 838              	.LFB138:
 159:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 839              		.loc 1 159 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 80
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843 0000 10B5     		push	{r4, lr}
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 4, -8
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 44


 846              		.cfi_offset 14, -4
 847 0002 94B0     		sub	sp, sp, #80
 848              		.cfi_def_cfa_offset 88
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 849              		.loc 1 160 3 view .LVU237
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 850              		.loc 1 160 22 is_stmt 0 view .LVU238
 851 0004 07AC     		add	r4, sp, #28
 852 0006 3422     		movs	r2, #52
 853 0008 0021     		movs	r1, #0
 854 000a 2046     		mov	r0, r4
 855 000c FFF7FEFF 		bl	memset
 856              	.LVL47:
 161:Core/Src/main.c **** 
 857              		.loc 1 161 3 is_stmt 1 view .LVU239
 161:Core/Src/main.c **** 
 858              		.loc 1 161 22 is_stmt 0 view .LVU240
 859 0010 0023     		movs	r3, #0
 860 0012 0293     		str	r3, [sp, #8]
 861 0014 0393     		str	r3, [sp, #12]
 862 0016 0493     		str	r3, [sp, #16]
 863 0018 0593     		str	r3, [sp, #20]
 864 001a 0693     		str	r3, [sp, #24]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 865              		.loc 1 165 3 is_stmt 1 view .LVU241
 866              	.LBB11:
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 867              		.loc 1 165 3 view .LVU242
 868 001c 0093     		str	r3, [sp]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 869              		.loc 1 165 3 view .LVU243
 870 001e 194A     		ldr	r2, .L53
 871 0020 116C     		ldr	r1, [r2, #64]
 872 0022 41F08051 		orr	r1, r1, #268435456
 873 0026 1164     		str	r1, [r2, #64]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 874              		.loc 1 165 3 view .LVU244
 875 0028 126C     		ldr	r2, [r2, #64]
 876 002a 02F08052 		and	r2, r2, #268435456
 877 002e 0092     		str	r2, [sp]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 878              		.loc 1 165 3 view .LVU245
 879 0030 009A     		ldr	r2, [sp]
 880              	.LBE11:
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 881              		.loc 1 165 3 view .LVU246
 166:Core/Src/main.c **** 
 882              		.loc 1 166 3 view .LVU247
 883              	.LBB12:
 166:Core/Src/main.c **** 
 884              		.loc 1 166 3 view .LVU248
 885 0032 0193     		str	r3, [sp, #4]
 166:Core/Src/main.c **** 
 886              		.loc 1 166 3 view .LVU249
 887 0034 1449     		ldr	r1, .L53+4
 888 0036 0A68     		ldr	r2, [r1]
 889 0038 22F44042 		bic	r2, r2, #49152
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 45


 890 003c 42F48042 		orr	r2, r2, #16384
 891 0040 0A60     		str	r2, [r1]
 166:Core/Src/main.c **** 
 892              		.loc 1 166 3 view .LVU250
 893 0042 0A68     		ldr	r2, [r1]
 894 0044 02F44042 		and	r2, r2, #49152
 895 0048 0192     		str	r2, [sp, #4]
 166:Core/Src/main.c **** 
 896              		.loc 1 166 3 view .LVU251
 897 004a 019A     		ldr	r2, [sp, #4]
 898              	.LBE12:
 166:Core/Src/main.c **** 
 899              		.loc 1 166 3 view .LVU252
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 900              		.loc 1 171 3 view .LVU253
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 901              		.loc 1 171 36 is_stmt 0 view .LVU254
 902 004c 0222     		movs	r2, #2
 903 004e 0792     		str	r2, [sp, #28]
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 904              		.loc 1 172 3 is_stmt 1 view .LVU255
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 905              		.loc 1 172 30 is_stmt 0 view .LVU256
 906 0050 0122     		movs	r2, #1
 907 0052 0A92     		str	r2, [sp, #40]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 908              		.loc 1 173 3 is_stmt 1 view .LVU257
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 909              		.loc 1 173 41 is_stmt 0 view .LVU258
 910 0054 1022     		movs	r2, #16
 911 0056 0B92     		str	r2, [sp, #44]
 174:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 912              		.loc 1 174 3 is_stmt 1 view .LVU259
 174:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 913              		.loc 1 174 34 is_stmt 0 view .LVU260
 914 0058 0D93     		str	r3, [sp, #52]
 175:Core/Src/main.c ****   {
 915              		.loc 1 175 3 is_stmt 1 view .LVU261
 175:Core/Src/main.c ****   {
 916              		.loc 1 175 7 is_stmt 0 view .LVU262
 917 005a 2046     		mov	r0, r4
 918 005c FFF7FEFF 		bl	HAL_RCC_OscConfig
 919              	.LVL48:
 175:Core/Src/main.c ****   {
 920              		.loc 1 175 6 discriminator 1 view .LVU263
 921 0060 60B9     		cbnz	r0, .L51
 182:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 922              		.loc 1 182 3 is_stmt 1 view .LVU264
 182:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 923              		.loc 1 182 31 is_stmt 0 view .LVU265
 924 0062 0F23     		movs	r3, #15
 925 0064 0293     		str	r3, [sp, #8]
 184:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 926              		.loc 1 184 3 is_stmt 1 view .LVU266
 184:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 927              		.loc 1 184 34 is_stmt 0 view .LVU267
 928 0066 0021     		movs	r1, #0
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 46


 929 0068 0391     		str	r1, [sp, #12]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 930              		.loc 1 185 3 is_stmt 1 view .LVU268
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 931              		.loc 1 185 35 is_stmt 0 view .LVU269
 932 006a 0491     		str	r1, [sp, #16]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 933              		.loc 1 186 3 is_stmt 1 view .LVU270
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 934              		.loc 1 186 36 is_stmt 0 view .LVU271
 935 006c 0591     		str	r1, [sp, #20]
 187:Core/Src/main.c **** 
 936              		.loc 1 187 3 is_stmt 1 view .LVU272
 187:Core/Src/main.c **** 
 937              		.loc 1 187 36 is_stmt 0 view .LVU273
 938 006e 0691     		str	r1, [sp, #24]
 189:Core/Src/main.c ****   {
 939              		.loc 1 189 3 is_stmt 1 view .LVU274
 189:Core/Src/main.c ****   {
 940              		.loc 1 189 7 is_stmt 0 view .LVU275
 941 0070 02A8     		add	r0, sp, #8
 942 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 943              	.LVL49:
 189:Core/Src/main.c ****   {
 944              		.loc 1 189 6 discriminator 1 view .LVU276
 945 0076 18B9     		cbnz	r0, .L52
 193:Core/Src/main.c **** 
 946              		.loc 1 193 1 view .LVU277
 947 0078 14B0     		add	sp, sp, #80
 948              		.cfi_remember_state
 949              		.cfi_def_cfa_offset 8
 950              		@ sp needed
 951 007a 10BD     		pop	{r4, pc}
 952              	.L51:
 953              		.cfi_restore_state
 177:Core/Src/main.c ****   }
 954              		.loc 1 177 5 is_stmt 1 view .LVU278
 955 007c FFF7FEFF 		bl	Error_Handler
 956              	.LVL50:
 957              	.L52:
 191:Core/Src/main.c ****   }
 958              		.loc 1 191 5 view .LVU279
 959 0080 FFF7FEFF 		bl	Error_Handler
 960              	.LVL51:
 961              	.L54:
 962              		.align	2
 963              	.L53:
 964 0084 00380240 		.word	1073887232
 965 0088 00700040 		.word	1073770496
 966              		.cfi_endproc
 967              	.LFE138:
 969              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 970              		.align	2
 971              	.LC1:
 972 0000 57617665 		.ascii	"Waveform: \000"
 972      666F726D 
 972      3A2000
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 47


 973 000b 00       		.align	2
 974              	.LC2:
 975 000c 53696E65 		.ascii	"Sine\000"
 975      00
 976              		.section	.text.main,"ax",%progbits
 977              		.align	1
 978              		.global	main
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 983              	main:
 984              	.LFB137:
  92:Core/Src/main.c **** 
 985              		.loc 1 92 1 view -0
 986              		.cfi_startproc
 987              		@ Volatile: function does not return.
 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990 0000 08B5     		push	{r3, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 3, -8
 993              		.cfi_offset 14, -4
 101:Core/Src/main.c **** 
 994              		.loc 1 101 3 view .LVU281
 995 0002 FFF7FEFF 		bl	HAL_Init
 996              	.LVL52:
 108:Core/Src/main.c **** 
 997              		.loc 1 108 3 view .LVU282
 998 0006 FFF7FEFF 		bl	SystemClock_Config
 999              	.LVL53:
 115:Core/Src/main.c ****   MX_DMA_Init();
 1000              		.loc 1 115 3 view .LVU283
 1001 000a FFF7FEFF 		bl	MX_GPIO_Init
 1002              	.LVL54:
 116:Core/Src/main.c ****   MX_TIM2_Init();
 1003              		.loc 1 116 3 view .LVU284
 1004 000e FFF7FEFF 		bl	MX_DMA_Init
 1005              	.LVL55:
 117:Core/Src/main.c ****   MX_TIM3_Init();
 1006              		.loc 1 117 3 view .LVU285
 1007 0012 FFF7FEFF 		bl	MX_TIM2_Init
 1008              	.LVL56:
 118:Core/Src/main.c **** 
 1009              		.loc 1 118 3 view .LVU286
 1010 0016 FFF7FEFF 		bl	MX_TIM3_Init
 1011              	.LVL57:
 123:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 1012              		.loc 1 123 3 view .LVU287
 1013 001a 0821     		movs	r1, #8
 1014 001c 1248     		ldr	r0, .L58
 1015 001e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1016              	.LVL58:
 125:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 1017              		.loc 1 125 3 view .LVU288
 1018 0022 124C     		ldr	r4, .L58+4
 1019 0024 0021     		movs	r1, #0
 1020 0026 2046     		mov	r0, r4
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 48


 1021 0028 FFF7FEFF 		bl	HAL_TIM_OC_Start
 1022              	.LVL59:
 127:Core/Src/main.c **** 
 1023              		.loc 1 127 2 view .LVU289
 1024 002c 8023     		movs	r3, #128
 1025 002e 104A     		ldr	r2, .L58+8
 1026 0030 1268     		ldr	r2, [r2]
 1027 0032 1049     		ldr	r1, .L58+12
 1028 0034 1048     		ldr	r0, .L58+16
 1029 0036 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1030              	.LVL60:
 130:Core/Src/main.c ****   lcd_command(CLEAR);
 1031              		.loc 1 130 2 view .LVU290
 1032 003a FFF7FEFF 		bl	init_LCD
 1033              	.LVL61:
 131:Core/Src/main.c ****   lcd_command(CURSOR_HOME);
 1034              		.loc 1 131 3 view .LVU291
 1035 003e 0120     		movs	r0, #1
 1036 0040 FFF7FEFF 		bl	lcd_command
 1037              	.LVL62:
 132:Core/Src/main.c ****   lcd_putstring("Waveform: ");
 1038              		.loc 1 132 3 view .LVU292
 1039 0044 0220     		movs	r0, #2
 1040 0046 FFF7FEFF 		bl	lcd_command
 1041              	.LVL63:
 133:Core/Src/main.c ****   lcd_command(LINE_TWO);
 1042              		.loc 1 133 3 view .LVU293
 1043 004a 0C48     		ldr	r0, .L58+20
 1044 004c FFF7FEFF 		bl	lcd_putstring
 1045              	.LVL64:
 134:Core/Src/main.c ****   lcd_putstring("Sine");
 1046              		.loc 1 134 3 view .LVU294
 1047 0050 C020     		movs	r0, #192
 1048 0052 FFF7FEFF 		bl	lcd_command
 1049              	.LVL65:
 135:Core/Src/main.c **** 
 1050              		.loc 1 135 3 view .LVU295
 1051 0056 0A48     		ldr	r0, .L58+24
 1052 0058 FFF7FEFF 		bl	lcd_putstring
 1053              	.LVL66:
 139:Core/Src/main.c **** 
 1054              		.loc 1 139 1 view .LVU296
 1055 005c 2268     		ldr	r2, [r4]
 1056 005e D368     		ldr	r3, [r2, #12]
 1057 0060 43F40073 		orr	r3, r3, #512
 1058 0064 D360     		str	r3, [r2, #12]
 1059              	.L56:
 145:Core/Src/main.c ****   {
 1060              		.loc 1 145 3 view .LVU297
 150:Core/Src/main.c ****   /* USER CODE END 3 */
 1061              		.loc 1 150 3 view .LVU298
 145:Core/Src/main.c ****   {
 1062              		.loc 1 145 9 view .LVU299
 1063 0066 FEE7     		b	.L56
 1064              	.L59:
 1065              		.align	2
 1066              	.L58:
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 49


 1067 0068 00000000 		.word	htim3
 1068 006c 00000000 		.word	htim2
 1069 0070 00000000 		.word	DestAddress
 1070 0074 00000000 		.word	Sin_LUT
 1071 0078 00000000 		.word	hdma_tim2_ch1
 1072 007c 00000000 		.word	.LC1
 1073 0080 0C000000 		.word	.LC2
 1074              		.cfi_endproc
 1075              	.LFE137:
 1077              		.global	waveNames
 1078              		.section	.rodata.str1.4,"aMS",%progbits,1
 1079              		.align	2
 1080              	.LC3:
 1081 0000 53617774 		.ascii	"Sawtooth\000"
 1081      6F6F7468 
 1081      00
 1082 0009 000000   		.align	2
 1083              	.LC4:
 1084 000c 54726961 		.ascii	"Triangle\000"
 1084      6E676C65 
 1084      00
 1085 0015 000000   		.align	2
 1086              	.LC5:
 1087 0018 5069616E 		.ascii	"Piano\000"
 1087      6F00
 1088 001e 0000     		.align	2
 1089              	.LC6:
 1090 0020 47756974 		.ascii	"Guitar\000"
 1090      617200
 1091 0027 00       		.align	2
 1092              	.LC7:
 1093 0028 4472756D 		.ascii	"Drum\000"
 1093      00
 1094              		.section	.data.waveNames,"aw"
 1095              		.align	2
 1098              	waveNames:
 1099 0000 0C000000 		.word	.LC2
 1100 0004 00000000 		.word	.LC3
 1101 0008 0C000000 		.word	.LC4
 1102 000c 18000000 		.word	.LC5
 1103 0010 20000000 		.word	.LC6
 1104 0014 28000000 		.word	.LC7
 1105              		.global	waveforms
 1106              		.section	.data.waveforms,"aw"
 1107              		.align	2
 1110              	waveforms:
 1111 0000 00000000 		.word	Sin_LUT
 1112 0004 00000000 		.word	Saw_LUT
 1113 0008 00000000 		.word	Triangle_LUT
 1114 000c 00000000 		.word	Piano_LUT
 1115 0010 00000000 		.word	Guitar_LUT
 1116 0014 00000000 		.word	Drum_LUT
 1117              		.global	currentWave
 1118              		.section	.bss.currentWave,"aw",%nobits
 1121              	currentWave:
 1122 0000 00       		.space	1
 1123              		.global	lastDebounceTick
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 50


 1124              		.section	.bss.lastDebounceTick,"aw",%nobits
 1125              		.align	2
 1128              	lastDebounceTick:
 1129 0000 00000000 		.space	4
 1130              		.global	DestAddress
 1131              		.section	.data.DestAddress,"aw"
 1132              		.align	2
 1135              	DestAddress:
 1136 0000 3C040040 		.word	1073742908
 1137              		.global	TIM2_Ticks
 1138              		.section	.data.TIM2_Ticks,"aw"
 1139              		.align	2
 1142              	TIM2_Ticks:
 1143 0000 19000000 		.word	25
 1144              		.global	Drum_LUT
 1145              		.section	.data.Drum_LUT,"aw"
 1146              		.align	2
 1149              	Drum_LUT:
 1150 0000 FF070000 		.word	2047
 1151 0004 19030000 		.word	793
 1152 0008 790D0000 		.word	3449
 1153 000c 34090000 		.word	2356
 1154 0010 48070000 		.word	1864
 1155 0014 C1060000 		.word	1729
 1156 0018 8C080000 		.word	2188
 1157 001c D8070000 		.word	2008
 1158 0020 00080000 		.word	2048
 1159 0024 FF0F0000 		.word	4095
 1160 0028 BF0C0000 		.word	3263
 1161 002c F00A0000 		.word	2800
 1162 0030 60070000 		.word	1888
 1163 0034 FC070000 		.word	2044
 1164 0038 F7070000 		.word	2039
 1165 003c 34080000 		.word	2100
 1166 0040 20080000 		.word	2080
 1167 0044 38040000 		.word	1080
 1168 0048 53080000 		.word	2131
 1169 004c 15080000 		.word	2069
 1170 0050 03080000 		.word	2051
 1171 0054 E7070000 		.word	2023
 1172 0058 EF070000 		.word	2031
 1173 005c FB070000 		.word	2043
 1174 0060 FF070000 		.word	2047
 1175 0064 44050000 		.word	1348
 1176 0068 330A0000 		.word	2611
 1177 006c 19050000 		.word	1305
 1178 0070 72070000 		.word	1906
 1179 0074 84080000 		.word	2180
 1180 0078 A0080000 		.word	2208
 1181 007c 01080000 		.word	2049
 1182 0080 F2070000 		.word	2034
 1183 0084 4C060000 		.word	1612
 1184 0088 20080000 		.word	2080
 1185 008c 0E080000 		.word	2062
 1186 0090 FC070000 		.word	2044
 1187 0094 F8070000 		.word	2040
 1188 0098 01080000 		.word	2049
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 51


 1189 009c F7070000 		.word	2039
 1190 00a0 07080000 		.word	2055
 1191 00a4 36090000 		.word	2358
 1192 00a8 25080000 		.word	2085
 1193 00ac D3070000 		.word	2003
 1194 00b0 F3070000 		.word	2035
 1195 00b4 FE070000 		.word	2046
 1196 00b8 15080000 		.word	2069
 1197 00bc F8070000 		.word	2040
 1198 00c0 FB070000 		.word	2043
 1199 00c4 A50B0000 		.word	2981
 1200 00c8 FA070000 		.word	2042
 1201 00cc 66070000 		.word	1894
 1202 00d0 DD070000 		.word	2013
 1203 00d4 E9070000 		.word	2025
 1204 00d8 EC070000 		.word	2028
 1205 00dc F3070000 		.word	2035
 1206 00e0 F3070000 		.word	2035
 1207 00e4 79070000 		.word	1913
 1208 00e8 E3070000 		.word	2019
 1209 00ec 0B080000 		.word	2059
 1210 00f0 D5070000 		.word	2005
 1211 00f4 6E0B0000 		.word	2926
 1212 00f8 610A0000 		.word	2657
 1213 00fc 0B090000 		.word	2315
 1214 0100 B6070000 		.word	1974
 1215 0104 FF0F0000 		.word	4095
 1216 0108 BA080000 		.word	2234
 1217 010c C3070000 		.word	1987
 1218 0110 9E050000 		.word	1438
 1219 0114 04090000 		.word	2308
 1220 0118 C4070000 		.word	1988
 1221 011c EC070000 		.word	2028
 1222 0120 EA070000 		.word	2026
 1223 0124 2A080000 		.word	2090
 1224 0128 11080000 		.word	2065
 1225 012c E1070000 		.word	2017
 1226 0130 F0070000 		.word	2032
 1227 0134 43080000 		.word	2115
 1228 0138 E0070000 		.word	2016
 1229 013c FE070000 		.word	2046
 1230 0140 7F040000 		.word	1151
 1231 0144 9F090000 		.word	2463
 1232 0148 DC090000 		.word	2524
 1233 014c 09080000 		.word	2057
 1234 0150 DE070000 		.word	2014
 1235 0154 FD070000 		.word	2045
 1236 0158 01080000 		.word	2049
 1237 015c FF070000 		.word	2047
 1238 0160 01000000 		.word	1
 1239 0164 180A0000 		.word	2584
 1240 0168 36040000 		.word	1078
 1241 016c 53070000 		.word	1875
 1242 0170 56070000 		.word	1878
 1243 0174 13090000 		.word	2323
 1244 0178 7F070000 		.word	1919
 1245 017c EC070000 		.word	2028
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 52


 1246 0180 FF070000 		.word	2047
 1247 0184 88070000 		.word	1928
 1248 0188 FA070000 		.word	2042
 1249 018c 0C080000 		.word	2060
 1250 0190 3E080000 		.word	2110
 1251 0194 F2070000 		.word	2034
 1252 0198 F3070000 		.word	2035
 1253 019c FE070000 		.word	2046
 1254 01a0 4F0E0000 		.word	3663
 1255 01a4 A7020000 		.word	679
 1256 01a8 8D060000 		.word	1677
 1257 01ac 5F070000 		.word	1887
 1258 01b0 29090000 		.word	2345
 1259 01b4 AF070000 		.word	1967
 1260 01b8 1C080000 		.word	2076
 1261 01bc D9070000 		.word	2009
 1262 01c0 25020000 		.word	549
 1263 01c4 76070000 		.word	1910
 1264 01c8 BB070000 		.word	1979
 1265 01cc 53080000 		.word	2131
 1266 01d0 24080000 		.word	2084
 1267 01d4 F6070000 		.word	2038
 1268 01d8 08080000 		.word	2056
 1269 01dc F0070000 		.word	2032
 1270 01e0 94080000 		.word	2196
 1271 01e4 84080000 		.word	2180
 1272 01e8 15080000 		.word	2069
 1273 01ec 00080000 		.word	2048
 1274 01f0 BE030000 		.word	958
 1275 01f4 C60A0000 		.word	2758
 1276 01f8 FB0A0000 		.word	2811
 1277 01fc 8F070000 		.word	1935
 1278 0200 05000000 		.word	5
 1279 0204 500D0000 		.word	3408
 1280 0208 78080000 		.word	2168
 1281 020c 5A070000 		.word	1882
 1282 0210 A0060000 		.word	1696
 1283 0214 A4080000 		.word	2212
 1284 0218 CD070000 		.word	1997
 1285 021c F1070000 		.word	2033
 1286 0220 EE0F0000 		.word	4078
 1287 0224 5F0C0000 		.word	3167
 1288 0228 D10A0000 		.word	2769
 1289 022c 62070000 		.word	1890
 1290 0230 AF070000 		.word	1967
 1291 0234 0D080000 		.word	2061
 1292 0238 22080000 		.word	2082
 1293 023c 1A080000 		.word	2074
 1294 0240 94050000 		.word	1428
 1295 0244 E4070000 		.word	2020
 1296 0248 74070000 		.word	1908
 1297 024c E8070000 		.word	2024
 1298 0250 DD070000 		.word	2013
 1299 0254 11080000 		.word	2065
 1300 0258 10080000 		.word	2064
 1301 025c 0B080000 		.word	2059
 1302 0260 2F050000 		.word	1327
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 53


 1303 0264 3A080000 		.word	2106
 1304 0268 FE040000 		.word	1278
 1305 026c 83070000 		.word	1923
 1306 0270 62080000 		.word	2146
 1307 0274 83080000 		.word	2179
 1308 0278 16080000 		.word	2070
 1309 027c FE070000 		.word	2046
 1310 0280 CA080000 		.word	2250
 1311 0284 8F070000 		.word	1935
 1312 0288 06080000 		.word	2054
 1313 028c FA070000 		.word	2042
 1314 0290 F2070000 		.word	2034
 1315 0294 0B080000 		.word	2059
 1316 0298 FC070000 		.word	2044
 1317 029c 03080000 		.word	2051
 1318 02a0 CF070000 		.word	1999
 1319 02a4 56080000 		.word	2134
 1320 02a8 F7070000 		.word	2039
 1321 02ac F4070000 		.word	2036
 1322 02b0 E0070000 		.word	2016
 1323 02b4 E4070000 		.word	2020
 1324 02b8 0D080000 		.word	2061
 1325 02bc FB070000 		.word	2043
 1326 02c0 FD0A0000 		.word	2813
 1327 02c4 CB090000 		.word	2507
 1328 02c8 B0070000 		.word	1968
 1329 02cc D4070000 		.word	2004
 1330 02d0 AE070000 		.word	1966
 1331 02d4 08080000 		.word	2056
 1332 02d8 E9070000 		.word	2025
 1333 02dc FA070000 		.word	2042
 1334 02e0 50080000 		.word	2128
 1335 02e4 A8070000 		.word	1960
 1336 02e8 12080000 		.word	2066
 1337 02ec B3070000 		.word	1971
 1338 02f0 7D0B0000 		.word	2941
 1339 02f4 B50A0000 		.word	2741
 1340 02f8 5E090000 		.word	2398
 1341 02fc 8E080000 		.word	2190
 1342 0300 DF0E0000 		.word	3807
 1343 0304 56080000 		.word	2134
 1344 0308 89070000 		.word	1929
 1345 030c F7050000 		.word	1527
 1346 0310 F4080000 		.word	2292
 1347 0314 DF070000 		.word	2015
 1348 0318 E5070000 		.word	2021
 1349 031c EE070000 		.word	2030
 1350 0320 71070000 		.word	1905
 1351 0324 0C080000 		.word	2060
 1352 0328 F3070000 		.word	2035
 1353 032c 0A080000 		.word	2058
 1354 0330 0B080000 		.word	2059
 1355 0334 F5070000 		.word	2037
 1356 0338 00080000 		.word	2048
 1357 033c 74010000 		.word	372
 1358 0340 1A070000 		.word	1818
 1359 0344 D9080000 		.word	2265
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 54


 1360 0348 55080000 		.word	2133
 1361 034c F8070000 		.word	2040
 1362 0350 1F080000 		.word	2079
 1363 0354 F0070000 		.word	2032
 1364 0358 FE070000 		.word	2046
 1365 035c 37090000 		.word	2359
 1366 0360 68060000 		.word	1640
 1367 0364 A6040000 		.word	1190
 1368 0368 15070000 		.word	1813
 1369 036c 67070000 		.word	1895
 1370 0370 93080000 		.word	2195
 1371 0374 C6070000 		.word	1990
 1372 0378 C2070000 		.word	1986
 1373 037c 75060000 		.word	1653
 1374 0380 1F070000 		.word	1823
 1375 0384 FB070000 		.word	2043
 1376 0388 08080000 		.word	2056
 1377 038c 0E080000 		.word	2062
 1378 0390 00080000 		.word	2048
 1379 0394 FA070000 		.word	2042
 1380 0398 00080000 		.word	2048
 1381 039c 7B0C0000 		.word	3195
 1382 03a0 34000000 		.word	52
 1383 03a4 85070000 		.word	1925
 1384 03a8 36070000 		.word	1846
 1385 03ac 31090000 		.word	2353
 1386 03b0 86070000 		.word	1926
 1387 03b4 2F080000 		.word	2095
 1388 03b8 EC070000 		.word	2028
 1389 03bc 18000000 		.word	24
 1390 03c0 1E060000 		.word	1566
 1391 03c4 FE060000 		.word	1790
 1392 03c8 53080000 		.word	2131
 1393 03cc 29080000 		.word	2089
 1394 03d0 0A080000 		.word	2058
 1395 03d4 01080000 		.word	2049
 1396 03d8 E0070000 		.word	2016
 1397 03dc 78070000 		.word	1912
 1398 03e0 7A080000 		.word	2170
 1399 03e4 F9070000 		.word	2041
 1400 03e8 00080000 		.word	2048
 1401 03ec A7000000 		.word	167
 1402 03f0 290C0000 		.word	3113
 1403 03f4 2C0A0000 		.word	2604
 1404 03f8 4D070000 		.word	1869
 1405 03fc FF070000 		.word	2047
 1406              		.global	Guitar_LUT
 1407              		.section	.data.Guitar_LUT,"aw"
 1408              		.align	2
 1411              	Guitar_LUT:
 1412 0000 B2070000 		.word	1970
 1413 0004 F9080000 		.word	2297
 1414 0008 F7080000 		.word	2295
 1415 000c 00080000 		.word	2048
 1416 0010 E5070000 		.word	2021
 1417 0014 F1060000 		.word	1777
 1418 0018 D4060000 		.word	1748
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 55


 1419 001c 90070000 		.word	1936
 1420 0020 9D050000 		.word	1437
 1421 0024 E0070000 		.word	2016
 1422 0028 D4070000 		.word	2004
 1423 002c B7070000 		.word	1975
 1424 0030 DB070000 		.word	2011
 1425 0034 CF070000 		.word	1999
 1426 0038 12070000 		.word	1810
 1427 003c A7070000 		.word	1959
 1428 0040 AE070000 		.word	1966
 1429 0044 9D070000 		.word	1949
 1430 0048 4F060000 		.word	1615
 1431 004c 89090000 		.word	2441
 1432 0050 2A070000 		.word	1834
 1433 0054 15070000 		.word	1813
 1434 0058 65090000 		.word	2405
 1435 005c 71080000 		.word	2161
 1436 0060 97060000 		.word	1687
 1437 0064 B7070000 		.word	1975
 1438 0068 90070000 		.word	1936
 1439 006c C1070000 		.word	1985
 1440 0070 A6070000 		.word	1958
 1441 0074 7A070000 		.word	1914
 1442 0078 5B070000 		.word	1883
 1443 007c B8070000 		.word	1976
 1444 0080 B7070000 		.word	1975
 1445 0084 E6070000 		.word	2022
 1446 0088 EB060000 		.word	1771
 1447 008c 1B080000 		.word	2075
 1448 0090 EE060000 		.word	1774
 1449 0094 05080000 		.word	2053
 1450 0098 84070000 		.word	1924
 1451 009c 7D060000 		.word	1661
 1452 00a0 84080000 		.word	2180
 1453 00a4 9A070000 		.word	1946
 1454 00a8 BB070000 		.word	1979
 1455 00ac B6070000 		.word	1974
 1456 00b0 C3070000 		.word	1987
 1457 00b4 3C070000 		.word	1852
 1458 00b8 17080000 		.word	2071
 1459 00bc AB070000 		.word	1963
 1460 00c0 00070000 		.word	1792
 1461 00c4 87070000 		.word	1927
 1462 00c8 3F080000 		.word	2111
 1463 00cc 8A070000 		.word	1930
 1464 00d0 47080000 		.word	2119
 1465 00d4 16080000 		.word	2070
 1466 00d8 10070000 		.word	1808
 1467 00dc 86070000 		.word	1926
 1468 00e0 18080000 		.word	2072
 1469 00e4 11080000 		.word	2065
 1470 00e8 E3070000 		.word	2019
 1471 00ec CE060000 		.word	1742
 1472 00f0 2B080000 		.word	2091
 1473 00f4 E6070000 		.word	2022
 1474 00f8 970A0000 		.word	2711
 1475 00fc 70080000 		.word	2160
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 56


 1476 0100 EF070000 		.word	2031
 1477 0104 70080000 		.word	2160
 1478 0108 98080000 		.word	2200
 1479 010c 81080000 		.word	2177
 1480 0110 11080000 		.word	2065
 1481 0114 FC070000 		.word	2044
 1482 0118 D8050000 		.word	1496
 1483 011c 3B060000 		.word	1595
 1484 0120 C4070000 		.word	1988
 1485 0124 AA070000 		.word	1962
 1486 0128 D3070000 		.word	2003
 1487 012c C2070000 		.word	1986
 1488 0130 97080000 		.word	2199
 1489 0134 AE070000 		.word	1966
 1490 0138 A2070000 		.word	1954
 1491 013c BB070000 		.word	1979
 1492 0140 2C080000 		.word	2092
 1493 0144 3C080000 		.word	2108
 1494 0148 B2060000 		.word	1714
 1495 014c 07080000 		.word	2055
 1496 0150 D3070000 		.word	2003
 1497 0154 70060000 		.word	1648
 1498 0158 03080000 		.word	2051
 1499 015c 05070000 		.word	1797
 1500 0160 DB070000 		.word	2011
 1501 0164 EA070000 		.word	2026
 1502 0168 B0070000 		.word	1968
 1503 016c A3070000 		.word	1955
 1504 0170 57070000 		.word	1879
 1505 0174 0E070000 		.word	1806
 1506 0178 F8070000 		.word	2040
 1507 017c B0070000 		.word	1968
 1508 0180 AD080000 		.word	2221
 1509 0184 62070000 		.word	1890
 1510 0188 7E080000 		.word	2174
 1511 018c 70070000 		.word	1904
 1512 0190 A0070000 		.word	1952
 1513 0194 86070000 		.word	1926
 1514 0198 9D090000 		.word	2461
 1515 019c 39090000 		.word	2361
 1516 01a0 8C070000 		.word	1932
 1517 01a4 B6070000 		.word	1974
 1518 01a8 A4070000 		.word	1956
 1519 01ac AC070000 		.word	1964
 1520 01b0 FA070000 		.word	2042
 1521 01b4 3E070000 		.word	1854
 1522 01b8 AF070000 		.word	1967
 1523 01bc B6070000 		.word	1974
 1524 01c0 3A070000 		.word	1850
 1525 01c4 9D070000 		.word	1949
 1526 01c8 24080000 		.word	2084
 1527 01cc 14070000 		.word	1812
 1528 01d0 B6080000 		.word	2230
 1529 01d4 47070000 		.word	1863
 1530 01d8 5E080000 		.word	2142
 1531 01dc 19060000 		.word	1561
 1532 01e0 EE070000 		.word	2030
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 57


 1533 01e4 E9060000 		.word	1769
 1534 01e8 11090000 		.word	2321
 1535 01ec 1F070000 		.word	1823
 1536 01f0 0C060000 		.word	1548
 1537 01f4 020A0000 		.word	2562
 1538 01f8 3C070000 		.word	1852
 1539 01fc B2070000 		.word	1970
 1540              		.global	Piano_LUT
 1541              		.section	.data.Piano_LUT,"aw"
 1542              		.align	2
 1545              	Piano_LUT:
 1546 0000 6D070000 		.word	1901
 1547 0004 FE070000 		.word	2046
 1548 0008 2A070000 		.word	1834
 1549 000c A3070000 		.word	1955
 1550 0010 7C070000 		.word	1916
 1551 0014 98070000 		.word	1944
 1552 0018 62070000 		.word	1890
 1553 001c E4070000 		.word	2020
 1554 0020 A2070000 		.word	1954
 1555 0024 DF070000 		.word	2015
 1556 0028 94070000 		.word	1940
 1557 002c 74070000 		.word	1908
 1558 0030 4B070000 		.word	1867
 1559 0034 9F080000 		.word	2207
 1560 0038 79070000 		.word	1913
 1561 003c 3E060000 		.word	1598
 1562 0040 57070000 		.word	1879
 1563 0044 6B070000 		.word	1899
 1564 0048 1A070000 		.word	1818
 1565 004c 75070000 		.word	1909
 1566 0050 7E070000 		.word	1918
 1567 0054 70070000 		.word	1904
 1568 0058 7B050000 		.word	1403
 1569 005c 52070000 		.word	1874
 1570 0060 A0080000 		.word	2208
 1571 0064 69070000 		.word	1897
 1572 0068 EE0A0000 		.word	2798
 1573 006c F1050000 		.word	1521
 1574 0070 38060000 		.word	1592
 1575 0074 92060000 		.word	1682
 1576 0078 3E080000 		.word	2110
 1577 007c 0B080000 		.word	2059
 1578 0080 43050000 		.word	1347
 1579 0084 E9070000 		.word	2025
 1580 0088 19070000 		.word	1817
 1581 008c 7B070000 		.word	1915
 1582 0090 2D070000 		.word	1837
 1583 0094 99070000 		.word	1945
 1584 0098 1C060000 		.word	1564
 1585 009c 07070000 		.word	1799
 1586 00a0 F3060000 		.word	1779
 1587 00a4 A7070000 		.word	1959
 1588 00a8 48080000 		.word	2120
 1589 00ac E8060000 		.word	1768
 1590 00b0 49080000 		.word	2121
 1591 00b4 EF060000 		.word	1775
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 58


 1592 00b8 CE090000 		.word	2510
 1593 00bc 5A070000 		.word	1882
 1594 00c0 A2070000 		.word	1954
 1595 00c4 7E070000 		.word	1918
 1596 00c8 2B070000 		.word	1835
 1597 00cc 7E070000 		.word	1918
 1598 00d0 54070000 		.word	1876
 1599 00d4 62070000 		.word	1890
 1600 00d8 A70A0000 		.word	2727
 1601 00dc FE060000 		.word	1790
 1602 00e0 DF080000 		.word	2271
 1603 00e4 AC060000 		.word	1708
 1604 00e8 3A070000 		.word	1850
 1605 00ec 03070000 		.word	1795
 1606 00f0 05050000 		.word	1285
 1607 00f4 DB060000 		.word	1755
 1608 00f8 EF050000 		.word	1519
 1609 00fc 5F070000 		.word	1887
 1610 0100 4D060000 		.word	1613
 1611 0104 85070000 		.word	1925
 1612 0108 D3070000 		.word	2003
 1613 010c 6C070000 		.word	1900
 1614 0110 4A070000 		.word	1866
 1615 0114 51070000 		.word	1873
 1616 0118 0C060000 		.word	1548
 1617 011c DE070000 		.word	2014
 1618 0120 D1060000 		.word	1745
 1619 0124 96070000 		.word	1942
 1620 0128 5D060000 		.word	1629
 1621 012c 23090000 		.word	2339
 1622 0130 11080000 		.word	2065
 1623 0134 5D070000 		.word	1885
 1624 0138 BC080000 		.word	2236
 1625 013c F6070000 		.word	2038
 1626 0140 57070000 		.word	1879
 1627 0144 69070000 		.word	1897
 1628 0148 3F070000 		.word	1855
 1629 014c 87070000 		.word	1927
 1630 0150 5E070000 		.word	1886
 1631 0154 66070000 		.word	1894
 1632 0158 03080000 		.word	2051
 1633 015c 73070000 		.word	1907
 1634 0160 9A070000 		.word	1946
 1635 0164 ED060000 		.word	1773
 1636 0168 92060000 		.word	1682
 1637 016c 5E070000 		.word	1886
 1638 0170 46070000 		.word	1862
 1639 0174 2C080000 		.word	2092
 1640 0178 44070000 		.word	1860
 1641 017c AC070000 		.word	1964
 1642 0180 AE080000 		.word	2222
 1643 0184 72070000 		.word	1906
 1644 0188 8C070000 		.word	1932
 1645 018c 63070000 		.word	1891
 1646 0190 86070000 		.word	1926
 1647 0194 53070000 		.word	1875
 1648 0198 33060000 		.word	1587
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 59


 1649 019c E6060000 		.word	1766
 1650 01a0 32070000 		.word	1842
 1651 01a4 36070000 		.word	1846
 1652 01a8 E8070000 		.word	2024
 1653 01ac 95070000 		.word	1941
 1654 01b0 61070000 		.word	1889
 1655 01b4 39070000 		.word	1849
 1656 01b8 8B060000 		.word	1675
 1657 01bc DB070000 		.word	2011
 1658 01c0 40070000 		.word	1856
 1659 01c4 8F070000 		.word	1935
 1660 01c8 37070000 		.word	1847
 1661 01cc 87070000 		.word	1927
 1662 01d0 5C070000 		.word	1884
 1663 01d4 7B070000 		.word	1915
 1664 01d8 FC060000 		.word	1788
 1665 01dc DB060000 		.word	1755
 1666 01e0 92050000 		.word	1426
 1667 01e4 4F060000 		.word	1615
 1668 01e8 8C070000 		.word	1932
 1669 01ec 76070000 		.word	1910
 1670 01f0 3C070000 		.word	1852
 1671 01f4 F7060000 		.word	1783
 1672 01f8 9F070000 		.word	1951
 1673 01fc 6D070000 		.word	1901
 1674              		.global	Triangle_LUT
 1675              		.section	.data.Triangle_LUT,"aw"
 1676              		.align	2
 1679              	Triangle_LUT:
 1680 0000 00000000 		.word	0
 1681 0004 3F000000 		.word	63
 1682 0008 7F000000 		.word	127
 1683 000c BF000000 		.word	191
 1684 0010 FF000000 		.word	255
 1685 0014 3F010000 		.word	319
 1686 0018 7F010000 		.word	383
 1687 001c BF010000 		.word	447
 1688 0020 FF010000 		.word	511
 1689 0024 3F020000 		.word	575
 1690 0028 7F020000 		.word	639
 1691 002c BF020000 		.word	703
 1692 0030 FF020000 		.word	767
 1693 0034 3F030000 		.word	831
 1694 0038 7F030000 		.word	895
 1695 003c BF030000 		.word	959
 1696 0040 FF030000 		.word	1023
 1697 0044 3F040000 		.word	1087
 1698 0048 7F040000 		.word	1151
 1699 004c BF040000 		.word	1215
 1700 0050 FF040000 		.word	1279
 1701 0054 3F050000 		.word	1343
 1702 0058 7F050000 		.word	1407
 1703 005c BF050000 		.word	1471
 1704 0060 FF050000 		.word	1535
 1705 0064 3F060000 		.word	1599
 1706 0068 7F060000 		.word	1663
 1707 006c BF060000 		.word	1727
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 60


 1708 0070 FF060000 		.word	1791
 1709 0074 3F070000 		.word	1855
 1710 0078 7F070000 		.word	1919
 1711 007c BF070000 		.word	1983
 1712 0080 FF070000 		.word	2047
 1713 0084 3F080000 		.word	2111
 1714 0088 7F080000 		.word	2175
 1715 008c BF080000 		.word	2239
 1716 0090 FF080000 		.word	2303
 1717 0094 3F090000 		.word	2367
 1718 0098 7F090000 		.word	2431
 1719 009c BF090000 		.word	2495
 1720 00a0 FF090000 		.word	2559
 1721 00a4 3F0A0000 		.word	2623
 1722 00a8 7F0A0000 		.word	2687
 1723 00ac BF0A0000 		.word	2751
 1724 00b0 FF0A0000 		.word	2815
 1725 00b4 3F0B0000 		.word	2879
 1726 00b8 7F0B0000 		.word	2943
 1727 00bc BF0B0000 		.word	3007
 1728 00c0 FF0B0000 		.word	3071
 1729 00c4 3F0C0000 		.word	3135
 1730 00c8 7F0C0000 		.word	3199
 1731 00cc BF0C0000 		.word	3263
 1732 00d0 FF0C0000 		.word	3327
 1733 00d4 3F0D0000 		.word	3391
 1734 00d8 7F0D0000 		.word	3455
 1735 00dc BF0D0000 		.word	3519
 1736 00e0 FF0D0000 		.word	3583
 1737 00e4 3F0E0000 		.word	3647
 1738 00e8 7F0E0000 		.word	3711
 1739 00ec BF0E0000 		.word	3775
 1740 00f0 FF0E0000 		.word	3839
 1741 00f4 3F0F0000 		.word	3903
 1742 00f8 7F0F0000 		.word	3967
 1743 00fc BF0F0000 		.word	4031
 1744 0100 FF0F0000 		.word	4095
 1745 0104 BF0F0000 		.word	4031
 1746 0108 7F0F0000 		.word	3967
 1747 010c 3F0F0000 		.word	3903
 1748 0110 FF0E0000 		.word	3839
 1749 0114 BF0E0000 		.word	3775
 1750 0118 7F0E0000 		.word	3711
 1751 011c 3F0E0000 		.word	3647
 1752 0120 FF0D0000 		.word	3583
 1753 0124 BF0D0000 		.word	3519
 1754 0128 7F0D0000 		.word	3455
 1755 012c 3F0D0000 		.word	3391
 1756 0130 FF0C0000 		.word	3327
 1757 0134 BF0C0000 		.word	3263
 1758 0138 7F0C0000 		.word	3199
 1759 013c 3F0C0000 		.word	3135
 1760 0140 FF0B0000 		.word	3071
 1761 0144 BF0B0000 		.word	3007
 1762 0148 7F0B0000 		.word	2943
 1763 014c 3F0B0000 		.word	2879
 1764 0150 FF0A0000 		.word	2815
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 61


 1765 0154 BF0A0000 		.word	2751
 1766 0158 7F0A0000 		.word	2687
 1767 015c 3F0A0000 		.word	2623
 1768 0160 FF090000 		.word	2559
 1769 0164 BF090000 		.word	2495
 1770 0168 7F090000 		.word	2431
 1771 016c 3F090000 		.word	2367
 1772 0170 FF080000 		.word	2303
 1773 0174 BF080000 		.word	2239
 1774 0178 7F080000 		.word	2175
 1775 017c 3F080000 		.word	2111
 1776 0180 FF070000 		.word	2047
 1777 0184 BF070000 		.word	1983
 1778 0188 7F070000 		.word	1919
 1779 018c 3F070000 		.word	1855
 1780 0190 FF060000 		.word	1791
 1781 0194 BF060000 		.word	1727
 1782 0198 7F060000 		.word	1663
 1783 019c 3F060000 		.word	1599
 1784 01a0 FF050000 		.word	1535
 1785 01a4 BF050000 		.word	1471
 1786 01a8 7F050000 		.word	1407
 1787 01ac 3F050000 		.word	1343
 1788 01b0 FF040000 		.word	1279
 1789 01b4 BF040000 		.word	1215
 1790 01b8 7F040000 		.word	1151
 1791 01bc 3F040000 		.word	1087
 1792 01c0 FF030000 		.word	1023
 1793 01c4 BF030000 		.word	959
 1794 01c8 7F030000 		.word	895
 1795 01cc 3F030000 		.word	831
 1796 01d0 FF020000 		.word	767
 1797 01d4 BF020000 		.word	703
 1798 01d8 7F020000 		.word	639
 1799 01dc 3F020000 		.word	575
 1800 01e0 FF010000 		.word	511
 1801 01e4 BF010000 		.word	447
 1802 01e8 7F010000 		.word	383
 1803 01ec 3F010000 		.word	319
 1804 01f0 FF000000 		.word	255
 1805 01f4 BF000000 		.word	191
 1806 01f8 7F000000 		.word	127
 1807 01fc 3F000000 		.word	63
 1808              		.global	Saw_LUT
 1809              		.section	.data.Saw_LUT,"aw"
 1810              		.align	2
 1813              	Saw_LUT:
 1814 0000 00000000 		.word	0
 1815 0004 1F000000 		.word	31
 1816 0008 3F000000 		.word	63
 1817 000c 5F000000 		.word	95
 1818 0010 7F000000 		.word	127
 1819 0014 9F000000 		.word	159
 1820 0018 BF000000 		.word	191
 1821 001c DF000000 		.word	223
 1822 0020 FF000000 		.word	255
 1823 0024 1F010000 		.word	287
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 62


 1824 0028 3F010000 		.word	319
 1825 002c 5F010000 		.word	351
 1826 0030 7F010000 		.word	383
 1827 0034 9F010000 		.word	415
 1828 0038 BF010000 		.word	447
 1829 003c DF010000 		.word	479
 1830 0040 FF010000 		.word	511
 1831 0044 1F020000 		.word	543
 1832 0048 3F020000 		.word	575
 1833 004c 5F020000 		.word	607
 1834 0050 7F020000 		.word	639
 1835 0054 9F020000 		.word	671
 1836 0058 BF020000 		.word	703
 1837 005c DF020000 		.word	735
 1838 0060 FF020000 		.word	767
 1839 0064 1F030000 		.word	799
 1840 0068 3F030000 		.word	831
 1841 006c 5F030000 		.word	863
 1842 0070 7F030000 		.word	895
 1843 0074 9F030000 		.word	927
 1844 0078 BF030000 		.word	959
 1845 007c DF030000 		.word	991
 1846 0080 FF030000 		.word	1023
 1847 0084 1F040000 		.word	1055
 1848 0088 3F040000 		.word	1087
 1849 008c 5F040000 		.word	1119
 1850 0090 7F040000 		.word	1151
 1851 0094 9F040000 		.word	1183
 1852 0098 BF040000 		.word	1215
 1853 009c DF040000 		.word	1247
 1854 00a0 FF040000 		.word	1279
 1855 00a4 1F050000 		.word	1311
 1856 00a8 3F050000 		.word	1343
 1857 00ac 5F050000 		.word	1375
 1858 00b0 7F050000 		.word	1407
 1859 00b4 9F050000 		.word	1439
 1860 00b8 BF050000 		.word	1471
 1861 00bc DF050000 		.word	1503
 1862 00c0 FF050000 		.word	1535
 1863 00c4 1F060000 		.word	1567
 1864 00c8 3F060000 		.word	1599
 1865 00cc 5F060000 		.word	1631
 1866 00d0 7F060000 		.word	1663
 1867 00d4 9F060000 		.word	1695
 1868 00d8 BF060000 		.word	1727
 1869 00dc DF060000 		.word	1759
 1870 00e0 FF060000 		.word	1791
 1871 00e4 1F070000 		.word	1823
 1872 00e8 3F070000 		.word	1855
 1873 00ec 5F070000 		.word	1887
 1874 00f0 7F070000 		.word	1919
 1875 00f4 9F070000 		.word	1951
 1876 00f8 BF070000 		.word	1983
 1877 00fc DF070000 		.word	2015
 1878 0100 FF070000 		.word	2047
 1879 0104 1F080000 		.word	2079
 1880 0108 3F080000 		.word	2111
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 63


 1881 010c 5F080000 		.word	2143
 1882 0110 7F080000 		.word	2175
 1883 0114 9F080000 		.word	2207
 1884 0118 BF080000 		.word	2239
 1885 011c DF080000 		.word	2271
 1886 0120 FF080000 		.word	2303
 1887 0124 1F090000 		.word	2335
 1888 0128 3F090000 		.word	2367
 1889 012c 5F090000 		.word	2399
 1890 0130 7F090000 		.word	2431
 1891 0134 9F090000 		.word	2463
 1892 0138 BF090000 		.word	2495
 1893 013c DF090000 		.word	2527
 1894 0140 FF090000 		.word	2559
 1895 0144 1F0A0000 		.word	2591
 1896 0148 3F0A0000 		.word	2623
 1897 014c 5F0A0000 		.word	2655
 1898 0150 7F0A0000 		.word	2687
 1899 0154 9F0A0000 		.word	2719
 1900 0158 BF0A0000 		.word	2751
 1901 015c DF0A0000 		.word	2783
 1902 0160 FF0A0000 		.word	2815
 1903 0164 1F0B0000 		.word	2847
 1904 0168 3F0B0000 		.word	2879
 1905 016c 5F0B0000 		.word	2911
 1906 0170 7F0B0000 		.word	2943
 1907 0174 9F0B0000 		.word	2975
 1908 0178 BF0B0000 		.word	3007
 1909 017c DF0B0000 		.word	3039
 1910 0180 FF0B0000 		.word	3071
 1911 0184 1F0C0000 		.word	3103
 1912 0188 3F0C0000 		.word	3135
 1913 018c 5F0C0000 		.word	3167
 1914 0190 7F0C0000 		.word	3199
 1915 0194 9F0C0000 		.word	3231
 1916 0198 BF0C0000 		.word	3263
 1917 019c DF0C0000 		.word	3295
 1918 01a0 FF0C0000 		.word	3327
 1919 01a4 1F0D0000 		.word	3359
 1920 01a8 3F0D0000 		.word	3391
 1921 01ac 5F0D0000 		.word	3423
 1922 01b0 7F0D0000 		.word	3455
 1923 01b4 9F0D0000 		.word	3487
 1924 01b8 BF0D0000 		.word	3519
 1925 01bc DF0D0000 		.word	3551
 1926 01c0 FF0D0000 		.word	3583
 1927 01c4 1F0E0000 		.word	3615
 1928 01c8 3F0E0000 		.word	3647
 1929 01cc 5F0E0000 		.word	3679
 1930 01d0 7F0E0000 		.word	3711
 1931 01d4 9F0E0000 		.word	3743
 1932 01d8 BF0E0000 		.word	3775
 1933 01dc DF0E0000 		.word	3807
 1934 01e0 FF0E0000 		.word	3839
 1935 01e4 1F0F0000 		.word	3871
 1936 01e8 3F0F0000 		.word	3903
 1937 01ec 5F0F0000 		.word	3935
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 64


 1938 01f0 7F0F0000 		.word	3967
 1939 01f4 9F0F0000 		.word	3999
 1940 01f8 BF0F0000 		.word	4031
 1941 01fc DF0F0000 		.word	4063
 1942              		.global	Sin_LUT
 1943              		.section	.data.Sin_LUT,"aw"
 1944              		.align	2
 1947              	Sin_LUT:
 1948 0000 FF070000 		.word	2047
 1949 0004 63080000 		.word	2147
 1950 0008 C8080000 		.word	2248
 1951 000c 2B090000 		.word	2347
 1952 0010 8E090000 		.word	2446
 1953 0014 F1090000 		.word	2545
 1954 0018 510A0000 		.word	2641
 1955 001c B10A0000 		.word	2737
 1956 0020 0F0B0000 		.word	2831
 1957 0024 6A0B0000 		.word	2922
 1958 0028 C40B0000 		.word	3012
 1959 002c 1C0C0000 		.word	3100
 1960 0030 710C0000 		.word	3185
 1961 0034 C30C0000 		.word	3267
 1962 0038 120D0000 		.word	3346
 1963 003c 5E0D0000 		.word	3422
 1964 0040 A70D0000 		.word	3495
 1965 0044 EC0D0000 		.word	3564
 1966 0048 2E0E0000 		.word	3630
 1967 004c 6C0E0000 		.word	3692
 1968 0050 A50E0000 		.word	3749
 1969 0054 DB0E0000 		.word	3803
 1970 0058 0D0F0000 		.word	3853
 1971 005c 3A0F0000 		.word	3898
 1972 0060 630F0000 		.word	3939
 1973 0064 870F0000 		.word	3975
 1974 0068 A60F0000 		.word	4006
 1975 006c C10F0000 		.word	4033
 1976 0070 D70F0000 		.word	4055
 1977 0074 E80F0000 		.word	4072
 1978 0078 F50F0000 		.word	4085
 1979 007c FC0F0000 		.word	4092
 1980 0080 FF0F0000 		.word	4095
 1981 0084 FC0F0000 		.word	4092
 1982 0088 F50F0000 		.word	4085
 1983 008c E80F0000 		.word	4072
 1984 0090 D70F0000 		.word	4055
 1985 0094 C10F0000 		.word	4033
 1986 0098 A60F0000 		.word	4006
 1987 009c 870F0000 		.word	3975
 1988 00a0 630F0000 		.word	3939
 1989 00a4 3A0F0000 		.word	3898
 1990 00a8 0D0F0000 		.word	3853
 1991 00ac DB0E0000 		.word	3803
 1992 00b0 A50E0000 		.word	3749
 1993 00b4 6C0E0000 		.word	3692
 1994 00b8 2E0E0000 		.word	3630
 1995 00bc EC0D0000 		.word	3564
 1996 00c0 A70D0000 		.word	3495
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 65


 1997 00c4 5E0D0000 		.word	3422
 1998 00c8 120D0000 		.word	3346
 1999 00cc C30C0000 		.word	3267
 2000 00d0 710C0000 		.word	3185
 2001 00d4 1C0C0000 		.word	3100
 2002 00d8 C40B0000 		.word	3012
 2003 00dc 6A0B0000 		.word	2922
 2004 00e0 0F0B0000 		.word	2831
 2005 00e4 B10A0000 		.word	2737
 2006 00e8 510A0000 		.word	2641
 2007 00ec F1090000 		.word	2545
 2008 00f0 8E090000 		.word	2446
 2009 00f4 2B090000 		.word	2347
 2010 00f8 C8080000 		.word	2248
 2011 00fc 63080000 		.word	2147
 2012 0100 FF070000 		.word	2047
 2013 0104 9B070000 		.word	1947
 2014 0108 36070000 		.word	1846
 2015 010c D3060000 		.word	1747
 2016 0110 70060000 		.word	1648
 2017 0114 0D060000 		.word	1549
 2018 0118 AD050000 		.word	1453
 2019 011c 4D050000 		.word	1357
 2020 0120 EF040000 		.word	1263
 2021 0124 94040000 		.word	1172
 2022 0128 3A040000 		.word	1082
 2023 012c E2030000 		.word	994
 2024 0130 8D030000 		.word	909
 2025 0134 3B030000 		.word	827
 2026 0138 EC020000 		.word	748
 2027 013c A0020000 		.word	672
 2028 0140 57020000 		.word	599
 2029 0144 12020000 		.word	530
 2030 0148 D0010000 		.word	464
 2031 014c 92010000 		.word	402
 2032 0150 59010000 		.word	345
 2033 0154 23010000 		.word	291
 2034 0158 F1000000 		.word	241
 2035 015c C4000000 		.word	196
 2036 0160 9B000000 		.word	155
 2037 0164 77000000 		.word	119
 2038 0168 58000000 		.word	88
 2039 016c 3D000000 		.word	61
 2040 0170 27000000 		.word	39
 2041 0174 16000000 		.word	22
 2042 0178 09000000 		.word	9
 2043 017c 02000000 		.word	2
 2044 0180 00000000 		.word	0
 2045 0184 02000000 		.word	2
 2046 0188 09000000 		.word	9
 2047 018c 16000000 		.word	22
 2048 0190 27000000 		.word	39
 2049 0194 3D000000 		.word	61
 2050 0198 58000000 		.word	88
 2051 019c 77000000 		.word	119
 2052 01a0 9B000000 		.word	155
 2053 01a4 C4000000 		.word	196
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 66


 2054 01a8 F1000000 		.word	241
 2055 01ac 23010000 		.word	291
 2056 01b0 59010000 		.word	345
 2057 01b4 92010000 		.word	402
 2058 01b8 D0010000 		.word	464
 2059 01bc 12020000 		.word	530
 2060 01c0 57020000 		.word	599
 2061 01c4 A0020000 		.word	672
 2062 01c8 EC020000 		.word	748
 2063 01cc 3B030000 		.word	827
 2064 01d0 8D030000 		.word	909
 2065 01d4 E2030000 		.word	994
 2066 01d8 3A040000 		.word	1082
 2067 01dc 94040000 		.word	1172
 2068 01e0 EF040000 		.word	1263
 2069 01e4 4D050000 		.word	1357
 2070 01e8 AD050000 		.word	1453
 2071 01ec 0D060000 		.word	1549
 2072 01f0 70060000 		.word	1648
 2073 01f4 D3060000 		.word	1747
 2074 01f8 36070000 		.word	1846
 2075 01fc 9B070000 		.word	1947
 2076              		.global	hdma_tim2_ch1
 2077              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 2078              		.align	2
 2081              	hdma_tim2_ch1:
 2082 0000 00000000 		.space	96
 2082      00000000 
 2082      00000000 
 2082      00000000 
 2082      00000000 
 2083              		.global	htim3
 2084              		.section	.bss.htim3,"aw",%nobits
 2085              		.align	2
 2088              	htim3:
 2089 0000 00000000 		.space	72
 2089      00000000 
 2089      00000000 
 2089      00000000 
 2089      00000000 
 2090              		.global	htim2
 2091              		.section	.bss.htim2,"aw",%nobits
 2092              		.align	2
 2095              	htim2:
 2096 0000 00000000 		.space	72
 2096      00000000 
 2096      00000000 
 2096      00000000 
 2096      00000000 
 2097              		.text
 2098              	.Letext0:
 2099              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 2100              		.file 4 "C:/Users/nhlan/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 2101              		.file 5 "C:/Users/nhlan/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 2102              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2103              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2104              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 67


 2105              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2106              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2107              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2108              		.file 12 "Core/Inc/main.h"
 2109              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2110              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2111              		.file 15 "Core/Inc/lcd_stm32f4.h"
 2112              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2113              		.file 17 "<built-in>"
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:189    .text.MX_GPIO_Init:000000d4 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:197    .text.MX_DMA_Init:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:202    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:248    .text.MX_DMA_Init:00000030 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:253    .rodata.EXTI0_IRQHandler.str1.4:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:257    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:263    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:377    .text.EXTI0_IRQHandler:00000098 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1128   .bss.lastDebounceTick:00000000 lastDebounceTick
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:2095   .bss.htim2:00000000 htim2
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:2081   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1121   .bss.currentWave:00000000 currentWave
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1135   .data.DestAddress:00000000 DestAddress
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1110   .data.waveforms:00000000 waveforms
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1098   .data.waveNames:00000000 waveNames
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:391    .text.Error_Handler:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:397    .text.Error_Handler:00000000 Error_Handler
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:429    .text.MX_TIM2_Init:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:434    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:662    .text.MX_TIM2_Init:00000100 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1142   .data.TIM2_Ticks:00000000 TIM2_Ticks
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:671    .text.MX_TIM3_Init:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:676    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:825    .text.MX_TIM3_Init:0000009c $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:2088   .bss.htim3:00000000 htim3
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:831    .text.SystemClock_Config:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:837    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:964    .text.SystemClock_Config:00000084 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:970    .rodata.main.str1.4:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:977    .text.main:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:983    .text.main:00000000 main
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1067   .text.main:00000068 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1947   .data.Sin_LUT:00000000 Sin_LUT
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1079   .rodata.str1.4:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1095   .data.waveNames:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1107   .data.waveforms:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1813   .data.Saw_LUT:00000000 Saw_LUT
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1679   .data.Triangle_LUT:00000000 Triangle_LUT
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1545   .data.Piano_LUT:00000000 Piano_LUT
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1411   .data.Guitar_LUT:00000000 Guitar_LUT
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1149   .data.Drum_LUT:00000000 Drum_LUT
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1122   .bss.currentWave:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1125   .bss.lastDebounceTick:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1132   .data.DestAddress:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1139   .data.TIM2_Ticks:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1146   .data.Drum_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1408   .data.Guitar_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1542   .data.Piano_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1676   .data.Triangle_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1810   .data.Saw_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:1944   .data.Sin_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:2078   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:2085   .bss.htim3:00000000 $d
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s 			page 69


C:\Users\nhlan\AppData\Local\Temp\cc9jbzo7.s:2092   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_EXTI_IRQHandler
HAL_GetTick
HAL_DMA_Abort_IT
HAL_DMA_Start_IT
lcd_command
lcd_putstring
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_DMA_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
init_LCD
