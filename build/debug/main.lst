ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "lcd_stm32f4.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** // TODO: Add values for below variables
  37:Core/Src/main.c **** #define NS 128        // Number of samples in LUT
  38:Core/Src/main.c **** #define TIM2CLK 16000000  // STM Clock frequency: Hint You might want to check the ioc file
  39:Core/Src/main.c **** #define F_SIGNAL 1000 	// Frequency of output analog signal
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** // TODO: Add code for global variables, including LUTs
  55:Core/Src/main.c **** uint32_t Sin_LUT[NS] = {2047, 2147, 2248, 2347, 2446, 2545, 2641, 2737, 2831, 2922, 3012, 3100, 318
  56:Core/Src/main.c **** uint32_t Saw_LUT[NS] = {0, 31, 63, 95, 127, 159, 191, 223, 255, 287, 319, 351, 383, 415, 447, 479, 
  57:Core/Src/main.c **** uint32_t Triangle_LUT[NS] = {0, 63, 127, 191, 255, 319, 383, 447, 511, 575, 639, 703, 767, 831, 895
  58:Core/Src/main.c **** uint32_t Piano_LUT[] = { 1901, 2046, 1834, 1955, 1916, 1944, 1890, 2020, 1954, 2015, 1940, 1908, 18
  59:Core/Src/main.c **** uint32_t Guitar_LUT[]= { 1970, 2297, 2295, 2048, 2021, 1777, 1748, 1936, 1437, 2016, 2004, 1975, 20
  60:Core/Src/main.c **** uint32_t Drum_LUT[] = { 2047, 3396, 1864, 2110, 2063, 3400, 1893, 1933, 2086, 2144, 2036, 2030, 203
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** ///hhj
  66:Core/Src/main.c **** // TODO: Equation to calculate TIM2_Ticks
  67:Core/Src/main.c **** uint32_t TIM2_Ticks = (TIM2CLK / (NS * F_SIGNAL))  //
  68:Core/Src/main.c **** ; // How often to write new LUT value
  69:Core/Src/main.c **** uint32_t DestAddress = (uint32_t) &(TIM3->CCR3); // Write LUT TO TIM3->CCR3 to modify PWM duty cycl
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PV */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  75:Core/Src/main.c **** void SystemClock_Config(void);
  76:Core/Src/main.c **** static void MX_GPIO_Init(void);
  77:Core/Src/main.c **** static void MX_DMA_Init(void);
  78:Core/Src/main.c **** static void MX_TIM2_Init(void);
  79:Core/Src/main.c **** static void MX_TIM3_Init(void);
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** void EXTI0_IRQHandler(void);
  82:Core/Src/main.c **** /* USER CODE END PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  85:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END 0 */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 3


  89:Core/Src/main.c **** /**
  90:Core/Src/main.c ****   * @brief  The application entry point.
  91:Core/Src/main.c ****   * @retval int
  92:Core/Src/main.c ****   */
  93:Core/Src/main.c **** int main(void)
  94:Core/Src/main.c **** {
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Core/Src/main.c ****   HAL_Init();
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Configure the system clock */
 110:Core/Src/main.c ****   SystemClock_Config();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Initialize all configured peripherals */
 117:Core/Src/main.c ****   MX_GPIO_Init();
 118:Core/Src/main.c ****   MX_DMA_Init();
 119:Core/Src/main.c ****   MX_TIM2_Init();
 120:Core/Src/main.c ****   MX_TIM3_Init();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 123:Core/Src/main.c ****  
 124:Core/Src/main.c ****   // TODO: Start TIM3 in PWM mode on channel 3
 125:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 126:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 127:Core/Src/main.c ****   HAL_TIM_OC_Start(&htim2,TIM_CHANNEL_1);
 128:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 129:Core/Src/main.c ****  HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Sin_LUT, (uint32_t)&htim2.Instance->CCR1, NS);
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 132:Core/Src/main.c ****  init_LCD();
 133:Core/Src/main.c ****   lcd_command(CLEAR);
 134:Core/Src/main.c ****   lcd_command(CURSOR_HOME);
 135:Core/Src/main.c ****   lcd_putstring("Waveform: ");
 136:Core/Src/main.c ****   lcd_command(LINE_TWO);
 137:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END 2 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Infinite loop */
 144:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 145:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 4


 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     /* USER CODE END WHILE */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   /* USER CODE END 3 */
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief System Clock Configuration
 156:Core/Src/main.c ****   * @retval None
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** void SystemClock_Config(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 166:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 169:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 175:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     Error_Handler();
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 197:Core/Src/main.c ****   * @param None
 198:Core/Src/main.c ****   * @retval None
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c **** static void MX_TIM2_Init(void)
 201:Core/Src/main.c **** {
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 208:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 209:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 214:Core/Src/main.c ****   htim2.Instance = TIM2;
 215:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 216:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 217:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 218:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 219:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 220:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 225:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 234:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 235:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 240:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 241:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 242:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 243:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 248:Core/Src/main.c ****   /* TIM2_CH1 DMA Init */
 249:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   hdma_tim2_ch1.Instance = DMA1_Stream5;
 252:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 253:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 254:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 255:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 256:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 257:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 258:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 259:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 6


 260:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****       Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* Link DMA handle to TIM2 handle */
 268:Core/Src/main.c ****   __HAL_LINKDMA(&htim2, hdma[TIM_DMA_ID_CC1], hdma_tim2_ch1);
 269:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 275:Core/Src/main.c ****   * @param None
 276:Core/Src/main.c ****   * @retval None
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c **** static void MX_TIM3_Init(void)
 279:Core/Src/main.c **** {
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 286:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 287:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 292:Core/Src/main.c ****   htim3.Instance = TIM3;
 293:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 294:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 295:Core/Src/main.c ****   htim3.Init.Period = 65535;
 296:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 297:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 298:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****     Error_Handler();
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 303:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 304:Core/Src/main.c ****   {
 305:Core/Src/main.c ****     Error_Handler();
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 312:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 313:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 7


 317:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 318:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 319:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 320:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 321:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 322:Core/Src/main.c ****   {
 323:Core/Src/main.c ****     Error_Handler();
 324:Core/Src/main.c ****   }
 325:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 328:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** }
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /**
 333:Core/Src/main.c ****   * Enable DMA controller clock
 334:Core/Src/main.c ****   */
 335:Core/Src/main.c **** static void MX_DMA_Init(void)
 336:Core/Src/main.c **** {
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* DMA controller clock enable */
 339:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* DMA interrupt init */
 342:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 343:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 344:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** }
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /**
 349:Core/Src/main.c ****   * @brief GPIO Initialization Function
 350:Core/Src/main.c ****   * @param None
 351:Core/Src/main.c ****   * @retval None
 352:Core/Src/main.c ****   */
 353:Core/Src/main.c **** static void MX_GPIO_Init(void)
 354:Core/Src/main.c **** {
  28              		.loc 1 354 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 89B0     		sub	sp, sp, #36
  44              		.cfi_def_cfa_offset 72
 355:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 355 3 view .LVU1
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 8


  46              		.loc 1 355 20 is_stmt 0 view .LVU2
  47 0006 03AD     		add	r5, sp, #12
  48 0008 0024     		movs	r4, #0
  49 000a 0394     		str	r4, [sp, #12]
  50 000c 0494     		str	r4, [sp, #16]
  51 000e 0594     		str	r4, [sp, #20]
  52 0010 0694     		str	r4, [sp, #24]
  53 0012 0794     		str	r4, [sp, #28]
 356:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 361:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  54              		.loc 1 361 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 361 3 view .LVU4
  57 0014 0094     		str	r4, [sp]
  58              		.loc 1 361 3 view .LVU5
  59 0016 2F4B     		ldr	r3, .L3
  60 0018 1A6B     		ldr	r2, [r3, #48]
  61 001a 42F08002 		orr	r2, r2, #128
  62 001e 1A63     		str	r2, [r3, #48]
  63              		.loc 1 361 3 view .LVU6
  64 0020 1A6B     		ldr	r2, [r3, #48]
  65 0022 02F08002 		and	r2, r2, #128
  66 0026 0092     		str	r2, [sp]
  67              		.loc 1 361 3 view .LVU7
  68 0028 009A     		ldr	r2, [sp]
  69              	.LBE4:
  70              		.loc 1 361 3 view .LVU8
 362:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  71              		.loc 1 362 3 view .LVU9
  72              	.LBB5:
  73              		.loc 1 362 3 view .LVU10
  74 002a 0194     		str	r4, [sp, #4]
  75              		.loc 1 362 3 view .LVU11
  76 002c 1A6B     		ldr	r2, [r3, #48]
  77 002e 42F00102 		orr	r2, r2, #1
  78 0032 1A63     		str	r2, [r3, #48]
  79              		.loc 1 362 3 view .LVU12
  80 0034 1A6B     		ldr	r2, [r3, #48]
  81 0036 02F00102 		and	r2, r2, #1
  82 003a 0192     		str	r2, [sp, #4]
  83              		.loc 1 362 3 view .LVU13
  84 003c 019A     		ldr	r2, [sp, #4]
  85              	.LBE5:
  86              		.loc 1 362 3 view .LVU14
 363:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  87              		.loc 1 363 3 view .LVU15
  88              	.LBB6:
  89              		.loc 1 363 3 view .LVU16
  90 003e 0294     		str	r4, [sp, #8]
  91              		.loc 1 363 3 view .LVU17
  92 0040 1A6B     		ldr	r2, [r3, #48]
  93 0042 42F00202 		orr	r2, r2, #2
  94 0046 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 9


  95              		.loc 1 363 3 view .LVU18
  96 0048 1B6B     		ldr	r3, [r3, #48]
  97 004a 03F00203 		and	r3, r3, #2
  98 004e 0293     		str	r3, [sp, #8]
  99              		.loc 1 363 3 view .LVU19
 100 0050 029B     		ldr	r3, [sp, #8]
 101              	.LBE6:
 102              		.loc 1 363 3 view .LVU20
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   // -------------------------------
 366:Core/Src/main.c ****   // LCD pins configuration
 367:Core/Src/main.c ****   // -------------------------------
 368:Core/Src/main.c ****   // Configure PC14 (RS) and PC15 (E) as output push-pull
 369:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14 | GPIO_PIN_15;
 103              		.loc 1 369 3 view .LVU21
 104              		.loc 1 369 23 is_stmt 0 view .LVU22
 105 0052 4FF4404B 		mov	fp, #49152
 106 0056 CDF80CB0 		str	fp, [sp, #12]
 370:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107              		.loc 1 370 3 is_stmt 1 view .LVU23
 108              		.loc 1 370 24 is_stmt 0 view .LVU24
 109 005a 0127     		movs	r7, #1
 110 005c 0497     		str	r7, [sp, #16]
 371:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 371 3 is_stmt 1 view .LVU25
 372:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 112              		.loc 1 372 3 view .LVU26
 373:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 113              		.loc 1 373 3 view .LVU27
 114 005e DFF880A0 		ldr	r10, .L3+12
 115 0062 2946     		mov	r1, r5
 116 0064 5046     		mov	r0, r10
 117 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL0:
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   // Configure PB8 (D4) and PB9 (D5) as output push-pull
 376:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 119              		.loc 1 376 3 view .LVU28
 120              		.loc 1 376 23 is_stmt 0 view .LVU29
 121 006a 4FF44079 		mov	r9, #768
 122 006e CDF80C90 		str	r9, [sp, #12]
 377:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 123              		.loc 1 377 3 is_stmt 1 view .LVU30
 124 0072 2946     		mov	r1, r5
 125 0074 1848     		ldr	r0, .L3+4
 126 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL1:
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   // Configure PA12 (D6) and PA15 (D7) as output push-pull
 380:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_15;
 128              		.loc 1 380 3 view .LVU31
 129              		.loc 1 380 23 is_stmt 0 view .LVU32
 130 007a 4FF41048 		mov	r8, #36864
 131 007e CDF80C80 		str	r8, [sp, #12]
 381:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 132              		.loc 1 381 3 is_stmt 1 view .LVU33
 133 0082 164E     		ldr	r6, .L3+8
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 10


 134 0084 2946     		mov	r1, r5
 135 0086 3046     		mov	r0, r6
 136 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL2:
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   // Set all LCD pins LOW initially
 384:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14 | GPIO_PIN_15, GPIO_PIN_RESET);
 138              		.loc 1 384 3 view .LVU34
 139 008c 2246     		mov	r2, r4
 140 008e 5946     		mov	r1, fp
 141 0090 5046     		mov	r0, r10
 142 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL3:
 385:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 144              		.loc 1 385 3 view .LVU35
 145 0096 2246     		mov	r2, r4
 146 0098 4946     		mov	r1, r9
 147 009a 0F48     		ldr	r0, .L3+4
 148 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 149              	.LVL4:
 386:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12 | GPIO_PIN_15, GPIO_PIN_RESET);
 150              		.loc 1 386 3 view .LVU36
 151 00a0 2246     		mov	r2, r4
 152 00a2 4146     		mov	r1, r8
 153 00a4 3046     		mov	r0, r6
 154 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 155              	.LVL5:
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   // -------------------------------
 390:Core/Src/main.c ****   // Button0 configuration (PA0)
 391:Core/Src/main.c ****   // -------------------------------
 392:Core/Src/main.c ****   GPIO_InitStruct.Pin = Button0_Pin;
 156              		.loc 1 392 3 view .LVU37
 157              		.loc 1 392 23 is_stmt 0 view .LVU38
 158 00aa 0397     		str	r7, [sp, #12]
 393:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING; // Interrupt on rising edge
 159              		.loc 1 393 3 is_stmt 1 view .LVU39
 160              		.loc 1 393 24 is_stmt 0 view .LVU40
 161 00ac 4FF48813 		mov	r3, #1114112
 162 00b0 0493     		str	r3, [sp, #16]
 394:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;         // Use pull-up resistor
 163              		.loc 1 394 3 is_stmt 1 view .LVU41
 164              		.loc 1 394 24 is_stmt 0 view .LVU42
 165 00b2 0597     		str	r7, [sp, #20]
 395:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 395 3 is_stmt 1 view .LVU43
 167 00b4 2946     		mov	r1, r5
 168 00b6 3046     		mov	r0, r6
 169 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL6:
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   // Enable and set EXTI line 0 interrupt priority
 398:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 171              		.loc 1 398 3 view .LVU44
 172 00bc 2246     		mov	r2, r4
 173 00be 0221     		movs	r1, #2
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 11


 174 00c0 0620     		movs	r0, #6
 175 00c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 176              	.LVL7:
 399:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 177              		.loc 1 399 3 view .LVU45
 178 00c6 0620     		movs	r0, #6
 179 00c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 180              	.LVL8:
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 402:Core/Src/main.c **** }
 181              		.loc 1 402 1 is_stmt 0 view .LVU46
 182 00cc 09B0     		add	sp, sp, #36
 183              		.cfi_def_cfa_offset 36
 184              		@ sp needed
 185 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 186              	.L4:
 187 00d2 00BF     		.align	2
 188              	.L3:
 189 00d4 00380240 		.word	1073887232
 190 00d8 00040240 		.word	1073873920
 191 00dc 00000240 		.word	1073872896
 192 00e0 00080240 		.word	1073874944
 193              		.cfi_endproc
 194              	.LFE142:
 196              		.section	.text.MX_DMA_Init,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	MX_DMA_Init:
 203              	.LFB141:
 336:Core/Src/main.c **** 
 204              		.loc 1 336 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 00B5     		push	{lr}
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 14, -4
 211 0002 83B0     		sub	sp, sp, #12
 212              		.cfi_def_cfa_offset 16
 339:Core/Src/main.c **** 
 213              		.loc 1 339 3 view .LVU48
 214              	.LBB7:
 339:Core/Src/main.c **** 
 215              		.loc 1 339 3 view .LVU49
 216 0004 0021     		movs	r1, #0
 217 0006 0191     		str	r1, [sp, #4]
 339:Core/Src/main.c **** 
 218              		.loc 1 339 3 view .LVU50
 219 0008 094B     		ldr	r3, .L7
 220 000a 1A6B     		ldr	r2, [r3, #48]
 221 000c 42F40012 		orr	r2, r2, #2097152
 222 0010 1A63     		str	r2, [r3, #48]
 339:Core/Src/main.c **** 
 223              		.loc 1 339 3 view .LVU51
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 12


 224 0012 1B6B     		ldr	r3, [r3, #48]
 225 0014 03F40013 		and	r3, r3, #2097152
 226 0018 0193     		str	r3, [sp, #4]
 339:Core/Src/main.c **** 
 227              		.loc 1 339 3 view .LVU52
 228 001a 019B     		ldr	r3, [sp, #4]
 229              	.LBE7:
 339:Core/Src/main.c **** 
 230              		.loc 1 339 3 view .LVU53
 343:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 231              		.loc 1 343 3 view .LVU54
 232 001c 0A46     		mov	r2, r1
 233 001e 1020     		movs	r0, #16
 234 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 235              	.LVL9:
 344:Core/Src/main.c **** 
 236              		.loc 1 344 3 view .LVU55
 237 0024 1020     		movs	r0, #16
 238 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 239              	.LVL10:
 346:Core/Src/main.c **** 
 240              		.loc 1 346 1 is_stmt 0 view .LVU56
 241 002a 03B0     		add	sp, sp, #12
 242              		.cfi_def_cfa_offset 4
 243              		@ sp needed
 244 002c 5DF804FB 		ldr	pc, [sp], #4
 245              	.L8:
 246              		.align	2
 247              	.L7:
 248 0030 00380240 		.word	1073887232
 249              		.cfi_endproc
 250              	.LFE141:
 252              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 253              		.align	1
 254              		.global	EXTI0_IRQHandler
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 259              	EXTI0_IRQHandler:
 260              	.LFB143:
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 405:Core/Src/main.c **** void EXTI0_IRQHandler(void){
 261              		.loc 1 405 28 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 08B5     		push	{r3, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** 	// TODO: Debounce using HAL_GetTick()
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** 	// TODO: Disable DMA transfer and abort IT, then start DMA in IT mode with new LUT and re-enable t
 411:Core/Src/main.c **** 	// HINT: Consider using C's "switch" function to handle LUT changes
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 13


 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** 	HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
 269              		.loc 1 416 2 view .LVU58
 270 0002 0120     		movs	r0, #1
 271 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 272              	.LVL11:
 417:Core/Src/main.c **** }
 273              		.loc 1 417 1 is_stmt 0 view .LVU59
 274 0008 08BD     		pop	{r3, pc}
 275              		.cfi_endproc
 276              	.LFE143:
 278              		.section	.text.Error_Handler,"ax",%progbits
 279              		.align	1
 280              		.global	Error_Handler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	Error_Handler:
 286              	.LFB144:
 418:Core/Src/main.c **** /* USER CODE END 4 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** /**
 421:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 422:Core/Src/main.c ****   * @retval None
 423:Core/Src/main.c ****   */
 424:Core/Src/main.c **** void Error_Handler(void)
 425:Core/Src/main.c **** {
 287              		.loc 1 425 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ Volatile: function does not return.
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 426:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 427:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 428:Core/Src/main.c ****   __disable_irq();
 293              		.loc 1 428 3 view .LVU61
 294              	.LBB8:
 295              	.LBI8:
 296              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 14


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 15


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 16


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 17


 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 18


 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 19


 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 20


 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 21


 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 22


 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 23


 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 24


 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 25


 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 26


 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 27


 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 28


 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 29


 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 30


 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 297              		.loc 2 960 27 view .LVU62
 298              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 299              		.loc 2 962 3 view .LVU63
 300              		.syntax unified
 301              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 302 0000 72B6     		cpsid i
 303              	@ 0 "" 2
 304              		.thumb
 305              		.syntax unified
 306              	.L12:
 307              	.LBE9:
 308              	.LBE8:
 429:Core/Src/main.c ****   while (1)
 309              		.loc 1 429 3 view .LVU64
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****   }
 310              		.loc 1 431 3 view .LVU65
 429:Core/Src/main.c ****   while (1)
 311              		.loc 1 429 9 view .LVU66
 312 0002 FEE7     		b	.L12
 313              		.cfi_endproc
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 31


 314              	.LFE144:
 316              		.section	.text.MX_TIM2_Init,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	MX_TIM2_Init:
 323              	.LFB139:
 201:Core/Src/main.c **** 
 324              		.loc 1 201 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 56
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 00B5     		push	{lr}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 14, -4
 331 0002 8FB0     		sub	sp, sp, #60
 332              		.cfi_def_cfa_offset 64
 207:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 333              		.loc 1 207 3 view .LVU68
 207:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 334              		.loc 1 207 26 is_stmt 0 view .LVU69
 335 0004 0023     		movs	r3, #0
 336 0006 0A93     		str	r3, [sp, #40]
 337 0008 0B93     		str	r3, [sp, #44]
 338 000a 0C93     		str	r3, [sp, #48]
 339 000c 0D93     		str	r3, [sp, #52]
 208:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 340              		.loc 1 208 3 is_stmt 1 view .LVU70
 208:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 341              		.loc 1 208 27 is_stmt 0 view .LVU71
 342 000e 0893     		str	r3, [sp, #32]
 343 0010 0993     		str	r3, [sp, #36]
 209:Core/Src/main.c **** 
 344              		.loc 1 209 3 is_stmt 1 view .LVU72
 209:Core/Src/main.c **** 
 345              		.loc 1 209 22 is_stmt 0 view .LVU73
 346 0012 0193     		str	r3, [sp, #4]
 347 0014 0293     		str	r3, [sp, #8]
 348 0016 0393     		str	r3, [sp, #12]
 349 0018 0493     		str	r3, [sp, #16]
 350 001a 0593     		str	r3, [sp, #20]
 351 001c 0693     		str	r3, [sp, #24]
 352 001e 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 353              		.loc 1 214 3 is_stmt 1 view .LVU74
 214:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 354              		.loc 1 214 18 is_stmt 0 view .LVU75
 355 0020 3548     		ldr	r0, .L27
 356 0022 4FF08042 		mov	r2, #1073741824
 357 0026 0260     		str	r2, [r0]
 215:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 358              		.loc 1 215 3 is_stmt 1 view .LVU76
 215:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 359              		.loc 1 215 24 is_stmt 0 view .LVU77
 360 0028 4360     		str	r3, [r0, #4]
 216:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 32


 361              		.loc 1 216 3 is_stmt 1 view .LVU78
 216:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 362              		.loc 1 216 26 is_stmt 0 view .LVU79
 363 002a 8360     		str	r3, [r0, #8]
 217:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 364              		.loc 1 217 3 is_stmt 1 view .LVU80
 217:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 365              		.loc 1 217 21 is_stmt 0 view .LVU81
 366 002c 4FF0FF32 		mov	r2, #-1
 367 0030 C260     		str	r2, [r0, #12]
 218:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 368              		.loc 1 218 3 is_stmt 1 view .LVU82
 218:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 369              		.loc 1 218 28 is_stmt 0 view .LVU83
 370 0032 0361     		str	r3, [r0, #16]
 219:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 371              		.loc 1 219 3 is_stmt 1 view .LVU84
 219:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 372              		.loc 1 219 32 is_stmt 0 view .LVU85
 373 0034 8361     		str	r3, [r0, #24]
 220:Core/Src/main.c ****   {
 374              		.loc 1 220 3 is_stmt 1 view .LVU86
 220:Core/Src/main.c ****   {
 375              		.loc 1 220 7 is_stmt 0 view .LVU87
 376 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 377              	.LVL12:
 220:Core/Src/main.c ****   {
 378              		.loc 1 220 6 discriminator 1 view .LVU88
 379 003a 0028     		cmp	r0, #0
 380 003c 50D1     		bne	.L21
 224:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 381              		.loc 1 224 3 is_stmt 1 view .LVU89
 224:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 382              		.loc 1 224 34 is_stmt 0 view .LVU90
 383 003e 4FF48053 		mov	r3, #4096
 384 0042 0A93     		str	r3, [sp, #40]
 225:Core/Src/main.c ****   {
 385              		.loc 1 225 3 is_stmt 1 view .LVU91
 225:Core/Src/main.c ****   {
 386              		.loc 1 225 7 is_stmt 0 view .LVU92
 387 0044 0AA9     		add	r1, sp, #40
 388 0046 2C48     		ldr	r0, .L27
 389 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 390              	.LVL13:
 225:Core/Src/main.c ****   {
 391              		.loc 1 225 6 discriminator 1 view .LVU93
 392 004c 0028     		cmp	r0, #0
 393 004e 49D1     		bne	.L22
 229:Core/Src/main.c ****   {
 394              		.loc 1 229 3 is_stmt 1 view .LVU94
 229:Core/Src/main.c ****   {
 395              		.loc 1 229 7 is_stmt 0 view .LVU95
 396 0050 2948     		ldr	r0, .L27
 397 0052 FFF7FEFF 		bl	HAL_TIM_OC_Init
 398              	.LVL14:
 229:Core/Src/main.c ****   {
 399              		.loc 1 229 6 discriminator 1 view .LVU96
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 33


 400 0056 0028     		cmp	r0, #0
 401 0058 46D1     		bne	.L23
 233:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 402              		.loc 1 233 3 is_stmt 1 view .LVU97
 233:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 403              		.loc 1 233 37 is_stmt 0 view .LVU98
 404 005a 0023     		movs	r3, #0
 405 005c 0893     		str	r3, [sp, #32]
 234:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 406              		.loc 1 234 3 is_stmt 1 view .LVU99
 234:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 407              		.loc 1 234 33 is_stmt 0 view .LVU100
 408 005e 0993     		str	r3, [sp, #36]
 235:Core/Src/main.c ****   {
 409              		.loc 1 235 3 is_stmt 1 view .LVU101
 235:Core/Src/main.c ****   {
 410              		.loc 1 235 7 is_stmt 0 view .LVU102
 411 0060 08A9     		add	r1, sp, #32
 412 0062 2548     		ldr	r0, .L27
 413 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 414              	.LVL15:
 235:Core/Src/main.c ****   {
 415              		.loc 1 235 6 discriminator 1 view .LVU103
 416 0068 0028     		cmp	r0, #0
 417 006a 3FD1     		bne	.L24
 239:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 418              		.loc 1 239 3 is_stmt 1 view .LVU104
 239:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 419              		.loc 1 239 20 is_stmt 0 view .LVU105
 420 006c 0022     		movs	r2, #0
 421 006e 0192     		str	r2, [sp, #4]
 240:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 422              		.loc 1 240 3 is_stmt 1 view .LVU106
 240:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 423              		.loc 1 240 19 is_stmt 0 view .LVU107
 424 0070 0292     		str	r2, [sp, #8]
 241:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 425              		.loc 1 241 3 is_stmt 1 view .LVU108
 241:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 426              		.loc 1 241 24 is_stmt 0 view .LVU109
 427 0072 0392     		str	r2, [sp, #12]
 242:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 428              		.loc 1 242 3 is_stmt 1 view .LVU110
 242:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 429              		.loc 1 242 24 is_stmt 0 view .LVU111
 430 0074 0592     		str	r2, [sp, #20]
 243:Core/Src/main.c ****   {
 431              		.loc 1 243 3 is_stmt 1 view .LVU112
 243:Core/Src/main.c ****   {
 432              		.loc 1 243 7 is_stmt 0 view .LVU113
 433 0076 01A9     		add	r1, sp, #4
 434 0078 1F48     		ldr	r0, .L27
 435 007a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 436              	.LVL16:
 243:Core/Src/main.c ****   {
 437              		.loc 1 243 6 discriminator 1 view .LVU114
 438 007e 0028     		cmp	r0, #0
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 34


 439 0080 36D1     		bne	.L25
 249:Core/Src/main.c **** 
 440              		.loc 1 249 3 is_stmt 1 view .LVU115
 441              	.LBB10:
 249:Core/Src/main.c **** 
 442              		.loc 1 249 3 view .LVU116
 443 0082 0023     		movs	r3, #0
 444 0084 0093     		str	r3, [sp]
 249:Core/Src/main.c **** 
 445              		.loc 1 249 3 view .LVU117
 446 0086 1D4A     		ldr	r2, .L27+4
 447 0088 116B     		ldr	r1, [r2, #48]
 448 008a 41F40011 		orr	r1, r1, #2097152
 449 008e 1163     		str	r1, [r2, #48]
 249:Core/Src/main.c **** 
 450              		.loc 1 249 3 view .LVU118
 451 0090 126B     		ldr	r2, [r2, #48]
 452 0092 02F40012 		and	r2, r2, #2097152
 453 0096 0092     		str	r2, [sp]
 249:Core/Src/main.c **** 
 454              		.loc 1 249 3 view .LVU119
 455 0098 009A     		ldr	r2, [sp]
 456              	.LBE10:
 249:Core/Src/main.c **** 
 457              		.loc 1 249 3 view .LVU120
 251:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 458              		.loc 1 251 3 view .LVU121
 251:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 459              		.loc 1 251 26 is_stmt 0 view .LVU122
 460 009a 1948     		ldr	r0, .L27+8
 461 009c 194A     		ldr	r2, .L27+12
 462 009e 0260     		str	r2, [r0]
 252:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 463              		.loc 1 252 3 is_stmt 1 view .LVU123
 252:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 464              		.loc 1 252 30 is_stmt 0 view .LVU124
 465 00a0 4FF0C062 		mov	r2, #100663296
 466 00a4 4260     		str	r2, [r0, #4]
 253:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 467              		.loc 1 253 3 is_stmt 1 view .LVU125
 253:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 468              		.loc 1 253 32 is_stmt 0 view .LVU126
 469 00a6 4022     		movs	r2, #64
 470 00a8 8260     		str	r2, [r0, #8]
 254:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 471              		.loc 1 254 3 is_stmt 1 view .LVU127
 254:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 472              		.loc 1 254 32 is_stmt 0 view .LVU128
 473 00aa C360     		str	r3, [r0, #12]
 255:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 474              		.loc 1 255 3 is_stmt 1 view .LVU129
 255:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 475              		.loc 1 255 29 is_stmt 0 view .LVU130
 476 00ac 4FF48062 		mov	r2, #1024
 477 00b0 0261     		str	r2, [r0, #16]
 256:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 478              		.loc 1 256 3 is_stmt 1 view .LVU131
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 35


 256:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 479              		.loc 1 256 42 is_stmt 0 view .LVU132
 480 00b2 4FF48052 		mov	r2, #4096
 481 00b6 4261     		str	r2, [r0, #20]
 257:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 482              		.loc 1 257 3 is_stmt 1 view .LVU133
 257:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 483              		.loc 1 257 39 is_stmt 0 view .LVU134
 484 00b8 4FF48042 		mov	r2, #16384
 485 00bc 8261     		str	r2, [r0, #24]
 258:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 486              		.loc 1 258 3 is_stmt 1 view .LVU135
 258:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 487              		.loc 1 258 27 is_stmt 0 view .LVU136
 488 00be 4FF48072 		mov	r2, #256
 489 00c2 C261     		str	r2, [r0, #28]
 259:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 490              		.loc 1 259 3 is_stmt 1 view .LVU137
 259:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 491              		.loc 1 259 31 is_stmt 0 view .LVU138
 492 00c4 4FF40032 		mov	r2, #131072
 493 00c8 0262     		str	r2, [r0, #32]
 260:Core/Src/main.c **** 
 494              		.loc 1 260 3 is_stmt 1 view .LVU139
 260:Core/Src/main.c **** 
 495              		.loc 1 260 31 is_stmt 0 view .LVU140
 496 00ca 4362     		str	r3, [r0, #36]
 262:Core/Src/main.c ****   {
 497              		.loc 1 262 3 is_stmt 1 view .LVU141
 262:Core/Src/main.c ****   {
 498              		.loc 1 262 7 is_stmt 0 view .LVU142
 499 00cc FFF7FEFF 		bl	HAL_DMA_Init
 500              	.LVL17:
 262:Core/Src/main.c ****   {
 501              		.loc 1 262 6 discriminator 1 view .LVU143
 502 00d0 80B9     		cbnz	r0, .L26
 268:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 503              		.loc 1 268 3 is_stmt 1 view .LVU144
 268:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 504              		.loc 1 268 3 view .LVU145
 505 00d2 094A     		ldr	r2, .L27
 506 00d4 0A4B     		ldr	r3, .L27+8
 507 00d6 5362     		str	r3, [r2, #36]
 268:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 508              		.loc 1 268 3 view .LVU146
 509 00d8 9A63     		str	r2, [r3, #56]
 268:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 510              		.loc 1 268 3 view .LVU147
 271:Core/Src/main.c **** 
 511              		.loc 1 271 1 is_stmt 0 view .LVU148
 512 00da 0FB0     		add	sp, sp, #60
 513              		.cfi_remember_state
 514              		.cfi_def_cfa_offset 4
 515              		@ sp needed
 516 00dc 5DF804FB 		ldr	pc, [sp], #4
 517              	.L21:
 518              		.cfi_restore_state
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 36


 222:Core/Src/main.c ****   }
 519              		.loc 1 222 5 is_stmt 1 view .LVU149
 520 00e0 FFF7FEFF 		bl	Error_Handler
 521              	.LVL18:
 522              	.L22:
 227:Core/Src/main.c ****   }
 523              		.loc 1 227 5 view .LVU150
 524 00e4 FFF7FEFF 		bl	Error_Handler
 525              	.LVL19:
 526              	.L23:
 231:Core/Src/main.c ****   }
 527              		.loc 1 231 5 view .LVU151
 528 00e8 FFF7FEFF 		bl	Error_Handler
 529              	.LVL20:
 530              	.L24:
 237:Core/Src/main.c ****   }
 531              		.loc 1 237 5 view .LVU152
 532 00ec FFF7FEFF 		bl	Error_Handler
 533              	.LVL21:
 534              	.L25:
 245:Core/Src/main.c ****   }
 535              		.loc 1 245 5 view .LVU153
 536 00f0 FFF7FEFF 		bl	Error_Handler
 537              	.LVL22:
 538              	.L26:
 264:Core/Src/main.c ****   }
 539              		.loc 1 264 7 view .LVU154
 540 00f4 FFF7FEFF 		bl	Error_Handler
 541              	.LVL23:
 542              	.L28:
 543              		.align	2
 544              	.L27:
 545 00f8 00000000 		.word	htim2
 546 00fc 00380240 		.word	1073887232
 547 0100 00000000 		.word	hdma_tim2_ch1
 548 0104 88600240 		.word	1073897608
 549              		.cfi_endproc
 550              	.LFE139:
 552              		.section	.text.MX_TIM3_Init,"ax",%progbits
 553              		.align	1
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 558              	MX_TIM3_Init:
 559              	.LFB140:
 279:Core/Src/main.c **** 
 560              		.loc 1 279 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 56
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564 0000 00B5     		push	{lr}
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 14, -4
 567 0002 8FB0     		sub	sp, sp, #60
 568              		.cfi_def_cfa_offset 64
 285:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 569              		.loc 1 285 3 view .LVU156
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 37


 285:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 570              		.loc 1 285 26 is_stmt 0 view .LVU157
 571 0004 0023     		movs	r3, #0
 572 0006 0A93     		str	r3, [sp, #40]
 573 0008 0B93     		str	r3, [sp, #44]
 574 000a 0C93     		str	r3, [sp, #48]
 575 000c 0D93     		str	r3, [sp, #52]
 286:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 576              		.loc 1 286 3 is_stmt 1 view .LVU158
 286:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 577              		.loc 1 286 27 is_stmt 0 view .LVU159
 578 000e 0893     		str	r3, [sp, #32]
 579 0010 0993     		str	r3, [sp, #36]
 287:Core/Src/main.c **** 
 580              		.loc 1 287 3 is_stmt 1 view .LVU160
 287:Core/Src/main.c **** 
 581              		.loc 1 287 22 is_stmt 0 view .LVU161
 582 0012 0193     		str	r3, [sp, #4]
 583 0014 0293     		str	r3, [sp, #8]
 584 0016 0393     		str	r3, [sp, #12]
 585 0018 0493     		str	r3, [sp, #16]
 586 001a 0593     		str	r3, [sp, #20]
 587 001c 0693     		str	r3, [sp, #24]
 588 001e 0793     		str	r3, [sp, #28]
 292:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 589              		.loc 1 292 3 is_stmt 1 view .LVU162
 292:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 590              		.loc 1 292 18 is_stmt 0 view .LVU163
 591 0020 1E48     		ldr	r0, .L41
 592 0022 1F4A     		ldr	r2, .L41+4
 593 0024 0260     		str	r2, [r0]
 293:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 594              		.loc 1 293 3 is_stmt 1 view .LVU164
 293:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 595              		.loc 1 293 24 is_stmt 0 view .LVU165
 596 0026 4360     		str	r3, [r0, #4]
 294:Core/Src/main.c ****   htim3.Init.Period = 65535;
 597              		.loc 1 294 3 is_stmt 1 view .LVU166
 294:Core/Src/main.c ****   htim3.Init.Period = 65535;
 598              		.loc 1 294 26 is_stmt 0 view .LVU167
 599 0028 8360     		str	r3, [r0, #8]
 295:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 600              		.loc 1 295 3 is_stmt 1 view .LVU168
 295:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 601              		.loc 1 295 21 is_stmt 0 view .LVU169
 602 002a 4FF6FF72 		movw	r2, #65535
 603 002e C260     		str	r2, [r0, #12]
 296:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 604              		.loc 1 296 3 is_stmt 1 view .LVU170
 296:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 605              		.loc 1 296 28 is_stmt 0 view .LVU171
 606 0030 0361     		str	r3, [r0, #16]
 297:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 607              		.loc 1 297 3 is_stmt 1 view .LVU172
 297:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 608              		.loc 1 297 32 is_stmt 0 view .LVU173
 609 0032 8361     		str	r3, [r0, #24]
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 38


 298:Core/Src/main.c ****   {
 610              		.loc 1 298 3 is_stmt 1 view .LVU174
 298:Core/Src/main.c ****   {
 611              		.loc 1 298 7 is_stmt 0 view .LVU175
 612 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 613              	.LVL24:
 298:Core/Src/main.c ****   {
 614              		.loc 1 298 6 discriminator 1 view .LVU176
 615 0038 28BB     		cbnz	r0, .L36
 302:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 616              		.loc 1 302 3 is_stmt 1 view .LVU177
 302:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 617              		.loc 1 302 34 is_stmt 0 view .LVU178
 618 003a 4FF48053 		mov	r3, #4096
 619 003e 0A93     		str	r3, [sp, #40]
 303:Core/Src/main.c ****   {
 620              		.loc 1 303 3 is_stmt 1 view .LVU179
 303:Core/Src/main.c ****   {
 621              		.loc 1 303 7 is_stmt 0 view .LVU180
 622 0040 0AA9     		add	r1, sp, #40
 623 0042 1648     		ldr	r0, .L41
 624 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 625              	.LVL25:
 303:Core/Src/main.c ****   {
 626              		.loc 1 303 6 discriminator 1 view .LVU181
 627 0048 F8B9     		cbnz	r0, .L37
 307:Core/Src/main.c ****   {
 628              		.loc 1 307 3 is_stmt 1 view .LVU182
 307:Core/Src/main.c ****   {
 629              		.loc 1 307 7 is_stmt 0 view .LVU183
 630 004a 1448     		ldr	r0, .L41
 631 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 632              	.LVL26:
 307:Core/Src/main.c ****   {
 633              		.loc 1 307 6 discriminator 1 view .LVU184
 634 0050 E8B9     		cbnz	r0, .L38
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 635              		.loc 1 311 3 is_stmt 1 view .LVU185
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 636              		.loc 1 311 37 is_stmt 0 view .LVU186
 637 0052 0023     		movs	r3, #0
 638 0054 0893     		str	r3, [sp, #32]
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 639              		.loc 1 312 3 is_stmt 1 view .LVU187
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 640              		.loc 1 312 33 is_stmt 0 view .LVU188
 641 0056 0993     		str	r3, [sp, #36]
 313:Core/Src/main.c ****   {
 642              		.loc 1 313 3 is_stmt 1 view .LVU189
 313:Core/Src/main.c ****   {
 643              		.loc 1 313 7 is_stmt 0 view .LVU190
 644 0058 08A9     		add	r1, sp, #32
 645 005a 1048     		ldr	r0, .L41
 646 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 647              	.LVL27:
 313:Core/Src/main.c ****   {
 648              		.loc 1 313 6 discriminator 1 view .LVU191
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 39


 649 0060 B8B9     		cbnz	r0, .L39
 317:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 650              		.loc 1 317 3 is_stmt 1 view .LVU192
 317:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 651              		.loc 1 317 20 is_stmt 0 view .LVU193
 652 0062 6023     		movs	r3, #96
 653 0064 0193     		str	r3, [sp, #4]
 318:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 654              		.loc 1 318 3 is_stmt 1 view .LVU194
 318:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 655              		.loc 1 318 19 is_stmt 0 view .LVU195
 656 0066 0023     		movs	r3, #0
 657 0068 0293     		str	r3, [sp, #8]
 319:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 658              		.loc 1 319 3 is_stmt 1 view .LVU196
 319:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 659              		.loc 1 319 24 is_stmt 0 view .LVU197
 660 006a 0393     		str	r3, [sp, #12]
 320:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 661              		.loc 1 320 3 is_stmt 1 view .LVU198
 320:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 662              		.loc 1 320 24 is_stmt 0 view .LVU199
 663 006c 0593     		str	r3, [sp, #20]
 321:Core/Src/main.c ****   {
 664              		.loc 1 321 3 is_stmt 1 view .LVU200
 321:Core/Src/main.c ****   {
 665              		.loc 1 321 7 is_stmt 0 view .LVU201
 666 006e 0822     		movs	r2, #8
 667 0070 01A9     		add	r1, sp, #4
 668 0072 0A48     		ldr	r0, .L41
 669 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 670              	.LVL28:
 321:Core/Src/main.c ****   {
 671              		.loc 1 321 6 discriminator 1 view .LVU202
 672 0078 68B9     		cbnz	r0, .L40
 328:Core/Src/main.c **** 
 673              		.loc 1 328 3 is_stmt 1 view .LVU203
 674 007a 0848     		ldr	r0, .L41
 675 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 676              	.LVL29:
 330:Core/Src/main.c **** 
 677              		.loc 1 330 1 is_stmt 0 view .LVU204
 678 0080 0FB0     		add	sp, sp, #60
 679              		.cfi_remember_state
 680              		.cfi_def_cfa_offset 4
 681              		@ sp needed
 682 0082 5DF804FB 		ldr	pc, [sp], #4
 683              	.L36:
 684              		.cfi_restore_state
 300:Core/Src/main.c ****   }
 685              		.loc 1 300 5 is_stmt 1 view .LVU205
 686 0086 FFF7FEFF 		bl	Error_Handler
 687              	.LVL30:
 688              	.L37:
 305:Core/Src/main.c ****   }
 689              		.loc 1 305 5 view .LVU206
 690 008a FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 40


 691              	.LVL31:
 692              	.L38:
 309:Core/Src/main.c ****   }
 693              		.loc 1 309 5 view .LVU207
 694 008e FFF7FEFF 		bl	Error_Handler
 695              	.LVL32:
 696              	.L39:
 315:Core/Src/main.c ****   }
 697              		.loc 1 315 5 view .LVU208
 698 0092 FFF7FEFF 		bl	Error_Handler
 699              	.LVL33:
 700              	.L40:
 323:Core/Src/main.c ****   }
 701              		.loc 1 323 5 view .LVU209
 702 0096 FFF7FEFF 		bl	Error_Handler
 703              	.LVL34:
 704              	.L42:
 705 009a 00BF     		.align	2
 706              	.L41:
 707 009c 00000000 		.word	htim3
 708 00a0 00040040 		.word	1073742848
 709              		.cfi_endproc
 710              	.LFE140:
 712              		.section	.text.SystemClock_Config,"ax",%progbits
 713              		.align	1
 714              		.global	SystemClock_Config
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 719              	SystemClock_Config:
 720              	.LFB138:
 159:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 721              		.loc 1 159 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 80
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725 0000 10B5     		push	{r4, lr}
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 4, -8
 728              		.cfi_offset 14, -4
 729 0002 94B0     		sub	sp, sp, #80
 730              		.cfi_def_cfa_offset 88
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 731              		.loc 1 160 3 view .LVU211
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 732              		.loc 1 160 22 is_stmt 0 view .LVU212
 733 0004 07AC     		add	r4, sp, #28
 734 0006 3422     		movs	r2, #52
 735 0008 0021     		movs	r1, #0
 736 000a 2046     		mov	r0, r4
 737 000c FFF7FEFF 		bl	memset
 738              	.LVL35:
 161:Core/Src/main.c **** 
 739              		.loc 1 161 3 is_stmt 1 view .LVU213
 161:Core/Src/main.c **** 
 740              		.loc 1 161 22 is_stmt 0 view .LVU214
 741 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 41


 742 0012 0293     		str	r3, [sp, #8]
 743 0014 0393     		str	r3, [sp, #12]
 744 0016 0493     		str	r3, [sp, #16]
 745 0018 0593     		str	r3, [sp, #20]
 746 001a 0693     		str	r3, [sp, #24]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 747              		.loc 1 165 3 is_stmt 1 view .LVU215
 748              	.LBB11:
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 749              		.loc 1 165 3 view .LVU216
 750 001c 0093     		str	r3, [sp]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 751              		.loc 1 165 3 view .LVU217
 752 001e 194A     		ldr	r2, .L49
 753 0020 116C     		ldr	r1, [r2, #64]
 754 0022 41F08051 		orr	r1, r1, #268435456
 755 0026 1164     		str	r1, [r2, #64]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 756              		.loc 1 165 3 view .LVU218
 757 0028 126C     		ldr	r2, [r2, #64]
 758 002a 02F08052 		and	r2, r2, #268435456
 759 002e 0092     		str	r2, [sp]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 760              		.loc 1 165 3 view .LVU219
 761 0030 009A     		ldr	r2, [sp]
 762              	.LBE11:
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 763              		.loc 1 165 3 view .LVU220
 166:Core/Src/main.c **** 
 764              		.loc 1 166 3 view .LVU221
 765              	.LBB12:
 166:Core/Src/main.c **** 
 766              		.loc 1 166 3 view .LVU222
 767 0032 0193     		str	r3, [sp, #4]
 166:Core/Src/main.c **** 
 768              		.loc 1 166 3 view .LVU223
 769 0034 1449     		ldr	r1, .L49+4
 770 0036 0A68     		ldr	r2, [r1]
 771 0038 22F44042 		bic	r2, r2, #49152
 772 003c 42F48042 		orr	r2, r2, #16384
 773 0040 0A60     		str	r2, [r1]
 166:Core/Src/main.c **** 
 774              		.loc 1 166 3 view .LVU224
 775 0042 0A68     		ldr	r2, [r1]
 776 0044 02F44042 		and	r2, r2, #49152
 777 0048 0192     		str	r2, [sp, #4]
 166:Core/Src/main.c **** 
 778              		.loc 1 166 3 view .LVU225
 779 004a 019A     		ldr	r2, [sp, #4]
 780              	.LBE12:
 166:Core/Src/main.c **** 
 781              		.loc 1 166 3 view .LVU226
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 782              		.loc 1 171 3 view .LVU227
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 783              		.loc 1 171 36 is_stmt 0 view .LVU228
 784 004c 0222     		movs	r2, #2
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 42


 785 004e 0792     		str	r2, [sp, #28]
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 786              		.loc 1 172 3 is_stmt 1 view .LVU229
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 787              		.loc 1 172 30 is_stmt 0 view .LVU230
 788 0050 0122     		movs	r2, #1
 789 0052 0A92     		str	r2, [sp, #40]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 790              		.loc 1 173 3 is_stmt 1 view .LVU231
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 791              		.loc 1 173 41 is_stmt 0 view .LVU232
 792 0054 1022     		movs	r2, #16
 793 0056 0B92     		str	r2, [sp, #44]
 174:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 794              		.loc 1 174 3 is_stmt 1 view .LVU233
 174:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 795              		.loc 1 174 34 is_stmt 0 view .LVU234
 796 0058 0D93     		str	r3, [sp, #52]
 175:Core/Src/main.c ****   {
 797              		.loc 1 175 3 is_stmt 1 view .LVU235
 175:Core/Src/main.c ****   {
 798              		.loc 1 175 7 is_stmt 0 view .LVU236
 799 005a 2046     		mov	r0, r4
 800 005c FFF7FEFF 		bl	HAL_RCC_OscConfig
 801              	.LVL36:
 175:Core/Src/main.c ****   {
 802              		.loc 1 175 6 discriminator 1 view .LVU237
 803 0060 60B9     		cbnz	r0, .L47
 182:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 804              		.loc 1 182 3 is_stmt 1 view .LVU238
 182:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 805              		.loc 1 182 31 is_stmt 0 view .LVU239
 806 0062 0F23     		movs	r3, #15
 807 0064 0293     		str	r3, [sp, #8]
 184:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 808              		.loc 1 184 3 is_stmt 1 view .LVU240
 184:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 809              		.loc 1 184 34 is_stmt 0 view .LVU241
 810 0066 0021     		movs	r1, #0
 811 0068 0391     		str	r1, [sp, #12]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 812              		.loc 1 185 3 is_stmt 1 view .LVU242
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 813              		.loc 1 185 35 is_stmt 0 view .LVU243
 814 006a 0491     		str	r1, [sp, #16]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 815              		.loc 1 186 3 is_stmt 1 view .LVU244
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 816              		.loc 1 186 36 is_stmt 0 view .LVU245
 817 006c 0591     		str	r1, [sp, #20]
 187:Core/Src/main.c **** 
 818              		.loc 1 187 3 is_stmt 1 view .LVU246
 187:Core/Src/main.c **** 
 819              		.loc 1 187 36 is_stmt 0 view .LVU247
 820 006e 0691     		str	r1, [sp, #24]
 189:Core/Src/main.c ****   {
 821              		.loc 1 189 3 is_stmt 1 view .LVU248
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 43


 189:Core/Src/main.c ****   {
 822              		.loc 1 189 7 is_stmt 0 view .LVU249
 823 0070 02A8     		add	r0, sp, #8
 824 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 825              	.LVL37:
 189:Core/Src/main.c ****   {
 826              		.loc 1 189 6 discriminator 1 view .LVU250
 827 0076 18B9     		cbnz	r0, .L48
 193:Core/Src/main.c **** 
 828              		.loc 1 193 1 view .LVU251
 829 0078 14B0     		add	sp, sp, #80
 830              		.cfi_remember_state
 831              		.cfi_def_cfa_offset 8
 832              		@ sp needed
 833 007a 10BD     		pop	{r4, pc}
 834              	.L47:
 835              		.cfi_restore_state
 177:Core/Src/main.c ****   }
 836              		.loc 1 177 5 is_stmt 1 view .LVU252
 837 007c FFF7FEFF 		bl	Error_Handler
 838              	.LVL38:
 839              	.L48:
 191:Core/Src/main.c ****   }
 840              		.loc 1 191 5 view .LVU253
 841 0080 FFF7FEFF 		bl	Error_Handler
 842              	.LVL39:
 843              	.L50:
 844              		.align	2
 845              	.L49:
 846 0084 00380240 		.word	1073887232
 847 0088 00700040 		.word	1073770496
 848              		.cfi_endproc
 849              	.LFE138:
 851              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 852              		.align	2
 853              	.LC0:
 854 0000 57617665 		.ascii	"Waveform: \000"
 854      666F726D 
 854      3A2000
 855              		.section	.text.main,"ax",%progbits
 856              		.align	1
 857              		.global	main
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 862              	main:
 863              	.LFB137:
  94:Core/Src/main.c **** 
 864              		.loc 1 94 1 view -0
 865              		.cfi_startproc
 866              		@ Volatile: function does not return.
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869 0000 08B5     		push	{r3, lr}
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 3, -8
 872              		.cfi_offset 14, -4
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 44


 103:Core/Src/main.c **** 
 873              		.loc 1 103 3 view .LVU255
 874 0002 FFF7FEFF 		bl	HAL_Init
 875              	.LVL40:
 110:Core/Src/main.c **** 
 876              		.loc 1 110 3 view .LVU256
 877 0006 FFF7FEFF 		bl	SystemClock_Config
 878              	.LVL41:
 117:Core/Src/main.c ****   MX_DMA_Init();
 879              		.loc 1 117 3 view .LVU257
 880 000a FFF7FEFF 		bl	MX_GPIO_Init
 881              	.LVL42:
 118:Core/Src/main.c ****   MX_TIM2_Init();
 882              		.loc 1 118 3 view .LVU258
 883 000e FFF7FEFF 		bl	MX_DMA_Init
 884              	.LVL43:
 119:Core/Src/main.c ****   MX_TIM3_Init();
 885              		.loc 1 119 3 view .LVU259
 886 0012 FFF7FEFF 		bl	MX_TIM2_Init
 887              	.LVL44:
 120:Core/Src/main.c **** 
 888              		.loc 1 120 3 view .LVU260
 889 0016 FFF7FEFF 		bl	MX_TIM3_Init
 890              	.LVL45:
 125:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 891              		.loc 1 125 3 view .LVU261
 892 001a 0821     		movs	r1, #8
 893 001c 1148     		ldr	r0, .L54
 894 001e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 895              	.LVL46:
 127:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 896              		.loc 1 127 3 view .LVU262
 897 0022 114C     		ldr	r4, .L54+4
 898 0024 0021     		movs	r1, #0
 899 0026 2046     		mov	r0, r4
 900 0028 FFF7FEFF 		bl	HAL_TIM_OC_Start
 901              	.LVL47:
 129:Core/Src/main.c **** 
 902              		.loc 1 129 2 view .LVU263
 129:Core/Src/main.c **** 
 903              		.loc 1 129 70 is_stmt 0 view .LVU264
 904 002c 2268     		ldr	r2, [r4]
 129:Core/Src/main.c **** 
 905              		.loc 1 129 2 view .LVU265
 906 002e 8023     		movs	r3, #128
 907 0030 3432     		adds	r2, r2, #52
 908 0032 0E49     		ldr	r1, .L54+8
 909 0034 0E48     		ldr	r0, .L54+12
 910 0036 FFF7FEFF 		bl	HAL_DMA_Start_IT
 911              	.LVL48:
 132:Core/Src/main.c ****   lcd_command(CLEAR);
 912              		.loc 1 132 2 is_stmt 1 view .LVU266
 913 003a FFF7FEFF 		bl	init_LCD
 914              	.LVL49:
 133:Core/Src/main.c ****   lcd_command(CURSOR_HOME);
 915              		.loc 1 133 3 view .LVU267
 916 003e 0120     		movs	r0, #1
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 45


 917 0040 FFF7FEFF 		bl	lcd_command
 918              	.LVL50:
 134:Core/Src/main.c ****   lcd_putstring("Waveform: ");
 919              		.loc 1 134 3 view .LVU268
 920 0044 0220     		movs	r0, #2
 921 0046 FFF7FEFF 		bl	lcd_command
 922              	.LVL51:
 135:Core/Src/main.c ****   lcd_command(LINE_TWO);
 923              		.loc 1 135 3 view .LVU269
 924 004a 0A48     		ldr	r0, .L54+16
 925 004c FFF7FEFF 		bl	lcd_putstring
 926              	.LVL52:
 136:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 927              		.loc 1 136 3 view .LVU270
 928 0050 C020     		movs	r0, #192
 929 0052 FFF7FEFF 		bl	lcd_command
 930              	.LVL53:
 139:Core/Src/main.c **** 
 931              		.loc 1 139 1 view .LVU271
 932 0056 2268     		ldr	r2, [r4]
 933 0058 D368     		ldr	r3, [r2, #12]
 934 005a 43F40073 		orr	r3, r3, #512
 935 005e D360     		str	r3, [r2, #12]
 936              	.L52:
 145:Core/Src/main.c ****   {
 937              		.loc 1 145 3 view .LVU272
 150:Core/Src/main.c ****   /* USER CODE END 3 */
 938              		.loc 1 150 3 view .LVU273
 145:Core/Src/main.c ****   {
 939              		.loc 1 145 9 view .LVU274
 940 0060 FEE7     		b	.L52
 941              	.L55:
 942 0062 00BF     		.align	2
 943              	.L54:
 944 0064 00000000 		.word	htim3
 945 0068 00000000 		.word	htim2
 946 006c 00000000 		.word	Sin_LUT
 947 0070 00000000 		.word	hdma_tim2_ch1
 948 0074 00000000 		.word	.LC0
 949              		.cfi_endproc
 950              	.LFE137:
 952              		.global	DestAddress
 953              		.section	.data.DestAddress,"aw"
 954              		.align	2
 957              	DestAddress:
 958 0000 3C040040 		.word	1073742908
 959              		.global	TIM2_Ticks
 960              		.section	.data.TIM2_Ticks,"aw"
 961              		.align	2
 964              	TIM2_Ticks:
 965 0000 7D000000 		.word	125
 966              		.global	Drum_LUT
 967              		.section	.data.Drum_LUT,"aw"
 968              		.align	2
 971              	Drum_LUT:
 972 0000 FF070000 		.word	2047
 973 0004 440D0000 		.word	3396
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 46


 974 0008 48070000 		.word	1864
 975 000c 3E080000 		.word	2110
 976 0010 0F080000 		.word	2063
 977 0014 480D0000 		.word	3400
 978 0018 65070000 		.word	1893
 979 001c 8D070000 		.word	1933
 980 0020 26080000 		.word	2086
 981 0024 60080000 		.word	2144
 982 0028 F4070000 		.word	2036
 983 002c EE070000 		.word	2030
 984 0030 F7070000 		.word	2039
 985 0034 9D070000 		.word	1949
 986 0038 86050000 		.word	1414
 987 003c 38070000 		.word	1848
 988 0040 2B080000 		.word	2091
 989 0044 F0070000 		.word	2032
 990 0048 FC070000 		.word	2044
 991 004c 0B080000 		.word	2059
 992 0050 00080000 		.word	2048
 993 0054 2D080000 		.word	2093
 994 0058 FC070000 		.word	2044
 995 005c E4070000 		.word	2020
 996 0060 2E080000 		.word	2094
 997 0064 0B070000 		.word	1803
 998 0068 18080000 		.word	2072
 999 006c FD070000 		.word	2045
 1000 0070 7D080000 		.word	2173
 1001 0074 E1070000 		.word	2017
 1002 0078 A30C0000 		.word	3235
 1003 007c FC040000 		.word	1276
 1004 0080 87060000 		.word	1671
 1005 0084 91080000 		.word	2193
 1006 0088 84090000 		.word	2436
 1007 008c 38080000 		.word	2104
 1008 0090 8B070000 		.word	1931
 1009 0094 0E080000 		.word	2062
 1010 0098 EC070000 		.word	2028
 1011 009c F0070000 		.word	2032
 1012 00a0 FF0F0000 		.word	4095
 1013 00a4 82070000 		.word	1922
 1014 00a8 F3070000 		.word	2035
 1015 00ac FA070000 		.word	2042
 1016 00b0 C6090000 		.word	2502
 1017 00b4 44090000 		.word	2372
 1018 00b8 1C070000 		.word	1820
 1019 00bc CC070000 		.word	1996
 1020 00c0 EC080000 		.word	2284
 1021 00c4 18080000 		.word	2072
 1022 00c8 E2070000 		.word	2018
 1023 00cc 03080000 		.word	2051
 1024 00d0 9F020000 		.word	671
 1025 00d4 79090000 		.word	2425
 1026 00d8 1B080000 		.word	2075
 1027 00dc 15080000 		.word	2069
 1028 00e0 11000000 		.word	17
 1029 00e4 BF080000 		.word	2239
 1030 00e8 FA070000 		.word	2042
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 47


 1031 00ec E7070000 		.word	2023
 1032 00f0 90080000 		.word	2192
 1033 00f4 04080000 		.word	2052
 1034 00f8 560B0000 		.word	2902
 1035 00fc 52090000 		.word	2386
 1036 0100 E90F0000 		.word	4073
 1037 0104 D9070000 		.word	2009
 1038 0108 ED080000 		.word	2285
 1039 010c F6070000 		.word	2038
 1040 0110 D6090000 		.word	2518
 1041 0114 970A0000 		.word	2711
 1042 0118 00080000 		.word	2048
 1043 011c 30080000 		.word	2096
 1044 0120 5D060000 		.word	1629
 1045 0124 D1070000 		.word	2001
 1046 0128 26080000 		.word	2086
 1047 012c FB070000 		.word	2043
 1048 0130 F5090000 		.word	2549
 1049 0134 66070000 		.word	1894
 1050 0138 0D080000 		.word	2061
 1051 013c 1C080000 		.word	2076
 1052 0140 D1070000 		.word	2001
 1053 0144 07080000 		.word	2055
 1054 0148 FB070000 		.word	2043
 1055 014c 01080000 		.word	2049
 1056 0150 33080000 		.word	2099
 1057 0154 FF070000 		.word	2047
 1058 0158 11080000 		.word	2065
 1059 015c FF070000 		.word	2047
 1060 0160 6B0B0000 		.word	2923
 1061 0164 17080000 		.word	2071
 1062 0168 E1070000 		.word	2017
 1063 016c 20080000 		.word	2080
 1064 0170 E2070000 		.word	2018
 1065 0174 01080000 		.word	2049
 1066 0178 27070000 		.word	1831
 1067 017c DE070000 		.word	2014
 1068 0180 45030000 		.word	837
 1069 0184 F7080000 		.word	2295
 1070 0188 BA070000 		.word	1978
 1071 018c F8070000 		.word	2040
 1072 0190 BC070000 		.word	1980
 1073 0194 F4070000 		.word	2036
 1074 0198 3A080000 		.word	2106
 1075 019c FA070000 		.word	2042
 1076 01a0 6B060000 		.word	1643
 1077 01a4 07080000 		.word	2055
 1078 01a8 12080000 		.word	2066
 1079 01ac F0070000 		.word	2032
 1080 01b0 02080000 		.word	2050
 1081 01b4 8A090000 		.word	2442
 1082 01b8 61080000 		.word	2145
 1083 01bc AA080000 		.word	2218
 1084 01c0 4F080000 		.word	2127
 1085 01c4 F0070000 		.word	2032
 1086 01c8 F6070000 		.word	2038
 1087 01cc F5060000 		.word	1781
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 48


 1088 01d0 6A080000 		.word	2154
 1089 01d4 89090000 		.word	2441
 1090 01d8 54080000 		.word	2132
 1091 01dc FF0F0000 		.word	4095
 1092 01e0 66080000 		.word	2150
 1093 01e4 DC070000 		.word	2012
 1094 01e8 F4070000 		.word	2036
 1095 01ec 4F060000 		.word	1615
 1096 01f0 BD070000 		.word	1981
 1097 01f4 43010000 		.word	323
 1098 01f8 DD090000 		.word	2525
 1099 01fc FF070000 		.word	2047
 1100              		.global	Guitar_LUT
 1101              		.section	.data.Guitar_LUT,"aw"
 1102              		.align	2
 1105              	Guitar_LUT:
 1106 0000 B2070000 		.word	1970
 1107 0004 F9080000 		.word	2297
 1108 0008 F7080000 		.word	2295
 1109 000c 00080000 		.word	2048
 1110 0010 E5070000 		.word	2021
 1111 0014 F1060000 		.word	1777
 1112 0018 D4060000 		.word	1748
 1113 001c 90070000 		.word	1936
 1114 0020 9D050000 		.word	1437
 1115 0024 E0070000 		.word	2016
 1116 0028 D4070000 		.word	2004
 1117 002c B7070000 		.word	1975
 1118 0030 DB070000 		.word	2011
 1119 0034 CF070000 		.word	1999
 1120 0038 12070000 		.word	1810
 1121 003c A7070000 		.word	1959
 1122 0040 AE070000 		.word	1966
 1123 0044 9D070000 		.word	1949
 1124 0048 4F060000 		.word	1615
 1125 004c 89090000 		.word	2441
 1126 0050 2A070000 		.word	1834
 1127 0054 15070000 		.word	1813
 1128 0058 65090000 		.word	2405
 1129 005c 71080000 		.word	2161
 1130 0060 97060000 		.word	1687
 1131 0064 B7070000 		.word	1975
 1132 0068 90070000 		.word	1936
 1133 006c C1070000 		.word	1985
 1134 0070 A6070000 		.word	1958
 1135 0074 7A070000 		.word	1914
 1136 0078 5B070000 		.word	1883
 1137 007c B8070000 		.word	1976
 1138 0080 B7070000 		.word	1975
 1139 0084 E6070000 		.word	2022
 1140 0088 EB060000 		.word	1771
 1141 008c 1B080000 		.word	2075
 1142 0090 EE060000 		.word	1774
 1143 0094 05080000 		.word	2053
 1144 0098 84070000 		.word	1924
 1145 009c 7D060000 		.word	1661
 1146 00a0 84080000 		.word	2180
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 49


 1147 00a4 9A070000 		.word	1946
 1148 00a8 BB070000 		.word	1979
 1149 00ac B6070000 		.word	1974
 1150 00b0 C3070000 		.word	1987
 1151 00b4 3C070000 		.word	1852
 1152 00b8 17080000 		.word	2071
 1153 00bc AB070000 		.word	1963
 1154 00c0 00070000 		.word	1792
 1155 00c4 87070000 		.word	1927
 1156 00c8 3F080000 		.word	2111
 1157 00cc 8A070000 		.word	1930
 1158 00d0 47080000 		.word	2119
 1159 00d4 16080000 		.word	2070
 1160 00d8 10070000 		.word	1808
 1161 00dc 86070000 		.word	1926
 1162 00e0 18080000 		.word	2072
 1163 00e4 11080000 		.word	2065
 1164 00e8 E3070000 		.word	2019
 1165 00ec CE060000 		.word	1742
 1166 00f0 2B080000 		.word	2091
 1167 00f4 E6070000 		.word	2022
 1168 00f8 970A0000 		.word	2711
 1169 00fc 70080000 		.word	2160
 1170 0100 EF070000 		.word	2031
 1171 0104 70080000 		.word	2160
 1172 0108 98080000 		.word	2200
 1173 010c 81080000 		.word	2177
 1174 0110 11080000 		.word	2065
 1175 0114 FC070000 		.word	2044
 1176 0118 D8050000 		.word	1496
 1177 011c 3B060000 		.word	1595
 1178 0120 C4070000 		.word	1988
 1179 0124 AA070000 		.word	1962
 1180 0128 D3070000 		.word	2003
 1181 012c C2070000 		.word	1986
 1182 0130 97080000 		.word	2199
 1183 0134 AE070000 		.word	1966
 1184 0138 A2070000 		.word	1954
 1185 013c BB070000 		.word	1979
 1186 0140 2C080000 		.word	2092
 1187 0144 3C080000 		.word	2108
 1188 0148 B2060000 		.word	1714
 1189 014c 07080000 		.word	2055
 1190 0150 D3070000 		.word	2003
 1191 0154 70060000 		.word	1648
 1192 0158 03080000 		.word	2051
 1193 015c 05070000 		.word	1797
 1194 0160 DB070000 		.word	2011
 1195 0164 EA070000 		.word	2026
 1196 0168 B0070000 		.word	1968
 1197 016c A3070000 		.word	1955
 1198 0170 57070000 		.word	1879
 1199 0174 0E070000 		.word	1806
 1200 0178 F8070000 		.word	2040
 1201 017c B0070000 		.word	1968
 1202 0180 AD080000 		.word	2221
 1203 0184 62070000 		.word	1890
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 50


 1204 0188 7E080000 		.word	2174
 1205 018c 70070000 		.word	1904
 1206 0190 A0070000 		.word	1952
 1207 0194 86070000 		.word	1926
 1208 0198 9D090000 		.word	2461
 1209 019c 39090000 		.word	2361
 1210 01a0 8C070000 		.word	1932
 1211 01a4 B6070000 		.word	1974
 1212 01a8 A4070000 		.word	1956
 1213 01ac AC070000 		.word	1964
 1214 01b0 FA070000 		.word	2042
 1215 01b4 3E070000 		.word	1854
 1216 01b8 AF070000 		.word	1967
 1217 01bc B6070000 		.word	1974
 1218 01c0 3A070000 		.word	1850
 1219 01c4 9D070000 		.word	1949
 1220 01c8 24080000 		.word	2084
 1221 01cc 14070000 		.word	1812
 1222 01d0 B6080000 		.word	2230
 1223 01d4 47070000 		.word	1863
 1224 01d8 5E080000 		.word	2142
 1225 01dc 19060000 		.word	1561
 1226 01e0 EE070000 		.word	2030
 1227 01e4 E9060000 		.word	1769
 1228 01e8 11090000 		.word	2321
 1229 01ec 1F070000 		.word	1823
 1230 01f0 0C060000 		.word	1548
 1231 01f4 020A0000 		.word	2562
 1232 01f8 3C070000 		.word	1852
 1233 01fc B2070000 		.word	1970
 1234              		.global	Piano_LUT
 1235              		.section	.data.Piano_LUT,"aw"
 1236              		.align	2
 1239              	Piano_LUT:
 1240 0000 6D070000 		.word	1901
 1241 0004 FE070000 		.word	2046
 1242 0008 2A070000 		.word	1834
 1243 000c A3070000 		.word	1955
 1244 0010 7C070000 		.word	1916
 1245 0014 98070000 		.word	1944
 1246 0018 62070000 		.word	1890
 1247 001c E4070000 		.word	2020
 1248 0020 A2070000 		.word	1954
 1249 0024 DF070000 		.word	2015
 1250 0028 94070000 		.word	1940
 1251 002c 74070000 		.word	1908
 1252 0030 4B070000 		.word	1867
 1253 0034 9F080000 		.word	2207
 1254 0038 79070000 		.word	1913
 1255 003c 3E060000 		.word	1598
 1256 0040 57070000 		.word	1879
 1257 0044 6B070000 		.word	1899
 1258 0048 1A070000 		.word	1818
 1259 004c 75070000 		.word	1909
 1260 0050 7E070000 		.word	1918
 1261 0054 70070000 		.word	1904
 1262 0058 7B050000 		.word	1403
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 51


 1263 005c 52070000 		.word	1874
 1264 0060 A0080000 		.word	2208
 1265 0064 69070000 		.word	1897
 1266 0068 EE0A0000 		.word	2798
 1267 006c F1050000 		.word	1521
 1268 0070 38060000 		.word	1592
 1269 0074 92060000 		.word	1682
 1270 0078 3E080000 		.word	2110
 1271 007c 0B080000 		.word	2059
 1272 0080 43050000 		.word	1347
 1273 0084 E9070000 		.word	2025
 1274 0088 19070000 		.word	1817
 1275 008c 7B070000 		.word	1915
 1276 0090 2D070000 		.word	1837
 1277 0094 99070000 		.word	1945
 1278 0098 1C060000 		.word	1564
 1279 009c 07070000 		.word	1799
 1280 00a0 F3060000 		.word	1779
 1281 00a4 A7070000 		.word	1959
 1282 00a8 48080000 		.word	2120
 1283 00ac E8060000 		.word	1768
 1284 00b0 49080000 		.word	2121
 1285 00b4 EF060000 		.word	1775
 1286 00b8 CE090000 		.word	2510
 1287 00bc 5A070000 		.word	1882
 1288 00c0 A2070000 		.word	1954
 1289 00c4 7E070000 		.word	1918
 1290 00c8 2B070000 		.word	1835
 1291 00cc 7E070000 		.word	1918
 1292 00d0 54070000 		.word	1876
 1293 00d4 62070000 		.word	1890
 1294 00d8 A70A0000 		.word	2727
 1295 00dc FE060000 		.word	1790
 1296 00e0 DF080000 		.word	2271
 1297 00e4 AC060000 		.word	1708
 1298 00e8 3A070000 		.word	1850
 1299 00ec 03070000 		.word	1795
 1300 00f0 05050000 		.word	1285
 1301 00f4 DB060000 		.word	1755
 1302 00f8 EF050000 		.word	1519
 1303 00fc 5F070000 		.word	1887
 1304 0100 4D060000 		.word	1613
 1305 0104 85070000 		.word	1925
 1306 0108 D3070000 		.word	2003
 1307 010c 6C070000 		.word	1900
 1308 0110 4A070000 		.word	1866
 1309 0114 51070000 		.word	1873
 1310 0118 0C060000 		.word	1548
 1311 011c DE070000 		.word	2014
 1312 0120 D1060000 		.word	1745
 1313 0124 96070000 		.word	1942
 1314 0128 5D060000 		.word	1629
 1315 012c 23090000 		.word	2339
 1316 0130 11080000 		.word	2065
 1317 0134 5D070000 		.word	1885
 1318 0138 BC080000 		.word	2236
 1319 013c F6070000 		.word	2038
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 52


 1320 0140 57070000 		.word	1879
 1321 0144 69070000 		.word	1897
 1322 0148 3F070000 		.word	1855
 1323 014c 87070000 		.word	1927
 1324 0150 5E070000 		.word	1886
 1325 0154 66070000 		.word	1894
 1326 0158 03080000 		.word	2051
 1327 015c 73070000 		.word	1907
 1328 0160 9A070000 		.word	1946
 1329 0164 ED060000 		.word	1773
 1330 0168 92060000 		.word	1682
 1331 016c 5E070000 		.word	1886
 1332 0170 46070000 		.word	1862
 1333 0174 2C080000 		.word	2092
 1334 0178 44070000 		.word	1860
 1335 017c AC070000 		.word	1964
 1336 0180 AE080000 		.word	2222
 1337 0184 72070000 		.word	1906
 1338 0188 8C070000 		.word	1932
 1339 018c 63070000 		.word	1891
 1340 0190 86070000 		.word	1926
 1341 0194 53070000 		.word	1875
 1342 0198 33060000 		.word	1587
 1343 019c E6060000 		.word	1766
 1344 01a0 32070000 		.word	1842
 1345 01a4 36070000 		.word	1846
 1346 01a8 E8070000 		.word	2024
 1347 01ac 95070000 		.word	1941
 1348 01b0 61070000 		.word	1889
 1349 01b4 39070000 		.word	1849
 1350 01b8 8B060000 		.word	1675
 1351 01bc DB070000 		.word	2011
 1352 01c0 40070000 		.word	1856
 1353 01c4 8F070000 		.word	1935
 1354 01c8 37070000 		.word	1847
 1355 01cc 87070000 		.word	1927
 1356 01d0 5C070000 		.word	1884
 1357 01d4 7B070000 		.word	1915
 1358 01d8 FC060000 		.word	1788
 1359 01dc DB060000 		.word	1755
 1360 01e0 92050000 		.word	1426
 1361 01e4 4F060000 		.word	1615
 1362 01e8 8C070000 		.word	1932
 1363 01ec 76070000 		.word	1910
 1364 01f0 3C070000 		.word	1852
 1365 01f4 F7060000 		.word	1783
 1366 01f8 9F070000 		.word	1951
 1367 01fc 6D070000 		.word	1901
 1368              		.global	Triangle_LUT
 1369              		.section	.data.Triangle_LUT,"aw"
 1370              		.align	2
 1373              	Triangle_LUT:
 1374 0000 00000000 		.word	0
 1375 0004 3F000000 		.word	63
 1376 0008 7F000000 		.word	127
 1377 000c BF000000 		.word	191
 1378 0010 FF000000 		.word	255
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 53


 1379 0014 3F010000 		.word	319
 1380 0018 7F010000 		.word	383
 1381 001c BF010000 		.word	447
 1382 0020 FF010000 		.word	511
 1383 0024 3F020000 		.word	575
 1384 0028 7F020000 		.word	639
 1385 002c BF020000 		.word	703
 1386 0030 FF020000 		.word	767
 1387 0034 3F030000 		.word	831
 1388 0038 7F030000 		.word	895
 1389 003c BF030000 		.word	959
 1390 0040 FF030000 		.word	1023
 1391 0044 3F040000 		.word	1087
 1392 0048 7F040000 		.word	1151
 1393 004c BF040000 		.word	1215
 1394 0050 FF040000 		.word	1279
 1395 0054 3F050000 		.word	1343
 1396 0058 7F050000 		.word	1407
 1397 005c BF050000 		.word	1471
 1398 0060 FF050000 		.word	1535
 1399 0064 3F060000 		.word	1599
 1400 0068 7F060000 		.word	1663
 1401 006c BF060000 		.word	1727
 1402 0070 FF060000 		.word	1791
 1403 0074 3F070000 		.word	1855
 1404 0078 7F070000 		.word	1919
 1405 007c BF070000 		.word	1983
 1406 0080 FF070000 		.word	2047
 1407 0084 3F080000 		.word	2111
 1408 0088 7F080000 		.word	2175
 1409 008c BF080000 		.word	2239
 1410 0090 FF080000 		.word	2303
 1411 0094 3F090000 		.word	2367
 1412 0098 7F090000 		.word	2431
 1413 009c BF090000 		.word	2495
 1414 00a0 FF090000 		.word	2559
 1415 00a4 3F0A0000 		.word	2623
 1416 00a8 7F0A0000 		.word	2687
 1417 00ac BF0A0000 		.word	2751
 1418 00b0 FF0A0000 		.word	2815
 1419 00b4 3F0B0000 		.word	2879
 1420 00b8 7F0B0000 		.word	2943
 1421 00bc BF0B0000 		.word	3007
 1422 00c0 FF0B0000 		.word	3071
 1423 00c4 3F0C0000 		.word	3135
 1424 00c8 7F0C0000 		.word	3199
 1425 00cc BF0C0000 		.word	3263
 1426 00d0 FF0C0000 		.word	3327
 1427 00d4 3F0D0000 		.word	3391
 1428 00d8 7F0D0000 		.word	3455
 1429 00dc BF0D0000 		.word	3519
 1430 00e0 FF0D0000 		.word	3583
 1431 00e4 3F0E0000 		.word	3647
 1432 00e8 7F0E0000 		.word	3711
 1433 00ec BF0E0000 		.word	3775
 1434 00f0 FF0E0000 		.word	3839
 1435 00f4 3F0F0000 		.word	3903
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 54


 1436 00f8 7F0F0000 		.word	3967
 1437 00fc BF0F0000 		.word	4031
 1438 0100 FF0F0000 		.word	4095
 1439 0104 BF0F0000 		.word	4031
 1440 0108 7F0F0000 		.word	3967
 1441 010c 3F0F0000 		.word	3903
 1442 0110 FF0E0000 		.word	3839
 1443 0114 BF0E0000 		.word	3775
 1444 0118 7F0E0000 		.word	3711
 1445 011c 3F0E0000 		.word	3647
 1446 0120 FF0D0000 		.word	3583
 1447 0124 BF0D0000 		.word	3519
 1448 0128 7F0D0000 		.word	3455
 1449 012c 3F0D0000 		.word	3391
 1450 0130 FF0C0000 		.word	3327
 1451 0134 BF0C0000 		.word	3263
 1452 0138 7F0C0000 		.word	3199
 1453 013c 3F0C0000 		.word	3135
 1454 0140 FF0B0000 		.word	3071
 1455 0144 BF0B0000 		.word	3007
 1456 0148 7F0B0000 		.word	2943
 1457 014c 3F0B0000 		.word	2879
 1458 0150 FF0A0000 		.word	2815
 1459 0154 BF0A0000 		.word	2751
 1460 0158 7F0A0000 		.word	2687
 1461 015c 3F0A0000 		.word	2623
 1462 0160 FF090000 		.word	2559
 1463 0164 BF090000 		.word	2495
 1464 0168 7F090000 		.word	2431
 1465 016c 3F090000 		.word	2367
 1466 0170 FF080000 		.word	2303
 1467 0174 BF080000 		.word	2239
 1468 0178 7F080000 		.word	2175
 1469 017c 3F080000 		.word	2111
 1470 0180 FF070000 		.word	2047
 1471 0184 BF070000 		.word	1983
 1472 0188 7F070000 		.word	1919
 1473 018c 3F070000 		.word	1855
 1474 0190 FF060000 		.word	1791
 1475 0194 BF060000 		.word	1727
 1476 0198 7F060000 		.word	1663
 1477 019c 3F060000 		.word	1599
 1478 01a0 FF050000 		.word	1535
 1479 01a4 BF050000 		.word	1471
 1480 01a8 7F050000 		.word	1407
 1481 01ac 3F050000 		.word	1343
 1482 01b0 FF040000 		.word	1279
 1483 01b4 BF040000 		.word	1215
 1484 01b8 7F040000 		.word	1151
 1485 01bc 3F040000 		.word	1087
 1486 01c0 FF030000 		.word	1023
 1487 01c4 BF030000 		.word	959
 1488 01c8 7F030000 		.word	895
 1489 01cc 3F030000 		.word	831
 1490 01d0 FF020000 		.word	767
 1491 01d4 BF020000 		.word	703
 1492 01d8 7F020000 		.word	639
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 55


 1493 01dc 3F020000 		.word	575
 1494 01e0 FF010000 		.word	511
 1495 01e4 BF010000 		.word	447
 1496 01e8 7F010000 		.word	383
 1497 01ec 3F010000 		.word	319
 1498 01f0 FF000000 		.word	255
 1499 01f4 BF000000 		.word	191
 1500 01f8 7F000000 		.word	127
 1501 01fc 3F000000 		.word	63
 1502              		.global	Saw_LUT
 1503              		.section	.data.Saw_LUT,"aw"
 1504              		.align	2
 1507              	Saw_LUT:
 1508 0000 00000000 		.word	0
 1509 0004 1F000000 		.word	31
 1510 0008 3F000000 		.word	63
 1511 000c 5F000000 		.word	95
 1512 0010 7F000000 		.word	127
 1513 0014 9F000000 		.word	159
 1514 0018 BF000000 		.word	191
 1515 001c DF000000 		.word	223
 1516 0020 FF000000 		.word	255
 1517 0024 1F010000 		.word	287
 1518 0028 3F010000 		.word	319
 1519 002c 5F010000 		.word	351
 1520 0030 7F010000 		.word	383
 1521 0034 9F010000 		.word	415
 1522 0038 BF010000 		.word	447
 1523 003c DF010000 		.word	479
 1524 0040 FF010000 		.word	511
 1525 0044 1F020000 		.word	543
 1526 0048 3F020000 		.word	575
 1527 004c 5F020000 		.word	607
 1528 0050 7F020000 		.word	639
 1529 0054 9F020000 		.word	671
 1530 0058 BF020000 		.word	703
 1531 005c DF020000 		.word	735
 1532 0060 FF020000 		.word	767
 1533 0064 1F030000 		.word	799
 1534 0068 3F030000 		.word	831
 1535 006c 5F030000 		.word	863
 1536 0070 7F030000 		.word	895
 1537 0074 9F030000 		.word	927
 1538 0078 BF030000 		.word	959
 1539 007c DF030000 		.word	991
 1540 0080 FF030000 		.word	1023
 1541 0084 1F040000 		.word	1055
 1542 0088 3F040000 		.word	1087
 1543 008c 5F040000 		.word	1119
 1544 0090 7F040000 		.word	1151
 1545 0094 9F040000 		.word	1183
 1546 0098 BF040000 		.word	1215
 1547 009c DF040000 		.word	1247
 1548 00a0 FF040000 		.word	1279
 1549 00a4 1F050000 		.word	1311
 1550 00a8 3F050000 		.word	1343
 1551 00ac 5F050000 		.word	1375
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 56


 1552 00b0 7F050000 		.word	1407
 1553 00b4 9F050000 		.word	1439
 1554 00b8 BF050000 		.word	1471
 1555 00bc DF050000 		.word	1503
 1556 00c0 FF050000 		.word	1535
 1557 00c4 1F060000 		.word	1567
 1558 00c8 3F060000 		.word	1599
 1559 00cc 5F060000 		.word	1631
 1560 00d0 7F060000 		.word	1663
 1561 00d4 9F060000 		.word	1695
 1562 00d8 BF060000 		.word	1727
 1563 00dc DF060000 		.word	1759
 1564 00e0 FF060000 		.word	1791
 1565 00e4 1F070000 		.word	1823
 1566 00e8 3F070000 		.word	1855
 1567 00ec 5F070000 		.word	1887
 1568 00f0 7F070000 		.word	1919
 1569 00f4 9F070000 		.word	1951
 1570 00f8 BF070000 		.word	1983
 1571 00fc DF070000 		.word	2015
 1572 0100 FF070000 		.word	2047
 1573 0104 1F080000 		.word	2079
 1574 0108 3F080000 		.word	2111
 1575 010c 5F080000 		.word	2143
 1576 0110 7F080000 		.word	2175
 1577 0114 9F080000 		.word	2207
 1578 0118 BF080000 		.word	2239
 1579 011c DF080000 		.word	2271
 1580 0120 FF080000 		.word	2303
 1581 0124 1F090000 		.word	2335
 1582 0128 3F090000 		.word	2367
 1583 012c 5F090000 		.word	2399
 1584 0130 7F090000 		.word	2431
 1585 0134 9F090000 		.word	2463
 1586 0138 BF090000 		.word	2495
 1587 013c DF090000 		.word	2527
 1588 0140 FF090000 		.word	2559
 1589 0144 1F0A0000 		.word	2591
 1590 0148 3F0A0000 		.word	2623
 1591 014c 5F0A0000 		.word	2655
 1592 0150 7F0A0000 		.word	2687
 1593 0154 9F0A0000 		.word	2719
 1594 0158 BF0A0000 		.word	2751
 1595 015c DF0A0000 		.word	2783
 1596 0160 FF0A0000 		.word	2815
 1597 0164 1F0B0000 		.word	2847
 1598 0168 3F0B0000 		.word	2879
 1599 016c 5F0B0000 		.word	2911
 1600 0170 7F0B0000 		.word	2943
 1601 0174 9F0B0000 		.word	2975
 1602 0178 BF0B0000 		.word	3007
 1603 017c DF0B0000 		.word	3039
 1604 0180 FF0B0000 		.word	3071
 1605 0184 1F0C0000 		.word	3103
 1606 0188 3F0C0000 		.word	3135
 1607 018c 5F0C0000 		.word	3167
 1608 0190 7F0C0000 		.word	3199
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 57


 1609 0194 9F0C0000 		.word	3231
 1610 0198 BF0C0000 		.word	3263
 1611 019c DF0C0000 		.word	3295
 1612 01a0 FF0C0000 		.word	3327
 1613 01a4 1F0D0000 		.word	3359
 1614 01a8 3F0D0000 		.word	3391
 1615 01ac 5F0D0000 		.word	3423
 1616 01b0 7F0D0000 		.word	3455
 1617 01b4 9F0D0000 		.word	3487
 1618 01b8 BF0D0000 		.word	3519
 1619 01bc DF0D0000 		.word	3551
 1620 01c0 FF0D0000 		.word	3583
 1621 01c4 1F0E0000 		.word	3615
 1622 01c8 3F0E0000 		.word	3647
 1623 01cc 5F0E0000 		.word	3679
 1624 01d0 7F0E0000 		.word	3711
 1625 01d4 9F0E0000 		.word	3743
 1626 01d8 BF0E0000 		.word	3775
 1627 01dc DF0E0000 		.word	3807
 1628 01e0 FF0E0000 		.word	3839
 1629 01e4 1F0F0000 		.word	3871
 1630 01e8 3F0F0000 		.word	3903
 1631 01ec 5F0F0000 		.word	3935
 1632 01f0 7F0F0000 		.word	3967
 1633 01f4 9F0F0000 		.word	3999
 1634 01f8 BF0F0000 		.word	4031
 1635 01fc DF0F0000 		.word	4063
 1636              		.global	Sin_LUT
 1637              		.section	.data.Sin_LUT,"aw"
 1638              		.align	2
 1641              	Sin_LUT:
 1642 0000 FF070000 		.word	2047
 1643 0004 63080000 		.word	2147
 1644 0008 C8080000 		.word	2248
 1645 000c 2B090000 		.word	2347
 1646 0010 8E090000 		.word	2446
 1647 0014 F1090000 		.word	2545
 1648 0018 510A0000 		.word	2641
 1649 001c B10A0000 		.word	2737
 1650 0020 0F0B0000 		.word	2831
 1651 0024 6A0B0000 		.word	2922
 1652 0028 C40B0000 		.word	3012
 1653 002c 1C0C0000 		.word	3100
 1654 0030 710C0000 		.word	3185
 1655 0034 C30C0000 		.word	3267
 1656 0038 120D0000 		.word	3346
 1657 003c 5E0D0000 		.word	3422
 1658 0040 A70D0000 		.word	3495
 1659 0044 EC0D0000 		.word	3564
 1660 0048 2E0E0000 		.word	3630
 1661 004c 6C0E0000 		.word	3692
 1662 0050 A50E0000 		.word	3749
 1663 0054 DB0E0000 		.word	3803
 1664 0058 0D0F0000 		.word	3853
 1665 005c 3A0F0000 		.word	3898
 1666 0060 630F0000 		.word	3939
 1667 0064 870F0000 		.word	3975
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 58


 1668 0068 A60F0000 		.word	4006
 1669 006c C10F0000 		.word	4033
 1670 0070 D70F0000 		.word	4055
 1671 0074 E80F0000 		.word	4072
 1672 0078 F50F0000 		.word	4085
 1673 007c FC0F0000 		.word	4092
 1674 0080 FF0F0000 		.word	4095
 1675 0084 FC0F0000 		.word	4092
 1676 0088 F50F0000 		.word	4085
 1677 008c E80F0000 		.word	4072
 1678 0090 D70F0000 		.word	4055
 1679 0094 C10F0000 		.word	4033
 1680 0098 A60F0000 		.word	4006
 1681 009c 870F0000 		.word	3975
 1682 00a0 630F0000 		.word	3939
 1683 00a4 3A0F0000 		.word	3898
 1684 00a8 0D0F0000 		.word	3853
 1685 00ac DB0E0000 		.word	3803
 1686 00b0 A50E0000 		.word	3749
 1687 00b4 6C0E0000 		.word	3692
 1688 00b8 2E0E0000 		.word	3630
 1689 00bc EC0D0000 		.word	3564
 1690 00c0 A70D0000 		.word	3495
 1691 00c4 5E0D0000 		.word	3422
 1692 00c8 120D0000 		.word	3346
 1693 00cc C30C0000 		.word	3267
 1694 00d0 710C0000 		.word	3185
 1695 00d4 1C0C0000 		.word	3100
 1696 00d8 C40B0000 		.word	3012
 1697 00dc 6A0B0000 		.word	2922
 1698 00e0 0F0B0000 		.word	2831
 1699 00e4 B10A0000 		.word	2737
 1700 00e8 510A0000 		.word	2641
 1701 00ec F1090000 		.word	2545
 1702 00f0 8E090000 		.word	2446
 1703 00f4 2B090000 		.word	2347
 1704 00f8 C8080000 		.word	2248
 1705 00fc 63080000 		.word	2147
 1706 0100 FF070000 		.word	2047
 1707 0104 9B070000 		.word	1947
 1708 0108 36070000 		.word	1846
 1709 010c D3060000 		.word	1747
 1710 0110 70060000 		.word	1648
 1711 0114 0D060000 		.word	1549
 1712 0118 AD050000 		.word	1453
 1713 011c 4D050000 		.word	1357
 1714 0120 EF040000 		.word	1263
 1715 0124 94040000 		.word	1172
 1716 0128 3A040000 		.word	1082
 1717 012c E2030000 		.word	994
 1718 0130 8D030000 		.word	909
 1719 0134 3B030000 		.word	827
 1720 0138 EC020000 		.word	748
 1721 013c A0020000 		.word	672
 1722 0140 57020000 		.word	599
 1723 0144 12020000 		.word	530
 1724 0148 D0010000 		.word	464
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 59


 1725 014c 92010000 		.word	402
 1726 0150 59010000 		.word	345
 1727 0154 23010000 		.word	291
 1728 0158 F1000000 		.word	241
 1729 015c C4000000 		.word	196
 1730 0160 9B000000 		.word	155
 1731 0164 77000000 		.word	119
 1732 0168 58000000 		.word	88
 1733 016c 3D000000 		.word	61
 1734 0170 27000000 		.word	39
 1735 0174 16000000 		.word	22
 1736 0178 09000000 		.word	9
 1737 017c 02000000 		.word	2
 1738 0180 00000000 		.word	0
 1739 0184 02000000 		.word	2
 1740 0188 09000000 		.word	9
 1741 018c 16000000 		.word	22
 1742 0190 27000000 		.word	39
 1743 0194 3D000000 		.word	61
 1744 0198 58000000 		.word	88
 1745 019c 77000000 		.word	119
 1746 01a0 9B000000 		.word	155
 1747 01a4 C4000000 		.word	196
 1748 01a8 F1000000 		.word	241
 1749 01ac 23010000 		.word	291
 1750 01b0 59010000 		.word	345
 1751 01b4 92010000 		.word	402
 1752 01b8 D0010000 		.word	464
 1753 01bc 12020000 		.word	530
 1754 01c0 57020000 		.word	599
 1755 01c4 A0020000 		.word	672
 1756 01c8 EC020000 		.word	748
 1757 01cc 3B030000 		.word	827
 1758 01d0 8D030000 		.word	909
 1759 01d4 E2030000 		.word	994
 1760 01d8 3A040000 		.word	1082
 1761 01dc 94040000 		.word	1172
 1762 01e0 EF040000 		.word	1263
 1763 01e4 4D050000 		.word	1357
 1764 01e8 AD050000 		.word	1453
 1765 01ec 0D060000 		.word	1549
 1766 01f0 70060000 		.word	1648
 1767 01f4 D3060000 		.word	1747
 1768 01f8 36070000 		.word	1846
 1769 01fc 9B070000 		.word	1947
 1770              		.global	hdma_tim2_ch1
 1771              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 1772              		.align	2
 1775              	hdma_tim2_ch1:
 1776 0000 00000000 		.space	96
 1776      00000000 
 1776      00000000 
 1776      00000000 
 1776      00000000 
 1777              		.global	htim3
 1778              		.section	.bss.htim3,"aw",%nobits
 1779              		.align	2
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 60


 1782              	htim3:
 1783 0000 00000000 		.space	72
 1783      00000000 
 1783      00000000 
 1783      00000000 
 1783      00000000 
 1784              		.global	htim2
 1785              		.section	.bss.htim2,"aw",%nobits
 1786              		.align	2
 1789              	htim2:
 1790 0000 00000000 		.space	72
 1790      00000000 
 1790      00000000 
 1790      00000000 
 1790      00000000 
 1791              		.text
 1792              	.Letext0:
 1793              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1794              		.file 4 "C:/Users/nhlan/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1795              		.file 5 "C:/Users/nhlan/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1796              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1797              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1798              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1799              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1800              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1801              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1802              		.file 12 "Core/Inc/main.h"
 1803              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1804              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1805              		.file 15 "Core/Inc/lcd_stm32f4.h"
 1806              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1807              		.file 17 "<built-in>"
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:189    .text.MX_GPIO_Init:000000d4 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:197    .text.MX_DMA_Init:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:202    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:248    .text.MX_DMA_Init:00000030 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:253    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:259    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:279    .text.Error_Handler:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:285    .text.Error_Handler:00000000 Error_Handler
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:317    .text.MX_TIM2_Init:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:322    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:545    .text.MX_TIM2_Init:000000f8 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1789   .bss.htim2:00000000 htim2
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1775   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:553    .text.MX_TIM3_Init:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:558    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:707    .text.MX_TIM3_Init:0000009c $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1782   .bss.htim3:00000000 htim3
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:713    .text.SystemClock_Config:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:719    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:846    .text.SystemClock_Config:00000084 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:852    .rodata.main.str1.4:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:856    .text.main:00000000 $t
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:862    .text.main:00000000 main
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:944    .text.main:00000064 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1641   .data.Sin_LUT:00000000 Sin_LUT
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:957    .data.DestAddress:00000000 DestAddress
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:954    .data.DestAddress:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:964    .data.TIM2_Ticks:00000000 TIM2_Ticks
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:961    .data.TIM2_Ticks:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:971    .data.Drum_LUT:00000000 Drum_LUT
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:968    .data.Drum_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1105   .data.Guitar_LUT:00000000 Guitar_LUT
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1102   .data.Guitar_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1239   .data.Piano_LUT:00000000 Piano_LUT
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1236   .data.Piano_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1373   .data.Triangle_LUT:00000000 Triangle_LUT
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1370   .data.Triangle_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1507   .data.Saw_LUT:00000000 Saw_LUT
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1504   .data.Saw_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1638   .data.Sin_LUT:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1772   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1779   .bss.htim3:00000000 $d
C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s:1786   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
ARM GAS  C:\Users\nhlan\AppData\Local\Temp\ccGZDyp7.s 			page 62


HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_DMA_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
HAL_DMA_Start_IT
init_LCD
lcd_command
lcd_putstring
